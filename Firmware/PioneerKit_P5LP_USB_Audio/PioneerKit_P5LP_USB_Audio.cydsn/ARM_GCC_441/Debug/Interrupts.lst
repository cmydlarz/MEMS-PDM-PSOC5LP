ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"Interrupts.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 C6000000 		.text
  20      02005900 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.InDMADone_Interrupt,"ax",%progbits
  24              		.align	2
  25              		.global	InDMADone_Interrupt
  26              		.thumb
  27              		.thumb_func
  28              		.type	InDMADone_Interrupt, %function
  29              	InDMADone_Interrupt:
  30              	.LFB29:
  31              		.file 1 ".\\Interrupts.c"
   1:.\Interrupts.c **** /*******************************************************************************
   2:.\Interrupts.c **** * File Name: Interrupts.c
   3:.\Interrupts.c **** *
   4:.\Interrupts.c **** * Version 1.0
   5:.\Interrupts.c **** *
   6:.\Interrupts.c **** *  Description: This file contains interrupt service routines for all the interrupts
   7:.\Interrupts.c **** *               in the system
   8:.\Interrupts.c **** *
   9:.\Interrupts.c **** ********************************************************************************
  10:.\Interrupts.c **** * Copyright (2008-2013), Cypress Semiconductor Corporation.
  11:.\Interrupts.c **** ********************************************************************************
  12:.\Interrupts.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  13:.\Interrupts.c **** * protected by and subject to worldwide patent protection (United States and
  14:.\Interrupts.c **** * foreign), United States copyright laws and international treaty provisions.
  15:.\Interrupts.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  16:.\Interrupts.c **** * license to copy, use, modify, create derivative works of, and compile the
  17:.\Interrupts.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  18:.\Interrupts.c **** * custom software in support of licensee product to be used only in conjunction
  19:.\Interrupts.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  20:.\Interrupts.c **** * Any reproduction, modification, translation, compilation, or representation of
  21:.\Interrupts.c **** * this software except as specified above is prohibited without the express
  22:.\Interrupts.c **** * written permission of Cypress.
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 2


  23:.\Interrupts.c **** *
  24:.\Interrupts.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  25:.\Interrupts.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  26:.\Interrupts.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  27:.\Interrupts.c **** * Cypress reserves the right to make changes without further notice to the
  28:.\Interrupts.c **** * materials described herein. Cypress does not assume any liability arising out
  29:.\Interrupts.c **** * of the application or use of any product or circuit described herein. Cypress
  30:.\Interrupts.c **** * does not authorize its products for use as critical components in life-support
  31:.\Interrupts.c **** * systems where a malfunction or failure may reasonably be expected to result in
  32:.\Interrupts.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  33:.\Interrupts.c **** * support systems application implies that the manufacturer assumes all risk of
  34:.\Interrupts.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  35:.\Interrupts.c **** * limited by and subject to the applicable Cypress software license agreement.
  36:.\Interrupts.c **** *******************************************************************************/
  37:.\Interrupts.c **** #include <Application.h>
  38:.\Interrupts.c **** #include <AudioControl.h>
  39:.\Interrupts.c **** #include <Configuration.h>
  40:.\Interrupts.c **** #include <device.h>
  41:.\Interrupts.c **** #include <Interrupts.h>
  42:.\Interrupts.c **** #include <USBInterface.h>
  43:.\Interrupts.c **** extern uint16 inCnt;
  44:.\Interrupts.c **** extern uint16 inLevel;
  45:.\Interrupts.c **** extern uint16 inUsbCount;
  46:.\Interrupts.c **** extern uint16 inUsbShadow;
  47:.\Interrupts.c **** extern CYBIT applicationTimerTick;
  48:.\Interrupts.c **** extern uint16 outLevel;
  49:.\Interrupts.c **** extern uint16 outUsbCount;
  50:.\Interrupts.c **** extern uint16 outUsbShadow;
  51:.\Interrupts.c **** 
  52:.\Interrupts.c **** extern volatile uint8 USBFS_device;
  53:.\Interrupts.c **** 
  54:.\Interrupts.c **** #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
  55:.\Interrupts.c **** extern CYBIT inPlaying;
  56:.\Interrupts.c **** #endif
  57:.\Interrupts.c **** 
  58:.\Interrupts.c **** #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY
  59:.\Interrupts.c **** extern CYBIT outPlaying;
  60:.\Interrupts.c **** #endif
  61:.\Interrupts.c **** 
  62:.\Interrupts.c **** /*******************************************************************************
  63:.\Interrupts.c **** * Function Name: InDMADone_Interrupt
  64:.\Interrupts.c **** ********************************************************************************
  65:.\Interrupts.c **** * Summary:
  66:.\Interrupts.c **** *   The Interrupt Service Routine for isr_InDMADone. Arms USB Audio In end-point
  67:.\Interrupts.c **** * 	for USB host to receive audio data.
  68:.\Interrupts.c **** *
  69:.\Interrupts.c **** * Parameters:  
  70:.\Interrupts.c **** *	InDMADone interrupt vector
  71:.\Interrupts.c **** *
  72:.\Interrupts.c **** * Return:
  73:.\Interrupts.c **** *   void.
  74:.\Interrupts.c **** *
  75:.\Interrupts.c **** *******************************************************************************/
  76:.\Interrupts.c **** CY_ISR(InDMADone_Interrupt)
  77:.\Interrupts.c **** {
  32              		.loc 1 77 0
  33              		.cfi_startproc
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 3


  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39 0002 00AF     		add	r7, sp, #0
  40              		.cfi_offset 14, -4
  41              		.cfi_offset 7, -8
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  78:.\Interrupts.c ****     #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY
  79:.\Interrupts.c ****     /* Parameters to this API Call CHANGES DEPENDING ON DATA ENDPOINT MEMORY MODE */
  80:.\Interrupts.c ****     USBFS_LoadInEP(AUDIO_IN_ENDPOINT, USBFS_NULL, inCnt);
  44              		.loc 1 80 0
  45 0004 40F20003 		movw	r3, #:lower16:inCnt
  46 0008 C0F20003 		movt	r3, #:upper16:inCnt
  47 000c 1B88     		ldrh	r3, [r3, #0]
  48 000e 4FF00200 		mov	r0, #2
  49 0012 4FF00001 		mov	r1, #0
  50 0016 1A46     		mov	r2, r3
  51 0018 FFF7FEFF 		bl	USBFS_LoadInEP
  81:.\Interrupts.c **** 	#endif
  82:.\Interrupts.c ****     
  83:.\Interrupts.c ****     /* USER_CODE: [Audio IN EP loaded] This ISR is triggered once the required audio IN data for th
  84:.\Interrupts.c ****      * transfer is made available at the USB audio IN endpoint memory */
  85:.\Interrupts.c **** }
  52              		.loc 1 85 0
  53 001c 80BD     		pop	{r7, pc}
  54              		.cfi_endproc
  55              	.LFE29:
  56              		.size	InDMADone_Interrupt, .-InDMADone_Interrupt
  57 001e 00BF     		.section	.text.RxDMADone_Interrupt,"ax",%progbits
  58              		.align	2
  59              		.global	RxDMADone_Interrupt
  60              		.thumb
  61              		.thumb_func
  62              		.type	RxDMADone_Interrupt, %function
  63              	RxDMADone_Interrupt:
  64              	.LFB30:
  86:.\Interrupts.c **** 
  87:.\Interrupts.c **** /*******************************************************************************
  88:.\Interrupts.c **** * Function Name: RxDMADone_Interrupt
  89:.\Interrupts.c **** ********************************************************************************
  90:.\Interrupts.c **** * Summary:
  91:.\Interrupts.c **** *   The Interrupt Service Routine for isr_RxDMADone. This handles the AUDIO In
  92:.\Interrupts.c **** *	buffer pointers and detects overflow of the buffer to stop AUDIO In. 
  93:.\Interrupts.c **** *
  94:.\Interrupts.c **** * Parameters:  
  95:.\Interrupts.c **** *	RxDMADone interrupt vector
  96:.\Interrupts.c **** *
  97:.\Interrupts.c **** * Return:
  98:.\Interrupts.c **** *   void.
  99:.\Interrupts.c **** *
 100:.\Interrupts.c **** *******************************************************************************/
 101:.\Interrupts.c **** CY_ISR(RxDMADone_Interrupt)
 102:.\Interrupts.c **** {
  65              		.loc 1 102 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 4


  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 8
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69 0000 80B5     		push	{r7, lr}
  70              	.LCFI2:
  71              		.cfi_def_cfa_offset 8
  72 0002 82B0     		sub	sp, sp, #8
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 16
  75 0004 00AF     		add	r7, sp, #0
  76              		.cfi_offset 14, -4
  77              		.cfi_offset 7, -8
  78              	.LCFI4:
  79              		.cfi_def_cfa_register 7
 103:.\Interrupts.c ****     #ifndef ENABLE_DIGITAL_AUDIO_OUT_ONLY 
 104:.\Interrupts.c ****     uint16 removed;
 105:.\Interrupts.c **** 	
 106:.\Interrupts.c **** 	/* Note: Care must be taken in the application code to update inUsbCount atomically */
 107:.\Interrupts.c **** 	removed = inUsbCount - inUsbShadow;
  80              		.loc 1 107 0
  81 0006 40F20003 		movw	r3, #:lower16:inUsbCount
  82 000a C0F20003 		movt	r3, #:upper16:inUsbCount
  83 000e 1A88     		ldrh	r2, [r3, #0]
  84 0010 40F20003 		movw	r3, #:lower16:inUsbShadow
  85 0014 C0F20003 		movt	r3, #:upper16:inUsbShadow
  86 0018 1B88     		ldrh	r3, [r3, #0]
  87 001a C3EB0203 		rsb	r3, r3, r2
  88 001e FB80     		strh	r3, [r7, #6]	@ movhi
 108:.\Interrupts.c **** 	inLevel -= removed;
  89              		.loc 1 108 0
  90 0020 40F20003 		movw	r3, #:lower16:inLevel
  91 0024 C0F20003 		movt	r3, #:upper16:inLevel
  92 0028 1A88     		ldrh	r2, [r3, #0]
  93 002a FB88     		ldrh	r3, [r7, #6]	@ movhi
  94 002c C3EB0203 		rsb	r3, r3, r2
  95 0030 9AB2     		uxth	r2, r3
  96 0032 40F20003 		movw	r3, #:lower16:inLevel
  97 0036 C0F20003 		movt	r3, #:upper16:inLevel
  98 003a 1A80     		strh	r2, [r3, #0]	@ movhi
 109:.\Interrupts.c ****     
 110:.\Interrupts.c ****     #if 0
 111:.\Interrupts.c **** 	if (inLevel <= IN_TRANS_SIZE) 
 112:.\Interrupts.c **** 		for(;;) ;		/* Underflow should not happen */
 113:.\Interrupts.c ****     #endif
 114:.\Interrupts.c ****     
 115:.\Interrupts.c **** 	inUsbShadow = inUsbCount;
  99              		.loc 1 115 0
 100 003c 40F20003 		movw	r3, #:lower16:inUsbCount
 101 0040 C0F20003 		movt	r3, #:upper16:inUsbCount
 102 0044 1A88     		ldrh	r2, [r3, #0]
 103 0046 40F20003 		movw	r3, #:lower16:inUsbShadow
 104 004a C0F20003 		movt	r3, #:upper16:inUsbShadow
 105 004e 1A80     		strh	r2, [r3, #0]	@ movhi
 116:.\Interrupts.c **** 		
 117:.\Interrupts.c **** 	if (inLevel >= IN_BUFSIZE) 
 106              		.loc 1 117 0
 107 0050 40F20003 		movw	r3, #:lower16:inLevel
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 5


 108 0054 C0F20003 		movt	r3, #:upper16:inLevel
 109 0058 1A88     		ldrh	r2, [r3, #0]
 110 005a 40F2FF23 		movw	r3, #767
 111 005e 9A42     		cmp	r2, r3
 112 0060 02D9     		bls	.L4
 118:.\Interrupts.c ****     {
 119:.\Interrupts.c ****        Stop_PDM_InPath();
 113              		.loc 1 119 0
 114 0062 FFF7FEFF 		bl	Stop_PDM_InPath
 115 0066 0CE0     		b	.L6
 116              	.L4:
 120:.\Interrupts.c **** 	}
 121:.\Interrupts.c **** 	else 
 122:.\Interrupts.c ****     {
 123:.\Interrupts.c **** 		inLevel += IN_TRANS_SIZE;
 117              		.loc 1 123 0
 118 0068 40F20003 		movw	r3, #:lower16:inLevel
 119 006c C0F20003 		movt	r3, #:upper16:inLevel
 120 0070 1B88     		ldrh	r3, [r3, #0]
 121 0072 03F16003 		add	r3, r3, #96
 122 0076 9AB2     		uxth	r2, r3
 123 0078 40F20003 		movw	r3, #:lower16:inLevel
 124 007c C0F20003 		movt	r3, #:upper16:inLevel
 125 0080 1A80     		strh	r2, [r3, #0]	@ movhi
 126              	.L6:
 124:.\Interrupts.c **** 	}
 125:.\Interrupts.c ****     #endif
 126:.\Interrupts.c ****     
 127:.\Interrupts.c ****     /* USER_CODE: [Audio IN buffer pointers] ISR triggered by audio IN data transfer DMA (see TopDe
 128:.\Interrupts.c ****      * the audio IN buffer pointers */
 129:.\Interrupts.c **** }
 127              		.loc 1 129 0
 128 0082 07F10807 		add	r7, r7, #8
 129 0086 BD46     		mov	sp, r7
 130 0088 80BD     		pop	{r7, pc}
 131              		.cfi_endproc
 132              	.LFE30:
 133              		.size	RxDMADone_Interrupt, .-RxDMADone_Interrupt
 134 008a 00BF     		.section	.text.Tick_Interrupt,"ax",%progbits
 135              		.align	2
 136              		.global	Tick_Interrupt
 137              		.thumb
 138              		.thumb_func
 139              		.type	Tick_Interrupt, %function
 140              	Tick_Interrupt:
 141              	.LFB31:
 130:.\Interrupts.c **** 
 131:.\Interrupts.c **** /*******************************************************************************
 132:.\Interrupts.c **** * Function Name: Tick_Interrupt
 133:.\Interrupts.c **** ********************************************************************************
 134:.\Interrupts.c **** * Summary:
 135:.\Interrupts.c **** *   The Interrupt Service Routine for isr_Tick. Sets flag for the timer function
 136:.\Interrupts.c **** *	to manage all counting operations
 137:.\Interrupts.c **** *
 138:.\Interrupts.c **** * Parameters:  
 139:.\Interrupts.c **** *	Sleep Timer tick interrupt vector
 140:.\Interrupts.c **** *
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 6


 141:.\Interrupts.c **** * Return:
 142:.\Interrupts.c **** *   void.
 143:.\Interrupts.c **** *
 144:.\Interrupts.c **** *******************************************************************************/
 145:.\Interrupts.c **** CY_ISR(Tick_Interrupt)
 146:.\Interrupts.c **** {
 142              		.loc 1 146 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147 0000 80B4     		push	{r7}
 148              	.LCFI5:
 149              		.cfi_def_cfa_offset 4
 150 0002 00AF     		add	r7, sp, #0
 151              		.cfi_offset 7, -4
 152              	.LCFI6:
 153              		.cfi_def_cfa_register 7
 147:.\Interrupts.c ****     applicationTimerTick = CY_PM_INT_SR_REG;	
 154              		.loc 1 147 0
 155 0004 44F29033 		movw	r3, #:lower16:1073759120
 156 0008 C4F20003 		movt	r3, #:upper16:1073759120
 157 000c 1B78     		ldrb	r3, [r3, #0]
 158 000e DAB2     		uxtb	r2, r3
 159 0010 40F20003 		movw	r3, #:lower16:applicationTimerTick
 160 0014 C0F20003 		movt	r3, #:upper16:applicationTimerTick
 161 0018 1A70     		strb	r2, [r3, #0]
 148:.\Interrupts.c **** 	applicationTimerTick = TRUE;
 162              		.loc 1 148 0
 163 001a 40F20003 		movw	r3, #:lower16:applicationTimerTick
 164 001e C0F20003 		movt	r3, #:upper16:applicationTimerTick
 165 0022 4FF00102 		mov	r2, #1
 166 0026 1A70     		strb	r2, [r3, #0]
 149:.\Interrupts.c **** }
 167              		.loc 1 149 0
 168 0028 BD46     		mov	sp, r7
 169 002a 80BC     		pop	{r7}
 170 002c 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE31:
 173              		.size	Tick_Interrupt, .-Tick_Interrupt
 174 002e 00BF     		.section	.text.TxDMADone_Interrupt,"ax",%progbits
 175              		.align	2
 176              		.global	TxDMADone_Interrupt
 177              		.thumb
 178              		.thumb_func
 179              		.type	TxDMADone_Interrupt, %function
 180              	TxDMADone_Interrupt:
 181              	.LFB32:
 150:.\Interrupts.c **** 
 151:.\Interrupts.c **** /*******************************************************************************
 152:.\Interrupts.c **** * Function Name: TxDMADone_Interrupt
 153:.\Interrupts.c **** ********************************************************************************
 154:.\Interrupts.c **** * Summary:
 155:.\Interrupts.c **** *   The Interrupt Service Routine for isr_TxDMADone. This handles the AUDIO Out
 156:.\Interrupts.c **** *	buffer pointers and detects underflow of the buffer to stop AUDIO out.
 157:.\Interrupts.c **** *
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 7


 158:.\Interrupts.c **** * Parameters:  
 159:.\Interrupts.c **** *	TxDMADone interrupt vector
 160:.\Interrupts.c **** *
 161:.\Interrupts.c **** * Return:
 162:.\Interrupts.c **** *   void.
 163:.\Interrupts.c **** *
 164:.\Interrupts.c **** *******************************************************************************/
 165:.\Interrupts.c **** CY_ISR(TxDMADone_Interrupt)
 166:.\Interrupts.c **** {
 182              		.loc 1 166 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 8
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 80B5     		push	{r7, lr}
 187              	.LCFI7:
 188              		.cfi_def_cfa_offset 8
 189 0002 82B0     		sub	sp, sp, #8
 190              	.LCFI8:
 191              		.cfi_def_cfa_offset 16
 192 0004 00AF     		add	r7, sp, #0
 193              		.cfi_offset 14, -4
 194              		.cfi_offset 7, -8
 195              	.LCFI9:
 196              		.cfi_def_cfa_register 7
 167:.\Interrupts.c ****     #ifndef ENABLE_DIGITAL_AUDIO_IN_ONLY 
 168:.\Interrupts.c **** 	uint16 added;
 169:.\Interrupts.c **** 
 170:.\Interrupts.c **** 	/* Note: Care must be taken in the application code to update outUsbCount atomically
 171:.\Interrupts.c **** 	 * Code is currently implemented with both updaters of this value in interrupts that are
 172:.\Interrupts.c **** 	 * the same priority so the code will not execute at the same time, but the code
 173:.\Interrupts.c **** 	 * has been written so that this is not a requirement. */
 174:.\Interrupts.c ****     
 175:.\Interrupts.c **** 	added = outUsbCount - outUsbShadow;
 197              		.loc 1 175 0
 198 0006 40F20003 		movw	r3, #:lower16:outUsbCount
 199 000a C0F20003 		movt	r3, #:upper16:outUsbCount
 200 000e 1A88     		ldrh	r2, [r3, #0]
 201 0010 40F20003 		movw	r3, #:lower16:outUsbShadow
 202 0014 C0F20003 		movt	r3, #:upper16:outUsbShadow
 203 0018 1B88     		ldrh	r3, [r3, #0]
 204 001a C3EB0203 		rsb	r3, r3, r2
 205 001e FB80     		strh	r3, [r7, #6]	@ movhi
 176:.\Interrupts.c **** 	outLevel += added;
 206              		.loc 1 176 0
 207 0020 40F20003 		movw	r3, #:lower16:outLevel
 208 0024 C0F20003 		movt	r3, #:upper16:outLevel
 209 0028 1A88     		ldrh	r2, [r3, #0]
 210 002a FB88     		ldrh	r3, [r7, #6]	@ movhi
 211 002c 1344     		add	r3, r2, r3
 212 002e 9AB2     		uxth	r2, r3
 213 0030 40F20003 		movw	r3, #:lower16:outLevel
 214 0034 C0F20003 		movt	r3, #:upper16:outLevel
 215 0038 1A80     		strh	r2, [r3, #0]	@ movhi
 177:.\Interrupts.c ****     
 178:.\Interrupts.c ****     #if 0
 179:.\Interrupts.c **** 	if (outLevel > OUT_BUFSIZE) 
 180:.\Interrupts.c **** 		for(;;) ;		/* Overflow should not happen */
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 8


 181:.\Interrupts.c ****     #endif
 182:.\Interrupts.c ****     
 183:.\Interrupts.c **** 	outUsbShadow = outUsbCount;
 216              		.loc 1 183 0
 217 003a 40F20003 		movw	r3, #:lower16:outUsbCount
 218 003e C0F20003 		movt	r3, #:upper16:outUsbCount
 219 0042 1A88     		ldrh	r2, [r3, #0]
 220 0044 40F20003 		movw	r3, #:lower16:outUsbShadow
 221 0048 C0F20003 		movt	r3, #:upper16:outUsbShadow
 222 004c 1A80     		strh	r2, [r3, #0]	@ movhi
 184:.\Interrupts.c **** 	
 185:.\Interrupts.c **** 	if (outLevel <= OUT_AUDIOMAXPKT) 
 223              		.loc 1 185 0
 224 004e 40F20003 		movw	r3, #:lower16:outLevel
 225 0052 C0F20003 		movt	r3, #:upper16:outLevel
 226 0056 1B88     		ldrh	r3, [r3, #0]
 227 0058 B3F5907F 		cmp	r3, #288
 228 005c 02D8     		bhi	.L10
 186:.\Interrupts.c **** 	{
 187:.\Interrupts.c **** 		/* Underflow, so disable the DMA, mute and tell the main task to reset all its structures Stop DM
 188:.\Interrupts.c **** 		Stop_I2S_Tx();
 229              		.loc 1 188 0
 230 005e FFF7FEFF 		bl	Stop_I2S_Tx
 231 0062 0CE0     		b	.L12
 232              	.L10:
 189:.\Interrupts.c **** 	}
 190:.\Interrupts.c **** 	else
 191:.\Interrupts.c **** 	{
 192:.\Interrupts.c **** 		outLevel -= OUT_TRANS_SIZE;
 233              		.loc 1 192 0
 234 0064 40F20003 		movw	r3, #:lower16:outLevel
 235 0068 C0F20003 		movt	r3, #:upper16:outLevel
 236 006c 1B88     		ldrh	r3, [r3, #0]
 237 006e A3F19003 		sub	r3, r3, #144
 238 0072 9AB2     		uxth	r2, r3
 239 0074 40F20003 		movw	r3, #:lower16:outLevel
 240 0078 C0F20003 		movt	r3, #:upper16:outLevel
 241 007c 1A80     		strh	r2, [r3, #0]	@ movhi
 242              	.L12:
 193:.\Interrupts.c **** 	}
 194:.\Interrupts.c ****     #endif
 195:.\Interrupts.c ****     
 196:.\Interrupts.c ****     /* USER_CODE: [Audio OUT buffer pointers] ISR triggered by audio OUT data transfer DMA (see Top
 197:.\Interrupts.c ****      * the audio OUT buffer pointers */
 198:.\Interrupts.c **** }
 243              		.loc 1 198 0
 244 007e 07F10807 		add	r7, r7, #8
 245 0082 BD46     		mov	sp, r7
 246 0084 80BD     		pop	{r7, pc}
 247              		.cfi_endproc
 248              	.LFE32:
 249              		.size	TxDMADone_Interrupt, .-TxDMADone_Interrupt
 250 0086 00BF     		.section	.text.cicOverflow_Interrupt,"ax",%progbits
 251              		.align	2
 252              		.global	cicOverflow_Interrupt
 253              		.thumb
 254              		.thumb_func
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 9


 255              		.type	cicOverflow_Interrupt, %function
 256              	cicOverflow_Interrupt:
 257              	.LFB33:
 199:.\Interrupts.c **** 
 200:.\Interrupts.c **** /*******************************************************************************
 201:.\Interrupts.c **** * Function Name: cicOverflow_Interrupt
 202:.\Interrupts.c **** ********************************************************************************
 203:.\Interrupts.c **** *
 204:.\Interrupts.c **** * Summary:
 205:.\Interrupts.c **** *  ISR for the PDM CIC FIFO OVerflow interrupt
 206:.\Interrupts.c **** *
 207:.\Interrupts.c **** * Parameters:
 208:.\Interrupts.c **** *  None
 209:.\Interrupts.c **** *
 210:.\Interrupts.c **** * Return:
 211:.\Interrupts.c **** *  None
 212:.\Interrupts.c **** *
 213:.\Interrupts.c **** * Global Variables:
 214:.\Interrupts.c **** *  None
 215:.\Interrupts.c **** *******************************************************************************/
 216:.\Interrupts.c **** CY_ISR(cicOverflow_Interrupt)
 217:.\Interrupts.c **** {
 258              		.loc 1 217 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 8
 261              		@ frame_needed = 1, uses_anonymous_args = 0
 262 0000 80B5     		push	{r7, lr}
 263              	.LCFI10:
 264              		.cfi_def_cfa_offset 8
 265 0002 82B0     		sub	sp, sp, #8
 266              	.LCFI11:
 267              		.cfi_def_cfa_offset 16
 268 0004 00AF     		add	r7, sp, #0
 269              		.cfi_offset 14, -4
 270              		.cfi_offset 7, -8
 271              	.LCFI12:
 272              		.cfi_def_cfa_register 7
 218:.\Interrupts.c **** 	uint8 cic_overflow_status;	
 219:.\Interrupts.c **** 	
 220:.\Interrupts.c **** 	/* Read the status register to know the cause and clear the interrupt */
 221:.\Interrupts.c **** 	cic_overflow_status = PDM_CIC_ReadInterruptStatus(); 
 273              		.loc 1 221 0
 274 0006 FFF7FEFF 		bl	PDM_CIC_ReadInterruptStatus
 275 000a 0346     		mov	r3, r0
 276 000c FB71     		strb	r3, [r7, #7]
 222:.\Interrupts.c **** 
 223:.\Interrupts.c **** 	/* USER CODE: Add your code to be executed when the overflow occurs */	
 224:.\Interrupts.c **** }
 277              		.loc 1 224 0
 278 000e 07F10807 		add	r7, r7, #8
 279 0012 BD46     		mov	sp, r7
 280 0014 80BD     		pop	{r7, pc}
 281              		.cfi_endproc
 282              	.LFE33:
 283              		.size	cicOverflow_Interrupt, .-cicOverflow_Interrupt
 284 0016 00BF     		.text
 285              	.Letext0:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 10


 286              		.section	.debug_loc,"",%progbits
 287              	.Ldebug_loc0:
 288              	.LLST0:
 289 0000 00000000 		.4byte	.LFB29
 290 0004 02000000 		.4byte	.LCFI0
 291 0008 0100     		.2byte	0x1
 292 000a 5D       		.byte	0x5d
 293 000b 02000000 		.4byte	.LCFI0
 294 000f 04000000 		.4byte	.LCFI1
 295 0013 0200     		.2byte	0x2
 296 0015 7D       		.byte	0x7d
 297 0016 08       		.sleb128 8
 298 0017 04000000 		.4byte	.LCFI1
 299 001b 1E000000 		.4byte	.LFE29
 300 001f 0200     		.2byte	0x2
 301 0021 77       		.byte	0x77
 302 0022 08       		.sleb128 8
 303 0023 00000000 		.4byte	0x0
 304 0027 00000000 		.4byte	0x0
 305              	.LLST1:
 306 002b 00000000 		.4byte	.LFB30
 307 002f 02000000 		.4byte	.LCFI2
 308 0033 0100     		.2byte	0x1
 309 0035 5D       		.byte	0x5d
 310 0036 02000000 		.4byte	.LCFI2
 311 003a 04000000 		.4byte	.LCFI3
 312 003e 0200     		.2byte	0x2
 313 0040 7D       		.byte	0x7d
 314 0041 08       		.sleb128 8
 315 0042 04000000 		.4byte	.LCFI3
 316 0046 06000000 		.4byte	.LCFI4
 317 004a 0200     		.2byte	0x2
 318 004c 7D       		.byte	0x7d
 319 004d 10       		.sleb128 16
 320 004e 06000000 		.4byte	.LCFI4
 321 0052 8A000000 		.4byte	.LFE30
 322 0056 0200     		.2byte	0x2
 323 0058 77       		.byte	0x77
 324 0059 10       		.sleb128 16
 325 005a 00000000 		.4byte	0x0
 326 005e 00000000 		.4byte	0x0
 327              	.LLST2:
 328 0062 00000000 		.4byte	.LFB31
 329 0066 02000000 		.4byte	.LCFI5
 330 006a 0100     		.2byte	0x1
 331 006c 5D       		.byte	0x5d
 332 006d 02000000 		.4byte	.LCFI5
 333 0071 04000000 		.4byte	.LCFI6
 334 0075 0200     		.2byte	0x2
 335 0077 7D       		.byte	0x7d
 336 0078 04       		.sleb128 4
 337 0079 04000000 		.4byte	.LCFI6
 338 007d 2E000000 		.4byte	.LFE31
 339 0081 0200     		.2byte	0x2
 340 0083 77       		.byte	0x77
 341 0084 04       		.sleb128 4
 342 0085 00000000 		.4byte	0x0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 11


 343 0089 00000000 		.4byte	0x0
 344              	.LLST3:
 345 008d 00000000 		.4byte	.LFB32
 346 0091 02000000 		.4byte	.LCFI7
 347 0095 0100     		.2byte	0x1
 348 0097 5D       		.byte	0x5d
 349 0098 02000000 		.4byte	.LCFI7
 350 009c 04000000 		.4byte	.LCFI8
 351 00a0 0200     		.2byte	0x2
 352 00a2 7D       		.byte	0x7d
 353 00a3 08       		.sleb128 8
 354 00a4 04000000 		.4byte	.LCFI8
 355 00a8 06000000 		.4byte	.LCFI9
 356 00ac 0200     		.2byte	0x2
 357 00ae 7D       		.byte	0x7d
 358 00af 10       		.sleb128 16
 359 00b0 06000000 		.4byte	.LCFI9
 360 00b4 86000000 		.4byte	.LFE32
 361 00b8 0200     		.2byte	0x2
 362 00ba 77       		.byte	0x77
 363 00bb 10       		.sleb128 16
 364 00bc 00000000 		.4byte	0x0
 365 00c0 00000000 		.4byte	0x0
 366              	.LLST4:
 367 00c4 00000000 		.4byte	.LFB33
 368 00c8 02000000 		.4byte	.LCFI10
 369 00cc 0100     		.2byte	0x1
 370 00ce 5D       		.byte	0x5d
 371 00cf 02000000 		.4byte	.LCFI10
 372 00d3 04000000 		.4byte	.LCFI11
 373 00d7 0200     		.2byte	0x2
 374 00d9 7D       		.byte	0x7d
 375 00da 08       		.sleb128 8
 376 00db 04000000 		.4byte	.LCFI11
 377 00df 06000000 		.4byte	.LCFI12
 378 00e3 0200     		.2byte	0x2
 379 00e5 7D       		.byte	0x7d
 380 00e6 10       		.sleb128 16
 381 00e7 06000000 		.4byte	.LCFI12
 382 00eb 16000000 		.4byte	.LFE33
 383 00ef 0200     		.2byte	0x2
 384 00f1 77       		.byte	0x77
 385 00f2 10       		.sleb128 16
 386 00f3 00000000 		.4byte	0x0
 387 00f7 00000000 		.4byte	0x0
 388              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 389              		.file 3 "./Generated_Source/PSoC5/core_cm3.h"
 390              		.section	.debug_info
 391 0000 B7010000 		.4byte	0x1b7
 392 0004 0200     		.2byte	0x2
 393 0006 00000000 		.4byte	.Ldebug_abbrev0
 394 000a 04       		.byte	0x4
 395 000b 01       		.uleb128 0x1
 396 000c 52010000 		.4byte	.LASF31
 397 0010 01       		.byte	0x1
 398 0011 5E010000 		.4byte	.LASF32
 399 0015 7B000000 		.4byte	.LASF33
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 12


 400 0019 00000000 		.4byte	0x0
 401 001d 00000000 		.4byte	0x0
 402 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 403 0025 00000000 		.4byte	.Ldebug_line0
 404 0029 02       		.uleb128 0x2
 405 002a 01       		.byte	0x1
 406 002b 06       		.byte	0x6
 407 002c B4010000 		.4byte	.LASF0
 408 0030 02       		.uleb128 0x2
 409 0031 01       		.byte	0x1
 410 0032 08       		.byte	0x8
 411 0033 59000000 		.4byte	.LASF1
 412 0037 02       		.uleb128 0x2
 413 0038 02       		.byte	0x2
 414 0039 05       		.byte	0x5
 415 003a 86010000 		.4byte	.LASF2
 416 003e 02       		.uleb128 0x2
 417 003f 02       		.byte	0x2
 418 0040 07       		.byte	0x7
 419 0041 ED000000 		.4byte	.LASF3
 420 0045 02       		.uleb128 0x2
 421 0046 04       		.byte	0x4
 422 0047 05       		.byte	0x5
 423 0048 AB010000 		.4byte	.LASF4
 424 004c 02       		.uleb128 0x2
 425 004d 04       		.byte	0x4
 426 004e 07       		.byte	0x7
 427 004f DB000000 		.4byte	.LASF5
 428 0053 02       		.uleb128 0x2
 429 0054 08       		.byte	0x8
 430 0055 05       		.byte	0x5
 431 0056 00000000 		.4byte	.LASF6
 432 005a 02       		.uleb128 0x2
 433 005b 08       		.byte	0x8
 434 005c 07       		.byte	0x7
 435 005d 3B010000 		.4byte	.LASF7
 436 0061 03       		.uleb128 0x3
 437 0062 04       		.byte	0x4
 438 0063 05       		.byte	0x5
 439 0064 696E7400 		.ascii	"int\000"
 440 0068 02       		.uleb128 0x2
 441 0069 04       		.byte	0x4
 442 006a 07       		.byte	0x7
 443 006b 2E010000 		.4byte	.LASF8
 444 006f 04       		.uleb128 0x4
 445 0070 A5010000 		.4byte	.LASF9
 446 0074 02       		.byte	0x2
 447 0075 4C       		.byte	0x4c
 448 0076 30000000 		.4byte	0x30
 449 007a 04       		.uleb128 0x4
 450 007b 21010000 		.4byte	.LASF10
 451 007f 02       		.byte	0x2
 452 0080 4D       		.byte	0x4d
 453 0081 3E000000 		.4byte	0x3e
 454 0085 02       		.uleb128 0x2
 455 0086 04       		.byte	0x4
 456 0087 04       		.byte	0x4
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 13


 457 0088 53000000 		.4byte	.LASF11
 458 008c 02       		.uleb128 0x2
 459 008d 08       		.byte	0x8
 460 008e 04       		.byte	0x4
 461 008f 0D010000 		.4byte	.LASF12
 462 0093 02       		.uleb128 0x2
 463 0094 01       		.byte	0x1
 464 0095 08       		.byte	0x8
 465 0096 6D010000 		.4byte	.LASF13
 466 009a 05       		.uleb128 0x5
 467 009b 04       		.byte	0x4
 468 009c 07       		.byte	0x7
 469 009d 06       		.uleb128 0x6
 470 009e 01       		.byte	0x1
 471 009f 67000000 		.4byte	.LASF14
 472 00a3 01       		.byte	0x1
 473 00a4 4C       		.byte	0x4c
 474 00a5 01       		.byte	0x1
 475 00a6 00000000 		.4byte	.LFB29
 476 00aa 1E000000 		.4byte	.LFE29
 477 00ae 00000000 		.4byte	.LLST0
 478 00b2 07       		.uleb128 0x7
 479 00b3 01       		.byte	0x1
 480 00b4 72010000 		.4byte	.LASF16
 481 00b8 01       		.byte	0x1
 482 00b9 65       		.byte	0x65
 483 00ba 01       		.byte	0x1
 484 00bb 00000000 		.4byte	.LFB30
 485 00bf 8A000000 		.4byte	.LFE30
 486 00c3 2B000000 		.4byte	.LLST1
 487 00c7 DA000000 		.4byte	0xda
 488 00cb 08       		.uleb128 0x8
 489 00cc 3F000000 		.4byte	.LASF18
 490 00d0 01       		.byte	0x1
 491 00d1 68       		.byte	0x68
 492 00d2 7A000000 		.4byte	0x7a
 493 00d6 02       		.byte	0x2
 494 00d7 91       		.byte	0x91
 495 00d8 76       		.sleb128 -10
 496 00d9 00       		.byte	0x0
 497 00da 06       		.uleb128 0x6
 498 00db 01       		.byte	0x1
 499 00dc 14000000 		.4byte	.LASF15
 500 00e0 01       		.byte	0x1
 501 00e1 91       		.byte	0x91
 502 00e2 01       		.byte	0x1
 503 00e3 00000000 		.4byte	.LFB31
 504 00e7 2E000000 		.4byte	.LFE31
 505 00eb 62000000 		.4byte	.LLST2
 506 00ef 07       		.uleb128 0x7
 507 00f0 01       		.byte	0x1
 508 00f1 CC010000 		.4byte	.LASF17
 509 00f5 01       		.byte	0x1
 510 00f6 A5       		.byte	0xa5
 511 00f7 01       		.byte	0x1
 512 00f8 00000000 		.4byte	.LFB32
 513 00fc 86000000 		.4byte	.LFE32
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 14


 514 0100 8D000000 		.4byte	.LLST3
 515 0104 17010000 		.4byte	0x117
 516 0108 08       		.uleb128 0x8
 517 0109 28010000 		.4byte	.LASF19
 518 010d 01       		.byte	0x1
 519 010e A8       		.byte	0xa8
 520 010f 7A000000 		.4byte	0x7a
 521 0113 02       		.byte	0x2
 522 0114 91       		.byte	0x91
 523 0115 76       		.sleb128 -10
 524 0116 00       		.byte	0x0
 525 0117 07       		.uleb128 0x7
 526 0118 01       		.byte	0x1
 527 0119 EB010000 		.4byte	.LASF20
 528 011d 01       		.byte	0x1
 529 011e D8       		.byte	0xd8
 530 011f 01       		.byte	0x1
 531 0120 00000000 		.4byte	.LFB33
 532 0124 16000000 		.4byte	.LFE33
 533 0128 C4000000 		.4byte	.LLST4
 534 012c 3F010000 		.4byte	0x13f
 535 0130 08       		.uleb128 0x8
 536 0131 2B000000 		.4byte	.LASF21
 537 0135 01       		.byte	0x1
 538 0136 DA       		.byte	0xda
 539 0137 6F000000 		.4byte	0x6f
 540 013b 02       		.byte	0x2
 541 013c 91       		.byte	0x91
 542 013d 77       		.sleb128 -9
 543 013e 00       		.byte	0x0
 544 013f 09       		.uleb128 0x9
 545 0140 00010000 		.4byte	.LASF22
 546 0144 03       		.byte	0x3
 547 0145 CE06     		.2byte	0x6ce
 548 0147 4D010000 		.4byte	0x14d
 549 014b 01       		.byte	0x1
 550 014c 01       		.byte	0x1
 551 014d 0A       		.uleb128 0xa
 552 014e 61000000 		.4byte	0x61
 553 0152 0B       		.uleb128 0xb
 554 0153 0E000000 		.4byte	.LASF23
 555 0157 01       		.byte	0x1
 556 0158 2B       		.byte	0x2b
 557 0159 7A000000 		.4byte	0x7a
 558 015d 01       		.byte	0x1
 559 015e 01       		.byte	0x1
 560 015f 0B       		.uleb128 0xb
 561 0160 23000000 		.4byte	.LASF24
 562 0164 01       		.byte	0x1
 563 0165 2C       		.byte	0x2c
 564 0166 7A000000 		.4byte	0x7a
 565 016a 01       		.byte	0x1
 566 016b 01       		.byte	0x1
 567 016c 0B       		.uleb128 0xb
 568 016d E0010000 		.4byte	.LASF25
 569 0171 01       		.byte	0x1
 570 0172 2D       		.byte	0x2d
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 15


 571 0173 7A000000 		.4byte	0x7a
 572 0177 01       		.byte	0x1
 573 0178 01       		.byte	0x1
 574 0179 0B       		.uleb128 0xb
 575 017a C0010000 		.4byte	.LASF26
 576 017e 01       		.byte	0x1
 577 017f 2E       		.byte	0x2e
 578 0180 7A000000 		.4byte	0x7a
 579 0184 01       		.byte	0x1
 580 0185 01       		.byte	0x1
 581 0186 0B       		.uleb128 0xb
 582 0187 90010000 		.4byte	.LASF27
 583 018b 01       		.byte	0x1
 584 018c 2F       		.byte	0x2f
 585 018d 6F000000 		.4byte	0x6f
 586 0191 01       		.byte	0x1
 587 0192 01       		.byte	0x1
 588 0193 0B       		.uleb128 0xb
 589 0194 01020000 		.4byte	.LASF28
 590 0198 01       		.byte	0x1
 591 0199 30       		.byte	0x30
 592 019a 7A000000 		.4byte	0x7a
 593 019e 01       		.byte	0x1
 594 019f 01       		.byte	0x1
 595 01a0 0B       		.uleb128 0xb
 596 01a1 47000000 		.4byte	.LASF29
 597 01a5 01       		.byte	0x1
 598 01a6 31       		.byte	0x31
 599 01a7 7A000000 		.4byte	0x7a
 600 01ab 01       		.byte	0x1
 601 01ac 01       		.byte	0x1
 602 01ad 0B       		.uleb128 0xb
 603 01ae 14010000 		.4byte	.LASF30
 604 01b2 01       		.byte	0x1
 605 01b3 32       		.byte	0x32
 606 01b4 7A000000 		.4byte	0x7a
 607 01b8 01       		.byte	0x1
 608 01b9 01       		.byte	0x1
 609 01ba 00       		.byte	0x0
 610              		.section	.debug_abbrev
 611 0000 01       		.uleb128 0x1
 612 0001 11       		.uleb128 0x11
 613 0002 01       		.byte	0x1
 614 0003 25       		.uleb128 0x25
 615 0004 0E       		.uleb128 0xe
 616 0005 13       		.uleb128 0x13
 617 0006 0B       		.uleb128 0xb
 618 0007 03       		.uleb128 0x3
 619 0008 0E       		.uleb128 0xe
 620 0009 1B       		.uleb128 0x1b
 621 000a 0E       		.uleb128 0xe
 622 000b 11       		.uleb128 0x11
 623 000c 01       		.uleb128 0x1
 624 000d 52       		.uleb128 0x52
 625 000e 01       		.uleb128 0x1
 626 000f 55       		.uleb128 0x55
 627 0010 06       		.uleb128 0x6
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 16


 628 0011 10       		.uleb128 0x10
 629 0012 06       		.uleb128 0x6
 630 0013 00       		.byte	0x0
 631 0014 00       		.byte	0x0
 632 0015 02       		.uleb128 0x2
 633 0016 24       		.uleb128 0x24
 634 0017 00       		.byte	0x0
 635 0018 0B       		.uleb128 0xb
 636 0019 0B       		.uleb128 0xb
 637 001a 3E       		.uleb128 0x3e
 638 001b 0B       		.uleb128 0xb
 639 001c 03       		.uleb128 0x3
 640 001d 0E       		.uleb128 0xe
 641 001e 00       		.byte	0x0
 642 001f 00       		.byte	0x0
 643 0020 03       		.uleb128 0x3
 644 0021 24       		.uleb128 0x24
 645 0022 00       		.byte	0x0
 646 0023 0B       		.uleb128 0xb
 647 0024 0B       		.uleb128 0xb
 648 0025 3E       		.uleb128 0x3e
 649 0026 0B       		.uleb128 0xb
 650 0027 03       		.uleb128 0x3
 651 0028 08       		.uleb128 0x8
 652 0029 00       		.byte	0x0
 653 002a 00       		.byte	0x0
 654 002b 04       		.uleb128 0x4
 655 002c 16       		.uleb128 0x16
 656 002d 00       		.byte	0x0
 657 002e 03       		.uleb128 0x3
 658 002f 0E       		.uleb128 0xe
 659 0030 3A       		.uleb128 0x3a
 660 0031 0B       		.uleb128 0xb
 661 0032 3B       		.uleb128 0x3b
 662 0033 0B       		.uleb128 0xb
 663 0034 49       		.uleb128 0x49
 664 0035 13       		.uleb128 0x13
 665 0036 00       		.byte	0x0
 666 0037 00       		.byte	0x0
 667 0038 05       		.uleb128 0x5
 668 0039 24       		.uleb128 0x24
 669 003a 00       		.byte	0x0
 670 003b 0B       		.uleb128 0xb
 671 003c 0B       		.uleb128 0xb
 672 003d 3E       		.uleb128 0x3e
 673 003e 0B       		.uleb128 0xb
 674 003f 00       		.byte	0x0
 675 0040 00       		.byte	0x0
 676 0041 06       		.uleb128 0x6
 677 0042 2E       		.uleb128 0x2e
 678 0043 00       		.byte	0x0
 679 0044 3F       		.uleb128 0x3f
 680 0045 0C       		.uleb128 0xc
 681 0046 03       		.uleb128 0x3
 682 0047 0E       		.uleb128 0xe
 683 0048 3A       		.uleb128 0x3a
 684 0049 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 17


 685 004a 3B       		.uleb128 0x3b
 686 004b 0B       		.uleb128 0xb
 687 004c 27       		.uleb128 0x27
 688 004d 0C       		.uleb128 0xc
 689 004e 11       		.uleb128 0x11
 690 004f 01       		.uleb128 0x1
 691 0050 12       		.uleb128 0x12
 692 0051 01       		.uleb128 0x1
 693 0052 40       		.uleb128 0x40
 694 0053 06       		.uleb128 0x6
 695 0054 00       		.byte	0x0
 696 0055 00       		.byte	0x0
 697 0056 07       		.uleb128 0x7
 698 0057 2E       		.uleb128 0x2e
 699 0058 01       		.byte	0x1
 700 0059 3F       		.uleb128 0x3f
 701 005a 0C       		.uleb128 0xc
 702 005b 03       		.uleb128 0x3
 703 005c 0E       		.uleb128 0xe
 704 005d 3A       		.uleb128 0x3a
 705 005e 0B       		.uleb128 0xb
 706 005f 3B       		.uleb128 0x3b
 707 0060 0B       		.uleb128 0xb
 708 0061 27       		.uleb128 0x27
 709 0062 0C       		.uleb128 0xc
 710 0063 11       		.uleb128 0x11
 711 0064 01       		.uleb128 0x1
 712 0065 12       		.uleb128 0x12
 713 0066 01       		.uleb128 0x1
 714 0067 40       		.uleb128 0x40
 715 0068 06       		.uleb128 0x6
 716 0069 01       		.uleb128 0x1
 717 006a 13       		.uleb128 0x13
 718 006b 00       		.byte	0x0
 719 006c 00       		.byte	0x0
 720 006d 08       		.uleb128 0x8
 721 006e 34       		.uleb128 0x34
 722 006f 00       		.byte	0x0
 723 0070 03       		.uleb128 0x3
 724 0071 0E       		.uleb128 0xe
 725 0072 3A       		.uleb128 0x3a
 726 0073 0B       		.uleb128 0xb
 727 0074 3B       		.uleb128 0x3b
 728 0075 0B       		.uleb128 0xb
 729 0076 49       		.uleb128 0x49
 730 0077 13       		.uleb128 0x13
 731 0078 02       		.uleb128 0x2
 732 0079 0A       		.uleb128 0xa
 733 007a 00       		.byte	0x0
 734 007b 00       		.byte	0x0
 735 007c 09       		.uleb128 0x9
 736 007d 34       		.uleb128 0x34
 737 007e 00       		.byte	0x0
 738 007f 03       		.uleb128 0x3
 739 0080 0E       		.uleb128 0xe
 740 0081 3A       		.uleb128 0x3a
 741 0082 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 18


 742 0083 3B       		.uleb128 0x3b
 743 0084 05       		.uleb128 0x5
 744 0085 49       		.uleb128 0x49
 745 0086 13       		.uleb128 0x13
 746 0087 3F       		.uleb128 0x3f
 747 0088 0C       		.uleb128 0xc
 748 0089 3C       		.uleb128 0x3c
 749 008a 0C       		.uleb128 0xc
 750 008b 00       		.byte	0x0
 751 008c 00       		.byte	0x0
 752 008d 0A       		.uleb128 0xa
 753 008e 35       		.uleb128 0x35
 754 008f 00       		.byte	0x0
 755 0090 49       		.uleb128 0x49
 756 0091 13       		.uleb128 0x13
 757 0092 00       		.byte	0x0
 758 0093 00       		.byte	0x0
 759 0094 0B       		.uleb128 0xb
 760 0095 34       		.uleb128 0x34
 761 0096 00       		.byte	0x0
 762 0097 03       		.uleb128 0x3
 763 0098 0E       		.uleb128 0xe
 764 0099 3A       		.uleb128 0x3a
 765 009a 0B       		.uleb128 0xb
 766 009b 3B       		.uleb128 0x3b
 767 009c 0B       		.uleb128 0xb
 768 009d 49       		.uleb128 0x49
 769 009e 13       		.uleb128 0x13
 770 009f 3F       		.uleb128 0x3f
 771 00a0 0C       		.uleb128 0xc
 772 00a1 3C       		.uleb128 0x3c
 773 00a2 0C       		.uleb128 0xc
 774 00a3 00       		.byte	0x0
 775 00a4 00       		.byte	0x0
 776 00a5 00       		.byte	0x0
 777              		.section	.debug_pubnames,"",%progbits
 778 0000 83000000 		.4byte	0x83
 779 0004 0200     		.2byte	0x2
 780 0006 00000000 		.4byte	.Ldebug_info0
 781 000a BB010000 		.4byte	0x1bb
 782 000e 9D000000 		.4byte	0x9d
 783 0012 496E444D 		.ascii	"InDMADone_Interrupt\000"
 783      41446F6E 
 783      655F496E 
 783      74657272 
 783      75707400 
 784 0026 B2000000 		.4byte	0xb2
 785 002a 5278444D 		.ascii	"RxDMADone_Interrupt\000"
 785      41446F6E 
 785      655F496E 
 785      74657272 
 785      75707400 
 786 003e DA000000 		.4byte	0xda
 787 0042 5469636B 		.ascii	"Tick_Interrupt\000"
 787      5F496E74 
 787      65727275 
 787      707400
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 19


 788 0051 EF000000 		.4byte	0xef
 789 0055 5478444D 		.ascii	"TxDMADone_Interrupt\000"
 789      41446F6E 
 789      655F496E 
 789      74657272 
 789      75707400 
 790 0069 17010000 		.4byte	0x117
 791 006d 6369634F 		.ascii	"cicOverflow_Interrupt\000"
 791      76657266 
 791      6C6F775F 
 791      496E7465 
 791      72727570 
 792 0083 00000000 		.4byte	0x0
 793              		.section	.debug_aranges,"",%progbits
 794 0000 3C000000 		.4byte	0x3c
 795 0004 0200     		.2byte	0x2
 796 0006 00000000 		.4byte	.Ldebug_info0
 797 000a 04       		.byte	0x4
 798 000b 00       		.byte	0x0
 799 000c 0000     		.2byte	0x0
 800 000e 0000     		.2byte	0x0
 801 0010 00000000 		.4byte	.LFB29
 802 0014 1E000000 		.4byte	.LFE29-.LFB29
 803 0018 00000000 		.4byte	.LFB30
 804 001c 8A000000 		.4byte	.LFE30-.LFB30
 805 0020 00000000 		.4byte	.LFB31
 806 0024 2E000000 		.4byte	.LFE31-.LFB31
 807 0028 00000000 		.4byte	.LFB32
 808 002c 86000000 		.4byte	.LFE32-.LFB32
 809 0030 00000000 		.4byte	.LFB33
 810 0034 16000000 		.4byte	.LFE33-.LFB33
 811 0038 00000000 		.4byte	0x0
 812 003c 00000000 		.4byte	0x0
 813              		.section	.debug_ranges,"",%progbits
 814              	.Ldebug_ranges0:
 815 0000 00000000 		.4byte	.Ltext0
 816 0004 00000000 		.4byte	.Letext0
 817 0008 00000000 		.4byte	.LFB29
 818 000c 1E000000 		.4byte	.LFE29
 819 0010 00000000 		.4byte	.LFB30
 820 0014 8A000000 		.4byte	.LFE30
 821 0018 00000000 		.4byte	.LFB31
 822 001c 2E000000 		.4byte	.LFE31
 823 0020 00000000 		.4byte	.LFB32
 824 0024 86000000 		.4byte	.LFE32
 825 0028 00000000 		.4byte	.LFB33
 826 002c 16000000 		.4byte	.LFE33
 827 0030 00000000 		.4byte	0x0
 828 0034 00000000 		.4byte	0x0
 829              		.section	.debug_str,"MS",%progbits,1
 830              	.LASF6:
 831 0000 6C6F6E67 		.ascii	"long long int\000"
 831      206C6F6E 
 831      6720696E 
 831      7400
 832              	.LASF23:
 833 000e 696E436E 		.ascii	"inCnt\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 20


 833      7400
 834              	.LASF15:
 835 0014 5469636B 		.ascii	"Tick_Interrupt\000"
 835      5F496E74 
 835      65727275 
 835      707400
 836              	.LASF24:
 837 0023 696E4C65 		.ascii	"inLevel\000"
 837      76656C00 
 838              	.LASF21:
 839 002b 6369635F 		.ascii	"cic_overflow_status\000"
 839      6F766572 
 839      666C6F77 
 839      5F737461 
 839      74757300 
 840              	.LASF18:
 841 003f 72656D6F 		.ascii	"removed\000"
 841      76656400 
 842              	.LASF29:
 843 0047 6F757455 		.ascii	"outUsbCount\000"
 843      7362436F 
 843      756E7400 
 844              	.LASF11:
 845 0053 666C6F61 		.ascii	"float\000"
 845      7400
 846              	.LASF1:
 847 0059 756E7369 		.ascii	"unsigned char\000"
 847      676E6564 
 847      20636861 
 847      7200
 848              	.LASF14:
 849 0067 496E444D 		.ascii	"InDMADone_Interrupt\000"
 849      41446F6E 
 849      655F496E 
 849      74657272 
 849      75707400 
 850              	.LASF33:
 851 007b 5C5C7073 		.ascii	"\\\\psf\\Home\\Desktop\\USB-audio\\Firmware\\Pionee"
 851      665C486F 
 851      6D655C44 
 851      65736B74 
 851      6F705C55 
 852 00a7 724B6974 		.ascii	"rKit_P5LP_USB_Audio\\PioneerKit_P5LP_USB_Audio.cyds"
 852      5F50354C 
 852      505F5553 
 852      425F4175 
 852      64696F5C 
 853 00d9 6E00     		.ascii	"n\000"
 854              	.LASF5:
 855 00db 6C6F6E67 		.ascii	"long unsigned int\000"
 855      20756E73 
 855      69676E65 
 855      6420696E 
 855      7400
 856              	.LASF3:
 857 00ed 73686F72 		.ascii	"short unsigned int\000"
 857      7420756E 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 21


 857      7369676E 
 857      65642069 
 857      6E7400
 858              	.LASF22:
 859 0100 49544D5F 		.ascii	"ITM_RxBuffer\000"
 859      52784275 
 859      66666572 
 859      00
 860              	.LASF12:
 861 010d 646F7562 		.ascii	"double\000"
 861      6C6500
 862              	.LASF30:
 863 0114 6F757455 		.ascii	"outUsbShadow\000"
 863      73625368 
 863      61646F77 
 863      00
 864              	.LASF10:
 865 0121 75696E74 		.ascii	"uint16\000"
 865      313600
 866              	.LASF19:
 867 0128 61646465 		.ascii	"added\000"
 867      6400
 868              	.LASF8:
 869 012e 756E7369 		.ascii	"unsigned int\000"
 869      676E6564 
 869      20696E74 
 869      00
 870              	.LASF7:
 871 013b 6C6F6E67 		.ascii	"long long unsigned int\000"
 871      206C6F6E 
 871      6720756E 
 871      7369676E 
 871      65642069 
 872              	.LASF31:
 873 0152 474E5520 		.ascii	"GNU C 4.4.1\000"
 873      4320342E 
 873      342E3100 
 874              	.LASF32:
 875 015e 2E5C496E 		.ascii	".\\Interrupts.c\000"
 875      74657272 
 875      75707473 
 875      2E6300
 876              	.LASF13:
 877 016d 63686172 		.ascii	"char\000"
 877      00
 878              	.LASF16:
 879 0172 5278444D 		.ascii	"RxDMADone_Interrupt\000"
 879      41446F6E 
 879      655F496E 
 879      74657272 
 879      75707400 
 880              	.LASF2:
 881 0186 73686F72 		.ascii	"short int\000"
 881      7420696E 
 881      7400
 882              	.LASF27:
 883 0190 6170706C 		.ascii	"applicationTimerTick\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccsdmRry.s 			page 22


 883      69636174 
 883      696F6E54 
 883      696D6572 
 883      5469636B 
 884              	.LASF9:
 885 01a5 75696E74 		.ascii	"uint8\000"
 885      3800
 886              	.LASF4:
 887 01ab 6C6F6E67 		.ascii	"long int\000"
 887      20696E74 
 887      00
 888              	.LASF0:
 889 01b4 7369676E 		.ascii	"signed char\000"
 889      65642063 
 889      68617200 
 890              	.LASF26:
 891 01c0 696E5573 		.ascii	"inUsbShadow\000"
 891      62536861 
 891      646F7700 
 892              	.LASF17:
 893 01cc 5478444D 		.ascii	"TxDMADone_Interrupt\000"
 893      41446F6E 
 893      655F496E 
 893      74657272 
 893      75707400 
 894              	.LASF25:
 895 01e0 696E5573 		.ascii	"inUsbCount\000"
 895      62436F75 
 895      6E7400
 896              	.LASF20:
 897 01eb 6369634F 		.ascii	"cicOverflow_Interrupt\000"
 897      76657266 
 897      6C6F775F 
 897      496E7465 
 897      72727570 
 898              	.LASF28:
 899 0201 6F75744C 		.ascii	"outLevel\000"
 899      6576656C 
 899      00
 900              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
