ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"USBFS_std.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 09030000 		.text
  20      02006D00 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.USBFS_SerialNumString,"ax",%progbits
  24              		.align	1
  25              		.global	USBFS_SerialNumString
  26              		.thumb
  27              		.thumb_func
  28              		.type	USBFS_SerialNumString, %function
  29              	USBFS_SerialNumString:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC5\\USBFS_std.c"
   1:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/USBFS_std.c **** * File Name: USBFS_std.c
   3:.\Generated_Source\PSoC5/USBFS_std.c **** * Version 2.51
   4:.\Generated_Source\PSoC5/USBFS_std.c **** *
   5:.\Generated_Source\PSoC5/USBFS_std.c **** * Description:
   6:.\Generated_Source\PSoC5/USBFS_std.c **** *  USB Standard request handler.
   7:.\Generated_Source\PSoC5/USBFS_std.c **** *
   8:.\Generated_Source\PSoC5/USBFS_std.c **** * Note:
   9:.\Generated_Source\PSoC5/USBFS_std.c **** *
  10:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/USBFS_std.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/USBFS_std.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/USBFS_std.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/USBFS_std.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/USBFS_std.c **** 
  17:.\Generated_Source\PSoC5/USBFS_std.c **** #include "USBFS.h"
  18:.\Generated_Source\PSoC5/USBFS_std.c **** 
  19:.\Generated_Source\PSoC5/USBFS_std.c **** 
  20:.\Generated_Source\PSoC5/USBFS_std.c **** /***************************************
  21:.\Generated_Source\PSoC5/USBFS_std.c **** * External references
  22:.\Generated_Source\PSoC5/USBFS_std.c **** ***************************************/
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 2


  23:.\Generated_Source\PSoC5/USBFS_std.c **** 
  24:.\Generated_Source\PSoC5/USBFS_std.c **** extern const uint8 CYCODE USBFS_DEVICE0_DESCR[];
  25:.\Generated_Source\PSoC5/USBFS_std.c **** extern const uint8 CYCODE USBFS_DEVICE0_CONFIGURATION0_DESCR[];
  26:.\Generated_Source\PSoC5/USBFS_std.c **** extern const uint8 CYCODE USBFS_STRING_DESCRIPTORS[];
  27:.\Generated_Source\PSoC5/USBFS_std.c **** extern const uint8 CYCODE USBFS_MSOS_DESCRIPTOR[];
  28:.\Generated_Source\PSoC5/USBFS_std.c **** extern const uint8 CYCODE USBFS_SN_STRING_DESCRIPTOR[];
  29:.\Generated_Source\PSoC5/USBFS_std.c **** 
  30:.\Generated_Source\PSoC5/USBFS_std.c **** extern volatile uint8 USBFS_device;
  31:.\Generated_Source\PSoC5/USBFS_std.c **** extern volatile uint8 USBFS_configuration;
  32:.\Generated_Source\PSoC5/USBFS_std.c **** extern volatile uint8 USBFS_configurationChanged;
  33:.\Generated_Source\PSoC5/USBFS_std.c **** extern volatile uint8 USBFS_interfaceNumber;
  34:.\Generated_Source\PSoC5/USBFS_std.c **** extern volatile uint8 USBFS_interfaceSetting[];
  35:.\Generated_Source\PSoC5/USBFS_std.c **** extern volatile uint8 USBFS_interfaceSetting_last[];
  36:.\Generated_Source\PSoC5/USBFS_std.c **** extern volatile uint8 USBFS_deviceAddress;
  37:.\Generated_Source\PSoC5/USBFS_std.c **** extern volatile uint8 USBFS_deviceStatus;
  38:.\Generated_Source\PSoC5/USBFS_std.c **** extern volatile uint8 USBFS_interfaceStatus[];
  39:.\Generated_Source\PSoC5/USBFS_std.c **** extern uint8 CYCODE *USBFS_interfaceClass;
  40:.\Generated_Source\PSoC5/USBFS_std.c **** extern const T_USBFS_LUT CYCODE USBFS_TABLE[];
  41:.\Generated_Source\PSoC5/USBFS_std.c **** extern volatile T_USBFS_EP_CTL_BLOCK USBFS_EP[];
  42:.\Generated_Source\PSoC5/USBFS_std.c **** extern volatile T_USBFS_TD USBFS_currentTD;
  43:.\Generated_Source\PSoC5/USBFS_std.c **** #if defined(USBFS_ENABLE_CDC_CLASS)
  44:.\Generated_Source\PSoC5/USBFS_std.c ****     extern volatile uint8 USBFS_cdc_data_in_ep;
  45:.\Generated_Source\PSoC5/USBFS_std.c ****     extern volatile uint8 USBFS_cdc_data_out_ep;
  46:.\Generated_Source\PSoC5/USBFS_std.c **** #endif  /* End USBFS_ENABLE_CDC_CLASS*/
  47:.\Generated_Source\PSoC5/USBFS_std.c **** #if defined(USBFS_ENABLE_MIDI_STREAMING)
  48:.\Generated_Source\PSoC5/USBFS_std.c ****     extern volatile uint8 USBFS_midi_in_ep;
  49:.\Generated_Source\PSoC5/USBFS_std.c ****     extern volatile uint8 USBFS_midi_out_ep;
  50:.\Generated_Source\PSoC5/USBFS_std.c **** #endif /* End USBFS_ENABLE_MIDI_STREAMING */
  51:.\Generated_Source\PSoC5/USBFS_std.c **** 
  52:.\Generated_Source\PSoC5/USBFS_std.c **** 
  53:.\Generated_Source\PSoC5/USBFS_std.c **** /***************************************
  54:.\Generated_Source\PSoC5/USBFS_std.c **** *         Forward references
  55:.\Generated_Source\PSoC5/USBFS_std.c **** ***************************************/
  56:.\Generated_Source\PSoC5/USBFS_std.c **** 
  57:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_InitControlRead(void) ;
  58:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_InitControlWrite(void) ;
  59:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_InitNoDataControlTransfer(void) ;
  60:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_DispatchClassRqst(void) ;
  61:.\Generated_Source\PSoC5/USBFS_std.c **** 
  62:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_Config(uint8 clearAltSetting) ;
  63:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_ConfigAltChanged(void) ;
  64:.\Generated_Source\PSoC5/USBFS_std.c **** T_USBFS_LUT *USBFS_GetConfigTablePtr(uint8 c)
  65:.\Generated_Source\PSoC5/USBFS_std.c ****                                                             ;
  66:.\Generated_Source\PSoC5/USBFS_std.c **** T_USBFS_LUT *USBFS_GetDeviceTablePtr(void)
  67:.\Generated_Source\PSoC5/USBFS_std.c ****                                                             ;
  68:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_ClearEndpointHalt(void) ;
  69:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_SetEndpointHalt(void) ;
  70:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_ValidateAlternateSetting(void) ;
  71:.\Generated_Source\PSoC5/USBFS_std.c **** 
  72:.\Generated_Source\PSoC5/USBFS_std.c **** /*DIE ID string descriptor for 8 bytes ID*/
  73:.\Generated_Source\PSoC5/USBFS_std.c **** #if defined(USBFS_ENABLE_IDSN_STRING)
  74:.\Generated_Source\PSoC5/USBFS_std.c ****     void USBFS_ReadDieID(uint8 *descr) ;
  75:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 USBFS_idSerialNumberStringDescriptor[0x22u]={0x22u, USBFS_DESCR_STRING};
  76:.\Generated_Source\PSoC5/USBFS_std.c **** #endif /* USBFS_ENABLE_IDSN_STRING */
  77:.\Generated_Source\PSoC5/USBFS_std.c **** 
  78:.\Generated_Source\PSoC5/USBFS_std.c **** #if(USBFS_EP_MM != USBFS__EP_MANUAL)
  79:.\Generated_Source\PSoC5/USBFS_std.c ****     void USBFS_Stop_DMA(uint8 epNumber) ;
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 3


  80:.\Generated_Source\PSoC5/USBFS_std.c **** #endif   /* End USBFS_EP_MM != USBFS__EP_MANUAL */
  81:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 CYCODE *USBFS_GetInterfaceClassTablePtr(void)
  82:.\Generated_Source\PSoC5/USBFS_std.c ****                                                     ;
  83:.\Generated_Source\PSoC5/USBFS_std.c **** 
  84:.\Generated_Source\PSoC5/USBFS_std.c **** 
  85:.\Generated_Source\PSoC5/USBFS_std.c **** /***************************************
  86:.\Generated_Source\PSoC5/USBFS_std.c **** * Global data allocation
  87:.\Generated_Source\PSoC5/USBFS_std.c **** ***************************************/
  88:.\Generated_Source\PSoC5/USBFS_std.c **** 
  89:.\Generated_Source\PSoC5/USBFS_std.c **** volatile uint8 USBFS_tBuffer[USBFS_EP_STATUS_LENGTH > USBFS_DEVICE_STATUS_LENGTH ? \
  90:.\Generated_Source\PSoC5/USBFS_std.c ****                                USBFS_EP_STATUS_LENGTH : USBFS_DEVICE_STATUS_LENGTH];
  91:.\Generated_Source\PSoC5/USBFS_std.c **** volatile uint8 *USBFS_fwSerialNumberStringDescriptor;
  92:.\Generated_Source\PSoC5/USBFS_std.c **** volatile uint8 USBFS_snStringConfirm = USBFS_FALSE;
  93:.\Generated_Source\PSoC5/USBFS_std.c **** 
  94:.\Generated_Source\PSoC5/USBFS_std.c **** 
  95:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
  96:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_SerialNumString
  97:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
  98:.\Generated_Source\PSoC5/USBFS_std.c **** *
  99:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 100:.\Generated_Source\PSoC5/USBFS_std.c **** *  Application firmware may supply the source of the USB device descriptors
 101:.\Generated_Source\PSoC5/USBFS_std.c **** *  serial number string during runtime.
 102:.\Generated_Source\PSoC5/USBFS_std.c **** *
 103:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 104:.\Generated_Source\PSoC5/USBFS_std.c **** *  snString:  pointer to string.
 105:.\Generated_Source\PSoC5/USBFS_std.c **** *
 106:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 107:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 108:.\Generated_Source\PSoC5/USBFS_std.c **** *
 109:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
 110:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
 111:.\Generated_Source\PSoC5/USBFS_std.c **** *
 112:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 113:.\Generated_Source\PSoC5/USBFS_std.c **** void  USBFS_SerialNumString(uint8 *snString) 
 114:.\Generated_Source\PSoC5/USBFS_std.c **** {
  32              		.loc 1 114 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37              	.LVL0:
 115:.\Generated_Source\PSoC5/USBFS_std.c ****     #if defined(USBFS_ENABLE_FWSN_STRING)
 116:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_snStringConfirm = USBFS_FALSE;
 117:.\Generated_Source\PSoC5/USBFS_std.c ****         if(snString != NULL)
 118:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 119:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_fwSerialNumberStringDescriptor = snString;
 120:.\Generated_Source\PSoC5/USBFS_std.c ****             /* check descriptor validation */
 121:.\Generated_Source\PSoC5/USBFS_std.c ****             if( (USBFS_fwSerialNumberStringDescriptor[0u] > 1u ) &&  \
 122:.\Generated_Source\PSoC5/USBFS_std.c ****                 (USBFS_fwSerialNumberStringDescriptor[1u] == USBFS_DESCR_STRING) )
 123:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 124:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_snStringConfirm = USBFS_TRUE;
 125:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 126:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 127:.\Generated_Source\PSoC5/USBFS_std.c ****     #else
 128:.\Generated_Source\PSoC5/USBFS_std.c ****         snString = snString;
 129:.\Generated_Source\PSoC5/USBFS_std.c ****     #endif  /* USBFS_ENABLE_FWSN_STRING */
 130:.\Generated_Source\PSoC5/USBFS_std.c **** }
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 4


  38              		.loc 1 130 0
  39 0000 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE0:
  42              		.size	USBFS_SerialNumString, .-USBFS_SerialNumString
  43              		.section	.text.USBFS_ReadDieID,"ax",%progbits
  44              		.align	1
  45              		.global	USBFS_ReadDieID
  46              		.thumb
  47              		.thumb_func
  48              		.type	USBFS_ReadDieID, %function
  49              	USBFS_ReadDieID:
  50              	.LFB2:
 131:.\Generated_Source\PSoC5/USBFS_std.c **** 
 132:.\Generated_Source\PSoC5/USBFS_std.c **** 
 133:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 134:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_HandleStandardRqst
 135:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 136:.\Generated_Source\PSoC5/USBFS_std.c **** *
 137:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 138:.\Generated_Source\PSoC5/USBFS_std.c **** *  This Routine dispatches standard requests
 139:.\Generated_Source\PSoC5/USBFS_std.c **** *
 140:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 141:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 142:.\Generated_Source\PSoC5/USBFS_std.c **** *
 143:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 144:.\Generated_Source\PSoC5/USBFS_std.c **** *  TRUE if request handled.
 145:.\Generated_Source\PSoC5/USBFS_std.c **** *
 146:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
 147:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
 148:.\Generated_Source\PSoC5/USBFS_std.c **** *
 149:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 150:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_HandleStandardRqst(void) 
 151:.\Generated_Source\PSoC5/USBFS_std.c **** {
 152:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 requestHandled = USBFS_FALSE;
 153:.\Generated_Source\PSoC5/USBFS_std.c ****     #if defined(USBFS_ENABLE_STRINGS)
 154:.\Generated_Source\PSoC5/USBFS_std.c ****         volatile uint8 *pStr = 0u;
 155:.\Generated_Source\PSoC5/USBFS_std.c ****         #if defined(USBFS_ENABLE_DESCRIPTOR_STRINGS)
 156:.\Generated_Source\PSoC5/USBFS_std.c ****             uint8 nStr;
 157:.\Generated_Source\PSoC5/USBFS_std.c ****         #endif /* USBFS_ENABLE_DESCRIPTOR_STRINGS */
 158:.\Generated_Source\PSoC5/USBFS_std.c ****     #endif /* USBFS_ENABLE_STRINGS */
 159:.\Generated_Source\PSoC5/USBFS_std.c ****     uint16 count;
 160:.\Generated_Source\PSoC5/USBFS_std.c **** 
 161:.\Generated_Source\PSoC5/USBFS_std.c ****     T_USBFS_LUT *pTmp;
 162:.\Generated_Source\PSoC5/USBFS_std.c ****     USBFS_currentTD.count = 0u;
 163:.\Generated_Source\PSoC5/USBFS_std.c **** 
 164:.\Generated_Source\PSoC5/USBFS_std.c ****     if ((CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_DIR_MASK) == USBFS_RQST_DIR_D2H)
 165:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 166:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Control Read */
 167:.\Generated_Source\PSoC5/USBFS_std.c ****         switch (CY_GET_REG8(USBFS_bRequest))
 168:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 169:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_GET_DESCRIPTOR:
 170:.\Generated_Source\PSoC5/USBFS_std.c ****                 if (CY_GET_REG8(USBFS_wValueHi) == USBFS_DESCR_DEVICE)
 171:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 172:.\Generated_Source\PSoC5/USBFS_std.c ****                     pTmp = USBFS_GetDeviceTablePtr();
 173:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.pData = pTmp->p_list;
 174:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.count = USBFS_DEVICE_DESCR_LENGTH;
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 5


 175:.\Generated_Source\PSoC5/USBFS_std.c ****                     requestHandled  = USBFS_InitControlRead();
 176:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 177:.\Generated_Source\PSoC5/USBFS_std.c ****                 else if (CY_GET_REG8(USBFS_wValueHi) == USBFS_DESCR_CONFIG)
 178:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 179:.\Generated_Source\PSoC5/USBFS_std.c ****                     pTmp = USBFS_GetConfigTablePtr(CY_GET_REG8(USBFS_wValueLo));
 180:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.pData = pTmp->p_list;
 181:.\Generated_Source\PSoC5/USBFS_std.c ****                     count = ((uint16)(USBFS_currentTD.pData)[ \
 182:.\Generated_Source\PSoC5/USBFS_std.c ****                                       USBFS_CONFIG_DESCR_TOTAL_LENGTH_HI] << 8u) | \
 183:.\Generated_Source\PSoC5/USBFS_std.c ****                                      (USBFS_currentTD.pData)[USBFS_CONFIG_DESCR_TOTAL_LENGTH_LOW];
 184:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_currentTD.count = count;
 185:.\Generated_Source\PSoC5/USBFS_std.c ****                     requestHandled  = USBFS_InitControlRead();
 186:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 187:.\Generated_Source\PSoC5/USBFS_std.c ****                 #if defined(USBFS_ENABLE_STRINGS)
 188:.\Generated_Source\PSoC5/USBFS_std.c ****                 else if (CY_GET_REG8(USBFS_wValueHi) == USBFS_DESCR_STRING)
 189:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 190:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* Descriptor Strings*/
 191:.\Generated_Source\PSoC5/USBFS_std.c ****                     #if defined(USBFS_ENABLE_DESCRIPTOR_STRINGS)
 192:.\Generated_Source\PSoC5/USBFS_std.c ****                         nStr = 0u;
 193:.\Generated_Source\PSoC5/USBFS_std.c ****                         pStr = (volatile uint8 *)&USBFS_STRING_DESCRIPTORS[0u];
 194:.\Generated_Source\PSoC5/USBFS_std.c ****                         while ( (CY_GET_REG8(USBFS_wValueLo) > nStr) && (*pStr != 0u ))
 195:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 196:.\Generated_Source\PSoC5/USBFS_std.c ****                             pStr += *pStr;
 197:.\Generated_Source\PSoC5/USBFS_std.c ****                             nStr++;
 198:.\Generated_Source\PSoC5/USBFS_std.c ****                         };
 199:.\Generated_Source\PSoC5/USBFS_std.c ****                     #endif /* End USBFS_ENABLE_DESCRIPTOR_STRINGS */
 200:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* Microsoft OS String*/
 201:.\Generated_Source\PSoC5/USBFS_std.c ****                     #if defined(USBFS_ENABLE_MSOS_STRING)
 202:.\Generated_Source\PSoC5/USBFS_std.c ****                         if( CY_GET_REG8(USBFS_wValueLo) == USBFS_STRING_MSOS )
 203:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 204:.\Generated_Source\PSoC5/USBFS_std.c ****                             pStr = (volatile uint8 *)&USBFS_MSOS_DESCRIPTOR[0u];
 205:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 206:.\Generated_Source\PSoC5/USBFS_std.c ****                     #endif /* End USBFS_ENABLE_MSOS_STRING*/
 207:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* SN string*/
 208:.\Generated_Source\PSoC5/USBFS_std.c ****                     #if defined(USBFS_ENABLE_SN_STRING)
 209:.\Generated_Source\PSoC5/USBFS_std.c ****                         if( (CY_GET_REG8(USBFS_wValueLo) != 0) && 
 210:.\Generated_Source\PSoC5/USBFS_std.c ****                             (CY_GET_REG8(USBFS_wValueLo) == 
 211:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_DEVICE0_DESCR[USBFS_DEVICE_DESCR_SN_SHIFT]) )
 212:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 213:.\Generated_Source\PSoC5/USBFS_std.c ****                             pStr = (volatile uint8 *)&USBFS_SN_STRING_DESCRIPTOR[0u];
 214:.\Generated_Source\PSoC5/USBFS_std.c ****                             if(USBFS_snStringConfirm != USBFS_FALSE)
 215:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 216:.\Generated_Source\PSoC5/USBFS_std.c ****                                 pStr = USBFS_fwSerialNumberStringDescriptor;
 217:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 218:.\Generated_Source\PSoC5/USBFS_std.c ****                             #if defined(USBFS_ENABLE_IDSN_STRING)
 219:.\Generated_Source\PSoC5/USBFS_std.c ****                                 /* Read DIE ID and genarete string descriptor in RAM*/
 220:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_ReadDieID(USBFS_idSerialNumberStringDescriptor);
 221:.\Generated_Source\PSoC5/USBFS_std.c ****                                 pStr = USBFS_idSerialNumberStringDescriptor;
 222:.\Generated_Source\PSoC5/USBFS_std.c ****                             #endif    /* End USBFS_ENABLE_IDSN_STRING */
 223:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 224:.\Generated_Source\PSoC5/USBFS_std.c ****                     #endif    /* End USBFS_ENABLE_SN_STRING */
 225:.\Generated_Source\PSoC5/USBFS_std.c ****                     if (*pStr != 0u)
 226:.\Generated_Source\PSoC5/USBFS_std.c ****                     {
 227:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.count = *pStr;
 228:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.pData = pStr;
 229:.\Generated_Source\PSoC5/USBFS_std.c ****                         requestHandled  = USBFS_InitControlRead();
 230:.\Generated_Source\PSoC5/USBFS_std.c ****                     }
 231:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 6


 232:.\Generated_Source\PSoC5/USBFS_std.c ****                 #endif /* End USBFS_ENABLE_STRINGS */
 233:.\Generated_Source\PSoC5/USBFS_std.c ****                 else
 234:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 235:.\Generated_Source\PSoC5/USBFS_std.c ****                     requestHandled = USBFS_DispatchClassRqst();
 236:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 237:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 238:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_GET_STATUS:
 239:.\Generated_Source\PSoC5/USBFS_std.c ****                 switch ((CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_RCPT_MASK))
 240:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 241:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_EP:
 242:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.count = USBFS_EP_STATUS_LENGTH;
 243:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[0] = USBFS_EP[ \
 244:.\Generated_Source\PSoC5/USBFS_std.c ****                                         CY_GET_REG8(USBFS_wIndexLo) & USBFS_DIR_UNUSED].hwEpState;
 245:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[1] = 0u;
 246:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.pData = &USBFS_tBuffer[0u];
 247:.\Generated_Source\PSoC5/USBFS_std.c ****                         requestHandled  = USBFS_InitControlRead();
 248:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 249:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_DEV:
 250:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.count = USBFS_DEVICE_STATUS_LENGTH;
 251:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[0u] = USBFS_deviceStatus;
 252:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_tBuffer[1u] = 0u;
 253:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_currentTD.pData = &USBFS_tBuffer[0u];
 254:.\Generated_Source\PSoC5/USBFS_std.c ****                         requestHandled  = USBFS_InitControlRead();
 255:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 256:.\Generated_Source\PSoC5/USBFS_std.c ****                     default:    /* requestHandled is initialezed as FALSE by default */
 257:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 258:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 259:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 260:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_GET_CONFIGURATION:
 261:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.count = 1u;
 262:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.pData = (uint8 *)&USBFS_configuration;
 263:.\Generated_Source\PSoC5/USBFS_std.c ****                 requestHandled  = USBFS_InitControlRead();
 264:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 265:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_GET_INTERFACE:
 266:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.count = 1u;
 267:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_currentTD.pData = (uint8 *)&USBFS_interfaceSetting[ \
 268:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                             CY_GET_REG8(USBFS_wInde
 269:.\Generated_Source\PSoC5/USBFS_std.c ****                 requestHandled  = USBFS_InitControlRead();
 270:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 271:.\Generated_Source\PSoC5/USBFS_std.c ****             default: /* requestHandled is initialezed as FALSE by default */
 272:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 273:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 274:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 275:.\Generated_Source\PSoC5/USBFS_std.c ****     else {
 276:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Control Write */
 277:.\Generated_Source\PSoC5/USBFS_std.c ****         switch (CY_GET_REG8(USBFS_bRequest))
 278:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 279:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_SET_ADDRESS:
 280:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_deviceAddress = CY_GET_REG8(USBFS_wValueLo);
 281:.\Generated_Source\PSoC5/USBFS_std.c ****                 requestHandled = USBFS_InitNoDataControlTransfer();
 282:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 283:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_SET_CONFIGURATION:
 284:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_configuration = CY_GET_REG8(USBFS_wValueLo);
 285:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_configurationChanged = USBFS_TRUE;
 286:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_Config(USBFS_TRUE);
 287:.\Generated_Source\PSoC5/USBFS_std.c ****                 requestHandled = USBFS_InitNoDataControlTransfer();
 288:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 7


 289:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_SET_INTERFACE:
 290:.\Generated_Source\PSoC5/USBFS_std.c ****                 if (USBFS_ValidateAlternateSetting())
 291:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 292:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_interfaceNumber = CY_GET_REG8(USBFS_wIndexLo);
 293:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_configurationChanged = USBFS_TRUE;
 294:.\Generated_Source\PSoC5/USBFS_std.c ****                     #if ((USBFS_EP_MA == USBFS__MA_DYNAMIC) && \
 295:.\Generated_Source\PSoC5/USBFS_std.c ****                          (USBFS_EP_MM == USBFS__EP_MANUAL) )
 296:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_Config(USBFS_FALSE);
 297:.\Generated_Source\PSoC5/USBFS_std.c ****                     #else
 298:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_ConfigAltChanged();
 299:.\Generated_Source\PSoC5/USBFS_std.c ****                     #endif /* End (USBFS_EP_MA == USBFS__MA_DYNAMIC) */
 300:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* Update handled Alt setting changes status */
 301:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_interfaceSetting_last[USBFS_interfaceNumber] = 
 302:.\Generated_Source\PSoC5/USBFS_std.c ****                          USBFS_interfaceSetting[USBFS_interfaceNumber];
 303:.\Generated_Source\PSoC5/USBFS_std.c ****                     requestHandled = USBFS_InitNoDataControlTransfer();
 304:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 305:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 306:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_CLEAR_FEATURE:
 307:.\Generated_Source\PSoC5/USBFS_std.c ****                 switch (CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_RCPT_MASK)
 308:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 309:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_EP:
 310:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wValueLo) == USBFS_ENDPOINT_HALT)
 311:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 312:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_ClearEndpointHalt();
 313:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 314:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 315:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_DEV:
 316:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* Clear device REMOTE_WAKEUP */
 317:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wValueLo) == USBFS_DEVICE_REMOTE_WAKEUP)
 318:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 319:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_deviceStatus &= ~USBFS_DEVICE_STATUS_REMOTE_WAKEUP;
 320:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_InitNoDataControlTransfer();
 321:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 322:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 323:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_IFC:
 324:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* Validate interfaceNumber */
 325:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wIndexLo) < USBFS_MAX_INTERFACES_NUMBER)
 326:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 327:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_interfaceStatus[CY_GET_REG8(USBFS_wIndexLo)] &= \
 328:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                 ~(CY_GET_REG8(USBFS_wValueLo)) ;
 329:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_InitNoDataControlTransfer();
 330:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 331:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 332:.\Generated_Source\PSoC5/USBFS_std.c ****                     default:    /* requestHandled is initialezed as FALSE by default */
 333:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 334:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 335:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 336:.\Generated_Source\PSoC5/USBFS_std.c ****             case USBFS_SET_FEATURE:
 337:.\Generated_Source\PSoC5/USBFS_std.c ****                 switch (CY_GET_REG8(USBFS_bmRequestType) & USBFS_RQST_RCPT_MASK)
 338:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 339:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_EP:
 340:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wValueLo) == USBFS_ENDPOINT_HALT)
 341:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 342:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_SetEndpointHalt();
 343:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 344:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 345:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_DEV:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 8


 346:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* Set device REMOTE_WAKEUP */
 347:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wValueLo) == USBFS_DEVICE_REMOTE_WAKEUP)
 348:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 349:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_deviceStatus |= USBFS_DEVICE_STATUS_REMOTE_WAKEUP;
 350:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_InitNoDataControlTransfer();
 351:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 352:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 353:.\Generated_Source\PSoC5/USBFS_std.c ****                     case USBFS_RQST_RCPT_IFC:
 354:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* Validate interfaceNumber */
 355:.\Generated_Source\PSoC5/USBFS_std.c ****                         if (CY_GET_REG8(USBFS_wIndexLo) < USBFS_MAX_INTERFACES_NUMBER)
 356:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 357:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_interfaceStatus[CY_GET_REG8(USBFS_wIndexLo)] &= \
 358:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                 ~(CY_GET_REG8(USBFS_wValueLo)) ;
 359:.\Generated_Source\PSoC5/USBFS_std.c ****                             requestHandled = USBFS_InitNoDataControlTransfer();
 360:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 361:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 362:.\Generated_Source\PSoC5/USBFS_std.c ****                     default:    /* requestHandled is initialezed as FALSE by default */
 363:.\Generated_Source\PSoC5/USBFS_std.c ****                         break;
 364:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 365:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 366:.\Generated_Source\PSoC5/USBFS_std.c ****             default:    /* requestHandled is initialezed as FALSE by default */
 367:.\Generated_Source\PSoC5/USBFS_std.c ****                 break;
 368:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 369:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 370:.\Generated_Source\PSoC5/USBFS_std.c ****     return(requestHandled);
 371:.\Generated_Source\PSoC5/USBFS_std.c **** }
 372:.\Generated_Source\PSoC5/USBFS_std.c **** 
 373:.\Generated_Source\PSoC5/USBFS_std.c **** 
 374:.\Generated_Source\PSoC5/USBFS_std.c **** #if defined(USBFS_ENABLE_IDSN_STRING)
 375:.\Generated_Source\PSoC5/USBFS_std.c **** 
 376:.\Generated_Source\PSoC5/USBFS_std.c ****     /***************************************************************************
 377:.\Generated_Source\PSoC5/USBFS_std.c ****     * Function Name: USBFS_ReadDieID
 378:.\Generated_Source\PSoC5/USBFS_std.c ****     ****************************************************************************
 379:.\Generated_Source\PSoC5/USBFS_std.c ****     *
 380:.\Generated_Source\PSoC5/USBFS_std.c ****     * Summary:
 381:.\Generated_Source\PSoC5/USBFS_std.c ****     *  This routine read Die ID and genarete Serian Number string descriptor.
 382:.\Generated_Source\PSoC5/USBFS_std.c ****     *
 383:.\Generated_Source\PSoC5/USBFS_std.c ****     * Parameters:
 384:.\Generated_Source\PSoC5/USBFS_std.c ****     *  descr:  pointer on string descriptor.
 385:.\Generated_Source\PSoC5/USBFS_std.c ****     *
 386:.\Generated_Source\PSoC5/USBFS_std.c ****     * Return:
 387:.\Generated_Source\PSoC5/USBFS_std.c ****     *  None.
 388:.\Generated_Source\PSoC5/USBFS_std.c ****     *
 389:.\Generated_Source\PSoC5/USBFS_std.c ****     * Reentrant:
 390:.\Generated_Source\PSoC5/USBFS_std.c ****     *  No.
 391:.\Generated_Source\PSoC5/USBFS_std.c ****     *
 392:.\Generated_Source\PSoC5/USBFS_std.c ****     ***************************************************************************/
 393:.\Generated_Source\PSoC5/USBFS_std.c ****     void USBFS_ReadDieID(uint8 *descr) 
 394:.\Generated_Source\PSoC5/USBFS_std.c ****     {
  51              		.loc 1 394 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              	.LVL1:
 395:.\Generated_Source\PSoC5/USBFS_std.c ****         uint8 i,j;
 396:.\Generated_Source\PSoC5/USBFS_std.c ****         uint8 value;
 397:.\Generated_Source\PSoC5/USBFS_std.c ****         static char8 const hex[16u] = "0123456789ABCDEF";
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 9


 398:.\Generated_Source\PSoC5/USBFS_std.c **** 
 399:.\Generated_Source\PSoC5/USBFS_std.c ****         /* check descriptor validation */
 400:.\Generated_Source\PSoC5/USBFS_std.c ****         if( (descr[0u] > 1u ) && (descr[1u] == USBFS_DESCR_STRING) )
  56              		.loc 1 400 0
  57 0000 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
  58              		.loc 1 394 0
  59 0002 10B5     		push	{r4, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 8
  62              		.loc 1 400 0
  63 0004 012B     		cmp	r3, #1
  64 0006 1ED9     		bls	.L7
  65              		.cfi_offset 14, -4
  66              		.cfi_offset 4, -8
  67 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  68 000a 032B     		cmp	r3, #3
  69 000c 1BD1     		bne	.L7
  70 000e 0022     		movs	r2, #0
  71              	.LVL2:
  72 0010 013B     		subs	r3, r3, #1
  73              	.LVL3:
  74 0012 15E0     		b	.L5
  75              	.L6:
 401:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 402:.\Generated_Source\PSoC5/USBFS_std.c ****             /* fill descriptor */
 403:.\Generated_Source\PSoC5/USBFS_std.c ****             for(j = 0u, i = 2u; i < descr[0u]; i += 2u)
 404:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 405:.\Generated_Source\PSoC5/USBFS_std.c ****                 value = CY_GET_XTND_REG8((void CYFAR *)(USBFS_DIE_ID + j++));
  76              		.loc 1 405 0
  77 0014 02F19241 		add	r1, r2, #1224736768
  78 0018 01F58071 		add	r1, r1, #256
  79 001c 91F800C0 		ldrb	ip, [r1, #0]	@ zero_extendqisi2
 406:.\Generated_Source\PSoC5/USBFS_std.c ****                 descr[i] = (uint8)hex[value >> 4u];
  80              		.loc 1 406 0
  81 0020 0949     		ldr	r1, .L9
  82 0022 4FEA1C14 		lsr	r4, ip, #4
  83              	.LVL4:
  84 0026 0C5D     		ldrb	r4, [r1, r4]	@ zero_extendqisi2
 407:.\Generated_Source\PSoC5/USBFS_std.c ****                 i += 2u;
 408:.\Generated_Source\PSoC5/USBFS_std.c ****                 descr[i] = (uint8)hex[value & 0x0Fu];
  85              		.loc 1 408 0
  86 0028 0CF00F0C 		and	ip, ip, #15
  87              	.LVL5:
  88              		.loc 1 406 0
  89 002c C454     		strb	r4, [r0, r3]
  90              		.loc 1 408 0
  91 002e 11F80C10 		ldrb	r1, [r1, ip]	@ zero_extendqisi2
  92 0032 9C1C     		adds	r4, r3, #2
  93              		.loc 1 405 0
  94 0034 0132     		adds	r2, r2, #1
  95              	.LVL6:
  96              		.loc 1 408 0
  97 0036 E4B2     		uxtb	r4, r4
  98 0038 0433     		adds	r3, r3, #4
  99              	.LVL7:
 100              		.loc 1 405 0
 101 003a D2B2     		uxtb	r2, r2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 10


 102              	.LVL8:
 103              		.loc 1 408 0
 104 003c 0155     		strb	r1, [r0, r4]
 105 003e DBB2     		uxtb	r3, r3
 106              	.LVL9:
 107              	.L5:
 108              		.loc 1 403 0
 109 0040 0178     		ldrb	r1, [r0, #0]	@ zero_extendqisi2
 110 0042 9942     		cmp	r1, r3
 111 0044 E6D8     		bhi	.L6
 112              	.L7:
 113 0046 10BD     		pop	{r4, pc}
 114              	.L10:
 115              		.align	2
 116              	.L9:
 117 0048 00000000 		.word	.LANCHOR0
 118              		.cfi_endproc
 119              	.LFE2:
 120              		.size	USBFS_ReadDieID, .-USBFS_ReadDieID
 121              		.section	.text.USBFS_ConfigReg,"ax",%progbits
 122              		.align	1
 123              		.global	USBFS_ConfigReg
 124              		.thumb
 125              		.thumb_func
 126              		.type	USBFS_ConfigReg, %function
 127              	USBFS_ConfigReg:
 128              	.LFB3:
 409:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 410:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 411:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 412:.\Generated_Source\PSoC5/USBFS_std.c **** 
 413:.\Generated_Source\PSoC5/USBFS_std.c **** #endif /* End $INSTANCE_NAME`_ENABLE_IDSN_STRING*/
 414:.\Generated_Source\PSoC5/USBFS_std.c **** 
 415:.\Generated_Source\PSoC5/USBFS_std.c **** 
 416:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 417:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_ConfigReg
 418:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 419:.\Generated_Source\PSoC5/USBFS_std.c **** *
 420:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 421:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine configures hardware registers from the variables.
 422:.\Generated_Source\PSoC5/USBFS_std.c **** *  It is called from USBFS_Config() function and from RestoreConfig
 423:.\Generated_Source\PSoC5/USBFS_std.c **** *  after Wakeup.
 424:.\Generated_Source\PSoC5/USBFS_std.c **** *
 425:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 426:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 427:.\Generated_Source\PSoC5/USBFS_std.c **** *
 428:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 429:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 430:.\Generated_Source\PSoC5/USBFS_std.c **** *
 431:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 432:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_ConfigReg(void) 
 433:.\Generated_Source\PSoC5/USBFS_std.c **** {
 129              		.loc 1 433 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133 0000 10B5     		push	{r4, lr}
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 11


 134              	.LCFI1:
 135              		.cfi_def_cfa_offset 8
 136              		.loc 1 433 0
 137 0002 0023     		movs	r3, #0
 138              	.LVL10:
 139 0004 0121     		movs	r1, #1
 140              	.LVL11:
 141              	.L15:
 434:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ep;
 435:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 i;
 436:.\Generated_Source\PSoC5/USBFS_std.c ****     #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
 437:.\Generated_Source\PSoC5/USBFS_std.c ****         uint8 ep_type = 0u;
 438:.\Generated_Source\PSoC5/USBFS_std.c ****     #endif /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
 439:.\Generated_Source\PSoC5/USBFS_std.c **** 
 440:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Set the endpoint buffer addresses */
 441:.\Generated_Source\PSoC5/USBFS_std.c ****     ep = USBFS_EP1;
 442:.\Generated_Source\PSoC5/USBFS_std.c ****     for (i = 0u; i < 0x80u; i+= 0x10u)
 443:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 444:.\Generated_Source\PSoC5/USBFS_std.c ****         CY_SET_REG8(&USBFS_ARB_EP1_CFG_PTR[i], USBFS_ARB_EPX_CFG_CRC_BYPASS |
 142              		.loc 1 444 0
 143 0006 2C4A     		ldr	r2, .L18
 144 0008 0C20     		movs	r0, #12
 145 000a 9A18     		adds	r2, r3, r2
 146 000c 1070     		strb	r0, [r2, #0]
 445:.\Generated_Source\PSoC5/USBFS_std.c ****                                                           USBFS_ARB_EPX_CFG_RESET);
 446:.\Generated_Source\PSoC5/USBFS_std.c **** 
 447:.\Generated_Source\PSoC5/USBFS_std.c ****         #if(USBFS_EP_MM != USBFS__EP_MANUAL)
 448:.\Generated_Source\PSoC5/USBFS_std.c ****             /* Enable all Arbiter EP Interrupts : err, buf under, buf over, dma gnt(mode2 only), in
 449:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_ARB_EP1_INT_EN_PTR[i] = USBFS_ARB_EPX_INT_MASK;
 450:.\Generated_Source\PSoC5/USBFS_std.c ****         #endif   /* End USBFS_EP_MM != USBFS__EP_MANUAL */
 451:.\Generated_Source\PSoC5/USBFS_std.c **** 
 452:.\Generated_Source\PSoC5/USBFS_std.c ****         if(USBFS_EP[ep].epMode != USBFS_MODE_DISABLE)
 147              		.loc 1 452 0
 148 000e 2B4A     		ldr	r2, .L18+4
 149 0010 00FB0122 		mla	r2, r0, r1, r2
 150 0014 5479     		ldrb	r4, [r2, #5]	@ zero_extendqisi2
 151              		.cfi_offset 14, -4
 152              		.cfi_offset 4, -8
 153 0016 3CB1     		cbz	r4, .L12
 453:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 454:.\Generated_Source\PSoC5/USBFS_std.c ****             if((USBFS_EP[ep].addr & USBFS_DIR_IN) != 0u )
 154              		.loc 1 454 0
 155 0018 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 156 001a 12F0800F 		tst	r2, #128
 157 001e 284A     		ldr	r2, .L18+8
 455:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 456:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[i], USBFS_MODE_NAK_IN);
 457:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 458:.\Generated_Source\PSoC5/USBFS_std.c ****             else
 459:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 460:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[i], USBFS_MODE_NAK_OUT);
 158              		.loc 1 460 0
 159 0020 08BF     		it	eq
 160 0022 0820     		moveq	r0, #8
 161 0024 9A18     		adds	r2, r3, r2
 162 0026 03E0     		b	.L17
 163              	.L12:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 12


 461:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* Prepare EP type mask for automatic memory allocation */
 462:.\Generated_Source\PSoC5/USBFS_std.c ****                 #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
 463:.\Generated_Source\PSoC5/USBFS_std.c ****                     ep_type |= 0x01u << (ep - USBFS_EP1);
 464:.\Generated_Source\PSoC5/USBFS_std.c ****                 #endif /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
 465:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 466:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 467:.\Generated_Source\PSoC5/USBFS_std.c ****         else
 468:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 469:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[i], USBFS_MODE_STALL_DATA_EP);
 164              		.loc 1 469 0
 165 0028 254A     		ldr	r2, .L18+8
 166 002a 6FF07F00 		mvn	r0, #127
 167 002e 9A18     		adds	r2, r3, r2
 168              	.L17:
 169 0030 1070     		strb	r0, [r2, #0]
 470:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 471:.\Generated_Source\PSoC5/USBFS_std.c **** 
 472:.\Generated_Source\PSoC5/USBFS_std.c ****         #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
 473:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8(&USBFS_SIE_EP1_CNT0_PTR[i],   USBFS_EP[ep].bufferSize >> 8u);
 170              		.loc 1 473 0
 171 0032 224A     		ldr	r2, .L18+4
 172 0034 4FF00C0C 		mov	ip, #12
 173 0038 0CFB0122 		mla	r2, ip, r1, r2
 174 003c B2F808C0 		ldrh	ip, [r2, #8]
 175 0040 2048     		ldr	r0, .L18+12
 176 0042 1FFA8CFC 		uxth	ip, ip
 177 0046 1818     		adds	r0, r3, r0
 178 0048 4FEA1C2C 		lsr	ip, ip, #8
 179 004c 80F800C0 		strb	ip, [r0, #0]
 474:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8(&USBFS_SIE_EP1_CNT1_PTR[i],   USBFS_EP[ep].bufferSize & 0xFFu);
 180              		.loc 1 474 0
 181 0050 B2F808C0 		ldrh	ip, [r2, #8]
 182 0054 1C48     		ldr	r0, .L18+16
 183 0056 5FFA8CFC 		uxtb	ip, ip
 184 005a 1818     		adds	r0, r3, r0
 185 005c 80F800C0 		strb	ip, [r0, #0]
 475:.\Generated_Source\PSoC5/USBFS_std.c **** 
 476:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8(&USBFS_ARB_RW1_RA_PTR[i],     USBFS_EP[ep].buffOffset & 0xFFu);
 186              		.loc 1 476 0
 187 0060 B2F806C0 		ldrh	ip, [r2, #6]
 188 0064 1948     		ldr	r0, .L18+20
 189 0066 5FFA8CFC 		uxtb	ip, ip
 190 006a 1818     		adds	r0, r3, r0
 191 006c 80F800C0 		strb	ip, [r0, #0]
 477:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8(&USBFS_ARB_RW1_RA_MSB_PTR[i], USBFS_EP[ep].buffOffset >> 8u);
 192              		.loc 1 477 0
 193 0070 B2F806C0 		ldrh	ip, [r2, #6]
 194 0074 1648     		ldr	r0, .L18+24
 195 0076 1FFA8CFC 		uxth	ip, ip
 196 007a 1818     		adds	r0, r3, r0
 197 007c 4FEA1C2C 		lsr	ip, ip, #8
 198 0080 80F800C0 		strb	ip, [r0, #0]
 478:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8(&USBFS_ARB_RW1_WA_PTR[i],     USBFS_EP[ep].buffOffset & 0xFFu);
 199              		.loc 1 478 0
 200 0084 B2F806C0 		ldrh	ip, [r2, #6]
 201 0088 1248     		ldr	r0, .L18+28
 202 008a 5FFA8CFC 		uxtb	ip, ip
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 13


 203 008e 1818     		adds	r0, r3, r0
 204 0090 80F800C0 		strb	ip, [r0, #0]
 479:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8(&USBFS_ARB_RW1_WA_MSB_PTR[i], USBFS_EP[ep].buffOffset >> 8u);
 205              		.loc 1 479 0
 206 0094 D288     		ldrh	r2, [r2, #6]
 480:.\Generated_Source\PSoC5/USBFS_std.c ****         #endif /* End USBFS_EP_MM != USBFS__EP_DMAAUTO */
 481:.\Generated_Source\PSoC5/USBFS_std.c **** 
 482:.\Generated_Source\PSoC5/USBFS_std.c ****         ep++;
 207              		.loc 1 482 0
 208 0096 0131     		adds	r1, r1, #1
 209              	.LVL12:
 210              		.loc 1 479 0
 211 0098 0F48     		ldr	r0, .L18+32
 212 009a 92B2     		uxth	r2, r2
 213              		.loc 1 482 0
 214 009c C9B2     		uxtb	r1, r1
 215              	.LVL13:
 216              		.loc 1 479 0
 217 009e 1818     		adds	r0, r3, r0
 218 00a0 120A     		lsrs	r2, r2, #8
 219              		.loc 1 442 0
 220 00a2 1033     		adds	r3, r3, #16
 221              	.LVL14:
 222 00a4 0929     		cmp	r1, #9
 223              		.loc 1 479 0
 224 00a6 0270     		strb	r2, [r0, #0]
 225              		.loc 1 442 0
 226 00a8 DBB2     		uxtb	r3, r3
 227              	.LVL15:
 228 00aa ACD1     		bne	.L15
 483:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 484:.\Generated_Source\PSoC5/USBFS_std.c **** 
 485:.\Generated_Source\PSoC5/USBFS_std.c ****     #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
 486:.\Generated_Source\PSoC5/USBFS_std.c ****          /* BUF_SIZE depend on DMA_THRESS value: 55-32 bytes  44-16 bytes 33-8 bytes 22-4 bytes 11-
 487:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_BUF_SIZE_REG = USBFS_DMA_BUF_SIZE;
 488:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_DMA_THRES_REG = USBFS_DMA_BYTES_PER_BURST;   /* DMA burst threshold */
 489:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_DMA_THRES_MSB_REG = 0u;
 490:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP_ACTIVE_REG = USBFS_ARB_INT_MASK;
 491:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP_TYPE_REG = ep_type;
 492:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Cfg_cmp bit set to 1 once configuration is complete. */
 493:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_ARB_CFG_REG = USBFS_ARB_CFG_AUTO_DMA | USBFS_ARB_CFG_AUTO_MEM |
 494:.\Generated_Source\PSoC5/USBFS_std.c ****                                        USBFS_ARB_CFG_CFG_CPM;
 495:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Cfg_cmp bit set to 0 during configuration of PFSUSB Registers. */
 496:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_ARB_CFG_REG = USBFS_ARB_CFG_AUTO_DMA | USBFS_ARB_CFG_AUTO_MEM;
 497:.\Generated_Source\PSoC5/USBFS_std.c ****     #endif /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
 498:.\Generated_Source\PSoC5/USBFS_std.c **** 
 499:.\Generated_Source\PSoC5/USBFS_std.c ****     CY_SET_REG8(USBFS_SIE_EP_INT_EN_PTR, 0xFFu);
 229              		.loc 1 499 0
 230 00ac 0B4B     		ldr	r3, .L18+36
 231              	.LVL16:
 232 00ae 4FF0FF32 		mov	r2, #-1
 233 00b2 1A70     		strb	r2, [r3, #0]
 500:.\Generated_Source\PSoC5/USBFS_std.c **** }
 234              		.loc 1 500 0
 235 00b4 10BD     		pop	{r4, pc}
 236              	.L19:
 237 00b6 00BF     		.align	2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 14


 238              	.L18:
 239 00b8 80600040 		.word	1073766528
 240 00bc 00000000 		.word	USBFS_EP
 241 00c0 0E600040 		.word	1073766414
 242 00c4 0C600040 		.word	1073766412
 243 00c8 0D600040 		.word	1073766413
 244 00cc 86600040 		.word	1073766534
 245 00d0 87600040 		.word	1073766535
 246 00d4 84600040 		.word	1073766532
 247 00d8 85600040 		.word	1073766533
 248 00dc 0A600040 		.word	1073766410
 249              		.cfi_endproc
 250              	.LFE3:
 251              		.size	USBFS_ConfigReg, .-USBFS_ConfigReg
 252              		.section	.text.USBFS_GetConfigTablePtr,"ax",%progbits
 253              		.align	1
 254              		.global	USBFS_GetConfigTablePtr
 255              		.thumb
 256              		.thumb_func
 257              		.type	USBFS_GetConfigTablePtr, %function
 258              	USBFS_GetConfigTablePtr:
 259              	.LFB6:
 501:.\Generated_Source\PSoC5/USBFS_std.c **** 
 502:.\Generated_Source\PSoC5/USBFS_std.c **** 
 503:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 504:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_Config
 505:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 506:.\Generated_Source\PSoC5/USBFS_std.c **** *
 507:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 508:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine configures endpoints for the entire configuration by scanning
 509:.\Generated_Source\PSoC5/USBFS_std.c **** *  the configuration descriptor.
 510:.\Generated_Source\PSoC5/USBFS_std.c **** *
 511:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 512:.\Generated_Source\PSoC5/USBFS_std.c **** *  clearAltSetting: It configures the bAlternateSetting 0 for each interface.
 513:.\Generated_Source\PSoC5/USBFS_std.c **** *
 514:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 515:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 516:.\Generated_Source\PSoC5/USBFS_std.c **** *
 517:.\Generated_Source\PSoC5/USBFS_std.c **** * USBFS_interfaceClass - Initialized class array for each interface.
 518:.\Generated_Source\PSoC5/USBFS_std.c **** *   It is used for hangling Class specific requests depend on interface class.
 519:.\Generated_Source\PSoC5/USBFS_std.c **** *   Different classes in multiple Alternate settings does not supported.
 520:.\Generated_Source\PSoC5/USBFS_std.c **** *
 521:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
 522:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
 523:.\Generated_Source\PSoC5/USBFS_std.c **** *
 524:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 525:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_Config(uint8 clearAltSetting) 
 526:.\Generated_Source\PSoC5/USBFS_std.c **** {
 527:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ep;
 528:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 cur_ep;
 529:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 i;
 530:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 iso;
 531:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 *pDescr;
 532:.\Generated_Source\PSoC5/USBFS_std.c ****     #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
 533:.\Generated_Source\PSoC5/USBFS_std.c ****         uint16 count = 0u;
 534:.\Generated_Source\PSoC5/USBFS_std.c ****     #endif /* End USBFS_EP_MM != USBFS__EP_DMAAUTO */
 535:.\Generated_Source\PSoC5/USBFS_std.c ****     
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 15


 536:.\Generated_Source\PSoC5/USBFS_std.c ****     T_USBFS_LUT *pTmp;
 537:.\Generated_Source\PSoC5/USBFS_std.c ****     T_USBFS_EP_SETTINGS_BLOCK *pEP;
 538:.\Generated_Source\PSoC5/USBFS_std.c **** 
 539:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Clear all of the endpoints */
 540:.\Generated_Source\PSoC5/USBFS_std.c ****     for (ep = 0u; ep < USBFS_MAX_EP; ep++)
 541:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 542:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].attrib = 0u;
 543:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].hwEpState = 0u;
 544:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
 545:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epToggle = 0u;
 546:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epMode = USBFS_MODE_DISABLE;
 547:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].bufferSize = 0u;
 548:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].interface = 0u;
 549:.\Generated_Source\PSoC5/USBFS_std.c **** 
 550:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 551:.\Generated_Source\PSoC5/USBFS_std.c **** 
 552:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Clear Alternate settings for all interfaces */
 553:.\Generated_Source\PSoC5/USBFS_std.c ****     if(clearAltSetting != 0u)
 554:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 555:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < USBFS_MAX_INTERFACES_NUMBER; i++)
 556:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 557:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_interfaceSetting[i] = 0x00u;
 558:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_interfaceSetting_last[i] = 0x00u;
 559:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 560:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 561:.\Generated_Source\PSoC5/USBFS_std.c **** 
 562:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Init Endpoints and Device Status if configured */
 563:.\Generated_Source\PSoC5/USBFS_std.c ****     if(USBFS_configuration > 0u)
 564:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 565:.\Generated_Source\PSoC5/USBFS_std.c ****         pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 566:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Set Power status for current configuration */
 567:.\Generated_Source\PSoC5/USBFS_std.c ****         pDescr = (uint8 *)pTmp->p_list;
 568:.\Generated_Source\PSoC5/USBFS_std.c ****         if((pDescr[USBFS_CONFIG_DESCR_ATTRIB] & USBFS_CONFIG_DESCR_ATTRIB_SELF_POWERED) != 0u)
 569:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 570:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_deviceStatus |=  USBFS_DEVICE_STATUS_SELF_POWERED;
 571:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 572:.\Generated_Source\PSoC5/USBFS_std.c ****         else
 573:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 574:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_deviceStatus &=  ~USBFS_DEVICE_STATUS_SELF_POWERED;
 575:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 576:.\Generated_Source\PSoC5/USBFS_std.c ****         pTmp++;
 577:.\Generated_Source\PSoC5/USBFS_std.c ****         ep = pTmp->c;  /* For this table, c is the number of endpoints configurations  */
 578:.\Generated_Source\PSoC5/USBFS_std.c **** 
 579:.\Generated_Source\PSoC5/USBFS_std.c ****         #if ((USBFS_EP_MA == USBFS__MA_DYNAMIC) && \
 580:.\Generated_Source\PSoC5/USBFS_std.c ****              (USBFS_EP_MM == USBFS__EP_MANUAL) )
 581:.\Generated_Source\PSoC5/USBFS_std.c ****             /* Config for dynamic EP memory allocation */
 582:.\Generated_Source\PSoC5/USBFS_std.c ****             /* p_list points the endpoint setting table. */
 583:.\Generated_Source\PSoC5/USBFS_std.c ****             pEP = (T_USBFS_EP_SETTINGS_BLOCK *) pTmp->p_list;
 584:.\Generated_Source\PSoC5/USBFS_std.c ****             for (i = 0u; i < ep; i++, pEP++)
 585:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 586:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* compate current Alternate setting with EP Alt*/
 587:.\Generated_Source\PSoC5/USBFS_std.c ****                 if(USBFS_interfaceSetting[pEP->interface] == pEP->altSetting)
 588:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 589:.\Generated_Source\PSoC5/USBFS_std.c ****                     cur_ep = pEP->addr & USBFS_DIR_UNUSED;
 590:.\Generated_Source\PSoC5/USBFS_std.c ****                     iso  = ((pEP->attributes & USBFS_EP_TYPE_MASK) == USBFS_EP_TYPE_ISOC);
 591:.\Generated_Source\PSoC5/USBFS_std.c ****                     if (pEP->addr & USBFS_DIR_IN)
 592:.\Generated_Source\PSoC5/USBFS_std.c ****                     {
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 16


 593:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* IN Endpoint */
 594:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_EP[cur_ep].apiEpState = USBFS_EVENT_PENDING;
 595:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_EP[cur_ep].epMode = \
 596:.\Generated_Source\PSoC5/USBFS_std.c ****                                                 (iso ? USBFS_MODE_ISO_IN : USBFS_MODE_ACK_IN);
 597:.\Generated_Source\PSoC5/USBFS_std.c ****                         #if defined(USBFS_ENABLE_CDC_CLASS)
 598:.\Generated_Source\PSoC5/USBFS_std.c ****                             if(((pEP->bMisc == USBFS_CLASS_CDC_DATA) ||
 599:.\Generated_Source\PSoC5/USBFS_std.c ****                                 (pEP->bMisc == USBFS_CLASS_CDC)) &&
 600:.\Generated_Source\PSoC5/USBFS_std.c ****                                 ((pEP->attributes & USBFS_EP_TYPE_MASK) != USBFS_EP_TYPE_INT))
 601:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 602:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_cdc_data_in_ep = cur_ep;
 603:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 604:.\Generated_Source\PSoC5/USBFS_std.c ****                         #endif  /* End USBFS_ENABLE_CDC_CLASS*/
 605:.\Generated_Source\PSoC5/USBFS_std.c ****                         #if defined(USBFS_ENABLE_MIDI_STREAMING)
 606:.\Generated_Source\PSoC5/USBFS_std.c ****                             if((pEP->bMisc == USBFS_CLASS_AUDIO) &&
 607:.\Generated_Source\PSoC5/USBFS_std.c ****                                ((pEP->attributes & USBFS_EP_TYPE_MASK) == USBFS_EP_TYPE_BULK))
 608:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 609:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_midi_in_ep = cur_ep;
 610:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 611:.\Generated_Source\PSoC5/USBFS_std.c ****                         #endif  /* End USBFS_ENABLE_MIDI_STREAMING*/
 612:.\Generated_Source\PSoC5/USBFS_std.c ****                     }
 613:.\Generated_Source\PSoC5/USBFS_std.c ****                     else
 614:.\Generated_Source\PSoC5/USBFS_std.c ****                     {
 615:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* OUT Endpoint */
 616:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_EP[cur_ep].apiEpState = USBFS_NO_EVENT_PENDING;
 617:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_EP[cur_ep].epMode = \
 618:.\Generated_Source\PSoC5/USBFS_std.c ****                                                 (iso ? USBFS_MODE_ISO_OUT : USBFS_MODE_ACK_OUT);
 619:.\Generated_Source\PSoC5/USBFS_std.c ****                         #if defined(USBFS_ENABLE_CDC_CLASS)
 620:.\Generated_Source\PSoC5/USBFS_std.c ****                             if(((pEP->bMisc == USBFS_CLASS_CDC_DATA) ||
 621:.\Generated_Source\PSoC5/USBFS_std.c ****                                 (pEP->bMisc == USBFS_CLASS_CDC)) &&
 622:.\Generated_Source\PSoC5/USBFS_std.c ****                                 ((pEP->attributes & USBFS_EP_TYPE_MASK) != USBFS_EP_TYPE_INT))
 623:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 624:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_cdc_data_out_ep = cur_ep;
 625:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 626:.\Generated_Source\PSoC5/USBFS_std.c ****                         #endif  /* End USBFS_ENABLE_CDC_CLASS*/
 627:.\Generated_Source\PSoC5/USBFS_std.c ****                         #if defined(USBFS_ENABLE_MIDI_STREAMING)
 628:.\Generated_Source\PSoC5/USBFS_std.c ****                             if((pEP->bMisc == USBFS_CLASS_AUDIO) &&
 629:.\Generated_Source\PSoC5/USBFS_std.c ****                                ((pEP->attributes & USBFS_EP_TYPE_MASK) == USBFS_EP_TYPE_BULK))
 630:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 631:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_midi_out_ep = cur_ep;
 632:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 633:.\Generated_Source\PSoC5/USBFS_std.c ****                         #endif  /* End USBFS_ENABLE_MIDI_STREAMING*/
 634:.\Generated_Source\PSoC5/USBFS_std.c ****                     }
 635:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].bufferSize = pEP->bufferSize;
 636:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].addr = pEP->addr;
 637:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].attrib = pEP->attributes;
 638:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 639:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 640:.\Generated_Source\PSoC5/USBFS_std.c ****         #else /* Config for static EP memory allocation  */
 641:.\Generated_Source\PSoC5/USBFS_std.c ****             for (i = USBFS_EP1; i < USBFS_MAX_EP; i++)
 642:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 643:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* and p_list points the endpoint setting table. */
 644:.\Generated_Source\PSoC5/USBFS_std.c ****                 pEP = (T_USBFS_EP_SETTINGS_BLOCK *) pTmp->p_list;
 645:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* find max length for each EP and select it (length could be different in differen
 646:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* but other settings should be correct with regards to Interface alt Setting */
 647:.\Generated_Source\PSoC5/USBFS_std.c ****                 for (cur_ep = 0u; cur_ep < ep; cur_ep++, pEP++)
 648:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 649:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* EP count is equal to EP # in table and we found larger EP length than have b
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 17


 650:.\Generated_Source\PSoC5/USBFS_std.c ****                     if(i == (pEP->addr & USBFS_DIR_UNUSED))
 651:.\Generated_Source\PSoC5/USBFS_std.c ****                     {
 652:.\Generated_Source\PSoC5/USBFS_std.c ****                         if(USBFS_EP[i].bufferSize < pEP->bufferSize)
 653:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 654:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_EP[i].bufferSize = pEP->bufferSize;
 655:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 656:.\Generated_Source\PSoC5/USBFS_std.c ****                         /* compate current Alternate setting with EP Alt*/
 657:.\Generated_Source\PSoC5/USBFS_std.c ****                         if(USBFS_interfaceSetting[pEP->interface] == pEP->altSetting)
 658:.\Generated_Source\PSoC5/USBFS_std.c ****                         {
 659:.\Generated_Source\PSoC5/USBFS_std.c ****                             iso  = ((pEP->attributes & USBFS_EP_TYPE_MASK) == USBFS_EP_TYPE_ISOC);
 660:.\Generated_Source\PSoC5/USBFS_std.c ****                             if (pEP->addr & USBFS_DIR_IN)
 661:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 662:.\Generated_Source\PSoC5/USBFS_std.c ****                                 /* IN Endpoint */
 663:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].apiEpState = USBFS_EVENT_PENDING;
 664:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].epMode =
 665:.\Generated_Source\PSoC5/USBFS_std.c ****                                                     (iso ? USBFS_MODE_ISO_IN : USBFS_MODE_ACK_IN);
 666:.\Generated_Source\PSoC5/USBFS_std.c ****                                 /* Find and init CDC IN endpoint number */
 667:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #if defined(USBFS_ENABLE_CDC_CLASS)
 668:.\Generated_Source\PSoC5/USBFS_std.c ****                                     if(((pEP->bMisc == USBFS_CLASS_CDC_DATA) ||
 669:.\Generated_Source\PSoC5/USBFS_std.c ****                                         (pEP->bMisc == USBFS_CLASS_CDC)) &&
 670:.\Generated_Source\PSoC5/USBFS_std.c ****                                         ((pEP->attributes & USBFS_EP_TYPE_MASK) !=
 671:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                                         USBFS_EP_TY
 672:.\Generated_Source\PSoC5/USBFS_std.c ****                                     {
 673:.\Generated_Source\PSoC5/USBFS_std.c ****                                         USBFS_cdc_data_in_ep = i;
 674:.\Generated_Source\PSoC5/USBFS_std.c ****                                     }
 675:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #endif  /* End USBFS_ENABLE_CDC_CLASS*/
 676:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #if defined(USBFS_ENABLE_MIDI_STREAMING)
 677:.\Generated_Source\PSoC5/USBFS_std.c ****                                     if((pEP->bMisc == USBFS_CLASS_AUDIO) &&
 678:.\Generated_Source\PSoC5/USBFS_std.c ****                                        ((pEP->attributes & USBFS_EP_TYPE_MASK) ==
 679:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                                         USBFS_EP_TY
 680:.\Generated_Source\PSoC5/USBFS_std.c ****                                     {
 681:.\Generated_Source\PSoC5/USBFS_std.c ****                                         USBFS_midi_in_ep = i;
 682:.\Generated_Source\PSoC5/USBFS_std.c ****                                     }
 683:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #endif  /* End USBFS_ENABLE_MIDI_STREAMING*/
 684:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 685:.\Generated_Source\PSoC5/USBFS_std.c ****                             else
 686:.\Generated_Source\PSoC5/USBFS_std.c ****                             {
 687:.\Generated_Source\PSoC5/USBFS_std.c ****                                 /* OUT Endpoint */
 688:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].apiEpState = USBFS_NO_EVENT_PENDING;
 689:.\Generated_Source\PSoC5/USBFS_std.c ****                                 USBFS_EP[i].epMode =
 690:.\Generated_Source\PSoC5/USBFS_std.c ****                                                 (iso ? USBFS_MODE_ISO_OUT : USBFS_MODE_ACK_OUT);
 691:.\Generated_Source\PSoC5/USBFS_std.c ****                                 /* Find and init CDC IN endpoint number */
 692:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #if defined(USBFS_ENABLE_CDC_CLASS)
 693:.\Generated_Source\PSoC5/USBFS_std.c ****                                     if(((pEP->bMisc == USBFS_CLASS_CDC_DATA) ||
 694:.\Generated_Source\PSoC5/USBFS_std.c ****                                         (pEP->bMisc == USBFS_CLASS_CDC)) &&
 695:.\Generated_Source\PSoC5/USBFS_std.c ****                                         ((pEP->attributes & USBFS_EP_TYPE_MASK) !=
 696:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                                     USBFS_EP_TYPE_I
 697:.\Generated_Source\PSoC5/USBFS_std.c ****                                     {
 698:.\Generated_Source\PSoC5/USBFS_std.c ****                                         USBFS_cdc_data_out_ep = i;
 699:.\Generated_Source\PSoC5/USBFS_std.c ****                                     }
 700:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #endif  /* End USBFS_ENABLE_CDC_CLASS*/
 701:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #if defined(USBFS_ENABLE_MIDI_STREAMING)
 702:.\Generated_Source\PSoC5/USBFS_std.c ****                                     if((pEP->bMisc == USBFS_CLASS_AUDIO) &&
 703:.\Generated_Source\PSoC5/USBFS_std.c ****                                        ((pEP->attributes & USBFS_EP_TYPE_MASK) ==
 704:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                                         USBFS_EP_TY
 705:.\Generated_Source\PSoC5/USBFS_std.c ****                                     {
 706:.\Generated_Source\PSoC5/USBFS_std.c ****                                         USBFS_midi_out_ep = i;
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 18


 707:.\Generated_Source\PSoC5/USBFS_std.c ****                                     }
 708:.\Generated_Source\PSoC5/USBFS_std.c ****                                 #endif  /* End USBFS_ENABLE_MIDI_STREAMING*/
 709:.\Generated_Source\PSoC5/USBFS_std.c ****                             }
 710:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_EP[i].addr = pEP->addr;
 711:.\Generated_Source\PSoC5/USBFS_std.c ****                             USBFS_EP[i].attrib = pEP->attributes;
 712:.\Generated_Source\PSoC5/USBFS_std.c **** 
 713:.\Generated_Source\PSoC5/USBFS_std.c ****                             #if(USBFS_EP_MM == USBFS__EP_DMAAUTO)
 714:.\Generated_Source\PSoC5/USBFS_std.c ****                                 break;      /* use first EP setting in Auto memory managment */
 715:.\Generated_Source\PSoC5/USBFS_std.c ****                             #endif /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
 716:.\Generated_Source\PSoC5/USBFS_std.c ****                         }
 717:.\Generated_Source\PSoC5/USBFS_std.c ****                     }
 718:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 719:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 720:.\Generated_Source\PSoC5/USBFS_std.c ****         #endif /* End (USBFS_EP_MA == USBFS__MA_DYNAMIC) */
 721:.\Generated_Source\PSoC5/USBFS_std.c **** 
 722:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Init class array for each interface and interface number for each EP.
 723:.\Generated_Source\PSoC5/USBFS_std.c ****         *  It is used for hangling Class specific requests directed to either an
 724:.\Generated_Source\PSoC5/USBFS_std.c ****         *  interface or the endpoint.
 725:.\Generated_Source\PSoC5/USBFS_std.c ****         */
 726:.\Generated_Source\PSoC5/USBFS_std.c ****         /* p_list points the endpoint setting table. */
 727:.\Generated_Source\PSoC5/USBFS_std.c ****         pEP = (T_USBFS_EP_SETTINGS_BLOCK *) pTmp->p_list;
 728:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < ep; i++, pEP++)
 729:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 730:.\Generated_Source\PSoC5/USBFS_std.c ****             /* config interface number for each EP*/
 731:.\Generated_Source\PSoC5/USBFS_std.c ****             USBFS_EP[pEP->addr & USBFS_DIR_UNUSED].interface = pEP->interface;
 732:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 733:.\Generated_Source\PSoC5/USBFS_std.c ****         /* init pointer on interface class table*/
 734:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_interfaceClass = USBFS_GetInterfaceClassTablePtr();
 735:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Set the endpoint buffer addresses */
 736:.\Generated_Source\PSoC5/USBFS_std.c ****         
 737:.\Generated_Source\PSoC5/USBFS_std.c ****         #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
 738:.\Generated_Source\PSoC5/USBFS_std.c ****             for (ep = USBFS_EP1; ep < USBFS_MAX_EP; ep++)
 739:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 740:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[ep].buffOffset = count;
 741:.\Generated_Source\PSoC5/USBFS_std.c ****                  count += USBFS_EP[ep].bufferSize;
 742:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 743:.\Generated_Source\PSoC5/USBFS_std.c ****         #endif /* End USBFS_EP_MM != USBFS__EP_DMAAUTO */
 744:.\Generated_Source\PSoC5/USBFS_std.c **** 
 745:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Congigure hardware registers */
 746:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_ConfigReg();
 747:.\Generated_Source\PSoC5/USBFS_std.c ****     } /* USBFS_configuration > 0 */
 748:.\Generated_Source\PSoC5/USBFS_std.c **** }
 749:.\Generated_Source\PSoC5/USBFS_std.c **** 
 750:.\Generated_Source\PSoC5/USBFS_std.c **** 
 751:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 752:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_ConfigAltChanged
 753:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 754:.\Generated_Source\PSoC5/USBFS_std.c **** *
 755:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 756:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine undate configuration for the required endpoints only.
 757:.\Generated_Source\PSoC5/USBFS_std.c **** *  It is called after SET_INTERFACE request when Static memory allocation used.
 758:.\Generated_Source\PSoC5/USBFS_std.c **** *
 759:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 760:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 761:.\Generated_Source\PSoC5/USBFS_std.c **** *
 762:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 763:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 19


 764:.\Generated_Source\PSoC5/USBFS_std.c **** *
 765:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
 766:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
 767:.\Generated_Source\PSoC5/USBFS_std.c **** *
 768:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 769:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_ConfigAltChanged() 
 770:.\Generated_Source\PSoC5/USBFS_std.c **** {
 771:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ep,cur_ep,i;
 772:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 iso;
 773:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ri;
 774:.\Generated_Source\PSoC5/USBFS_std.c **** 
 775:.\Generated_Source\PSoC5/USBFS_std.c ****     T_USBFS_LUT *pTmp;
 776:.\Generated_Source\PSoC5/USBFS_std.c ****     T_USBFS_EP_SETTINGS_BLOCK *pEP;
 777:.\Generated_Source\PSoC5/USBFS_std.c **** 
 778:.\Generated_Source\PSoC5/USBFS_std.c **** 
 779:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Init Endpoints and Device Status if configured */
 780:.\Generated_Source\PSoC5/USBFS_std.c ****     if(USBFS_configuration > 0u)
 781:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 782:.\Generated_Source\PSoC5/USBFS_std.c ****         pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 783:.\Generated_Source\PSoC5/USBFS_std.c ****         pTmp++;
 784:.\Generated_Source\PSoC5/USBFS_std.c ****         ep = pTmp->c;  /* For this table, c is the number of endpoints configurations  */
 785:.\Generated_Source\PSoC5/USBFS_std.c **** 
 786:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Do not touch EP wich doesn't need reconfiguration */
 787:.\Generated_Source\PSoC5/USBFS_std.c ****         /* When Alt setting chaged, the only required endpoints need to be reconfigured */
 788:.\Generated_Source\PSoC5/USBFS_std.c ****         /* p_list points the endpoint setting table. */
 789:.\Generated_Source\PSoC5/USBFS_std.c ****         pEP = (T_USBFS_EP_SETTINGS_BLOCK *) pTmp->p_list;
 790:.\Generated_Source\PSoC5/USBFS_std.c ****         for (i = 0u; i < ep; i++, pEP++)
 791:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 792:.\Generated_Source\PSoC5/USBFS_std.c ****             /*If Alt setting changed and new is same with EP Alt */
 793:.\Generated_Source\PSoC5/USBFS_std.c ****             if((USBFS_interfaceSetting[pEP->interface] !=
 794:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_interfaceSetting_last[pEP->interface] ) &&
 795:.\Generated_Source\PSoC5/USBFS_std.c ****                (USBFS_interfaceSetting[pEP->interface] == pEP->altSetting) &&
 796:.\Generated_Source\PSoC5/USBFS_std.c ****                 pEP->interface == CY_GET_REG8(USBFS_wIndexLo))
 797:.\Generated_Source\PSoC5/USBFS_std.c ****             {
 798:.\Generated_Source\PSoC5/USBFS_std.c ****                 cur_ep = pEP->addr & USBFS_DIR_UNUSED;
 799:.\Generated_Source\PSoC5/USBFS_std.c ****                 ri = ((cur_ep - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 800:.\Generated_Source\PSoC5/USBFS_std.c ****                 iso  = ((pEP->attributes & USBFS_EP_TYPE_MASK) == USBFS_EP_TYPE_ISOC);
 801:.\Generated_Source\PSoC5/USBFS_std.c ****                 if (pEP->addr & USBFS_DIR_IN)
 802:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 803:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* IN Endpoint */
 804:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].apiEpState = USBFS_EVENT_PENDING;
 805:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].epMode =
 806:.\Generated_Source\PSoC5/USBFS_std.c ****                                             (iso ? USBFS_MODE_ISO_IN : USBFS_MODE_ACK_IN);
 807:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 808:.\Generated_Source\PSoC5/USBFS_std.c ****                 else
 809:.\Generated_Source\PSoC5/USBFS_std.c ****                 {
 810:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* OUT Endpoint */
 811:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].apiEpState = USBFS_NO_EVENT_PENDING;
 812:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_EP[cur_ep].epMode =
 813:.\Generated_Source\PSoC5/USBFS_std.c ****                                             (iso ? USBFS_MODE_ISO_OUT : USBFS_MODE_ACK_OUT);
 814:.\Generated_Source\PSoC5/USBFS_std.c ****                 }
 815:.\Generated_Source\PSoC5/USBFS_std.c ****                  /* Change the SIE mode for the selected EP to NAK ALL */
 816:.\Generated_Source\PSoC5/USBFS_std.c ****                  CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[ri], USBFS_MODE_NAK_IN_OUT);
 817:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].bufferSize = pEP->bufferSize;
 818:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].addr = pEP->addr;
 819:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].attrib = pEP->attributes;
 820:.\Generated_Source\PSoC5/USBFS_std.c **** 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 20


 821:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* Clear the data toggle */
 822:.\Generated_Source\PSoC5/USBFS_std.c ****                 USBFS_EP[cur_ep].epToggle = 0u;
 823:.\Generated_Source\PSoC5/USBFS_std.c **** 
 824:.\Generated_Source\PSoC5/USBFS_std.c ****                 /* Dynamic reconfiguration for mode 3 transfer */
 825:.\Generated_Source\PSoC5/USBFS_std.c ****                 #if((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (!CY_PSOC5A) )
 826:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* In_data_rdy for selected EP should be set to 0 */
 827:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_ARB_EP1_CFG_PTR[ri] &= ~USBFS_ARB_EPX_CFG_IN_DATA_RDY;
 828:.\Generated_Source\PSoC5/USBFS_std.c **** 
 829:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* write the EP number for which reconfiguration is required */
 830:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_DYN_RECONFIG_REG = (cur_ep - USBFS_EP1) << 
 831:.\Generated_Source\PSoC5/USBFS_std.c ****                                                         USBFS_DYN_RECONFIG_EP_SHIFT;
 832:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* Set the dyn_config_en bit in dynamic reconfiguration register */
 833:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_DYN_RECONFIG_REG |= USBFS_DYN_RECONFIG_ENABLE;
 834:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* wait for the dyn_config_rdy bit to set by the block,
 835:.\Generated_Source\PSoC5/USBFS_std.c ****                     *  this bit will be set to 1 when block is ready for reconfiguration.
 836:.\Generated_Source\PSoC5/USBFS_std.c ****                     */
 837:.\Generated_Source\PSoC5/USBFS_std.c ****                     while((USBFS_DYN_RECONFIG_REG & USBFS_DYN_RECONFIG_RDY_STS) == 0u);
 838:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* Once dyn_config_rdy bit is set, FW can change the EP configuration. */
 839:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* Change EP Type with new direction */
 840:.\Generated_Source\PSoC5/USBFS_std.c ****                     if((pEP->addr & USBFS_DIR_IN) == 0)
 841:.\Generated_Source\PSoC5/USBFS_std.c ****                     {
 842:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_EP_TYPE_REG |= 0x01u << (cur_ep - USBFS_EP1);
 843:.\Generated_Source\PSoC5/USBFS_std.c ****                     }
 844:.\Generated_Source\PSoC5/USBFS_std.c ****                     else
 845:.\Generated_Source\PSoC5/USBFS_std.c ****                     {
 846:.\Generated_Source\PSoC5/USBFS_std.c ****                         USBFS_EP_TYPE_REG &= ~(0x01u << (cur_ep - USBFS_EP1));
 847:.\Generated_Source\PSoC5/USBFS_std.c ****                     }
 848:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* dynamic reconfiguration enable bit cleared, pointers and control/status
 849:.\Generated_Source\PSoC5/USBFS_std.c ****                     *  signals for the selected EP is cleared/re-initialized on negedge
 850:.\Generated_Source\PSoC5/USBFS_std.c ****                     *  of dynamic reconfiguration enable bit).
 851:.\Generated_Source\PSoC5/USBFS_std.c ****                     */
 852:.\Generated_Source\PSoC5/USBFS_std.c ****                     USBFS_DYN_RECONFIG_REG &= ~USBFS_DYN_RECONFIG_ENABLE;
 853:.\Generated_Source\PSoC5/USBFS_std.c ****                     /* The main loop has to reenable DMA and OUT endpoint*/
 854:.\Generated_Source\PSoC5/USBFS_std.c ****                 #else
 855:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8(&USBFS_SIE_EP1_CNT0_PTR[ri],   USBFS_EP[cur_ep].bufferSize >> 8u);
 856:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8(&USBFS_SIE_EP1_CNT1_PTR[ri],   USBFS_EP[cur_ep].bufferSize & 0xFFu);
 857:.\Generated_Source\PSoC5/USBFS_std.c **** 
 858:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8(&USBFS_ARB_RW1_RA_PTR[ri],     USBFS_EP[cur_ep].buffOffset & 0xFFu);
 859:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8(&USBFS_ARB_RW1_RA_MSB_PTR[ri], USBFS_EP[cur_ep].buffOffset >> 8u);
 860:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8(&USBFS_ARB_RW1_WA_PTR[ri],     USBFS_EP[cur_ep].buffOffset & 0xFFu);
 861:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8(&USBFS_ARB_RW1_WA_MSB_PTR[ri], USBFS_EP[cur_ep].buffOffset >> 8u);
 862:.\Generated_Source\PSoC5/USBFS_std.c ****                 #endif /* End USBFS_EP_MM == USBFS__EP_DMAAUTO */
 863:.\Generated_Source\PSoC5/USBFS_std.c ****             }
 864:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 865:.\Generated_Source\PSoC5/USBFS_std.c ****     } /* USBFS_configuration > 0 */
 866:.\Generated_Source\PSoC5/USBFS_std.c **** }
 867:.\Generated_Source\PSoC5/USBFS_std.c **** 
 868:.\Generated_Source\PSoC5/USBFS_std.c **** 
 869:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 870:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_GetConfigTablePtr
 871:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 872:.\Generated_Source\PSoC5/USBFS_std.c **** *
 873:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 874:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine returns a pointer a configuration table entry
 875:.\Generated_Source\PSoC5/USBFS_std.c **** *
 876:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 877:.\Generated_Source\PSoC5/USBFS_std.c **** *  c:  Configuration Index
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 21


 878:.\Generated_Source\PSoC5/USBFS_std.c **** *
 879:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 880:.\Generated_Source\PSoC5/USBFS_std.c **** *  Device Descriptor pointer.
 881:.\Generated_Source\PSoC5/USBFS_std.c **** *
 882:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 883:.\Generated_Source\PSoC5/USBFS_std.c **** T_USBFS_LUT *USBFS_GetConfigTablePtr(uint8 c) \
 884:.\Generated_Source\PSoC5/USBFS_std.c ****                                                         
 885:.\Generated_Source\PSoC5/USBFS_std.c **** {
 260              		.loc 1 885 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.LVL17:
 266              	.LBB6:
 267              	.LBB7:
 886:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Device Table */
 887:.\Generated_Source\PSoC5/USBFS_std.c ****     T_USBFS_LUT *pTmp;
 888:.\Generated_Source\PSoC5/USBFS_std.c **** 
 889:.\Generated_Source\PSoC5/USBFS_std.c ****     pTmp = USBFS_GetDeviceTablePtr();
 890:.\Generated_Source\PSoC5/USBFS_std.c **** 
 891:.\Generated_Source\PSoC5/USBFS_std.c ****     /* The first entry points to the Device Descriptor,
 892:.\Generated_Source\PSoC5/USBFS_std.c ****        the the configuration entries  */
 893:.\Generated_Source\PSoC5/USBFS_std.c ****     return(pTmp[c + 1u].p_list);
 894:.\Generated_Source\PSoC5/USBFS_std.c **** }
 895:.\Generated_Source\PSoC5/USBFS_std.c **** 
 896:.\Generated_Source\PSoC5/USBFS_std.c **** 
 897:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 898:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_GetDeviceTablePtr
 899:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 900:.\Generated_Source\PSoC5/USBFS_std.c **** *
 901:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 902:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine returns a pointer to the Device table
 903:.\Generated_Source\PSoC5/USBFS_std.c **** *
 904:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 905:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 906:.\Generated_Source\PSoC5/USBFS_std.c **** *
 907:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 908:.\Generated_Source\PSoC5/USBFS_std.c **** *  Device Table pointer
 909:.\Generated_Source\PSoC5/USBFS_std.c **** *
 910:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 911:.\Generated_Source\PSoC5/USBFS_std.c **** T_USBFS_LUT *USBFS_GetDeviceTablePtr(void) 
 912:.\Generated_Source\PSoC5/USBFS_std.c **** {
 913:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Device Table */
 914:.\Generated_Source\PSoC5/USBFS_std.c ****     return(USBFS_TABLE[USBFS_device].p_list);
 268              		.loc 1 914 0
 269 0000 044B     		ldr	r3, .L22
 270 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 271 0004 044B     		ldr	r3, .L22+4
 272 0006 03EBC203 		add	r3, r3, r2, lsl #3
 273 000a 5B68     		ldr	r3, [r3, #4]
 274 000c 03EBC003 		add	r3, r3, r0, lsl #3
 275              	.LBE7:
 276              	.LBE6:
 277              		.loc 1 894 0
 278 0010 D868     		ldr	r0, [r3, #12]
 279              	.LVL18:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 22


 280 0012 7047     		bx	lr
 281              	.L23:
 282              		.align	2
 283              	.L22:
 284 0014 00000000 		.word	USBFS_device
 285 0018 00000000 		.word	USBFS_TABLE
 286              		.cfi_endproc
 287              	.LFE6:
 288              		.size	USBFS_GetConfigTablePtr, .-USBFS_GetConfigTablePtr
 289              		.section	.text.USBFS_ConfigAltChanged,"ax",%progbits
 290              		.align	1
 291              		.global	USBFS_ConfigAltChanged
 292              		.thumb
 293              		.thumb_func
 294              		.type	USBFS_ConfigAltChanged, %function
 295              	USBFS_ConfigAltChanged:
 296              	.LFB5:
 297              		.loc 1 770 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 302              	.LCFI2:
 303              		.cfi_def_cfa_offset 24
 304              		.loc 1 780 0
 305 0002 3D4B     		ldr	r3, .L37
 306              		.cfi_offset 14, -4
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 6, -12
 309              		.cfi_offset 5, -16
 310              		.cfi_offset 4, -20
 311              		.cfi_offset 3, -24
 312 0004 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 313 0006 002A     		cmp	r2, #0
 314 0008 74D0     		beq	.L35
 315              		.loc 1 782 0
 316 000a 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 317 000c 0138     		subs	r0, r0, #1
 318 000e C0B2     		uxtb	r0, r0
 319 0010 FFF7FEFF 		bl	USBFS_GetConfigTablePtr
 320              		.loc 1 769 0
 321 0014 90F808C0 		ldrb	ip, [r0, #8]	@ zero_extendqisi2
 322              	.LVL19:
 323              		.loc 1 789 0
 324 0018 C468     		ldr	r4, [r0, #12]
 325              		.loc 1 769 0
 326 001a 4FEACC0C 		lsl	ip, ip, #3
 327 001e 0020     		movs	r0, #0
 328              	.LVL20:
 329              		.loc 1 790 0
 330 0020 66E0     		b	.L26
 331              	.L34:
 332              		.loc 1 793 0
 333 0022 235C     		ldrb	r3, [r4, r0]	@ zero_extendqisi2
 334 0024 354A     		ldr	r2, .L37+4
 335              		.loc 1 794 0
 336 0026 3649     		ldr	r1, .L37+8
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 23


 337              		.loc 1 793 0
 338 0028 D55C     		ldrb	r5, [r2, r3]	@ zero_extendqisi2
 339              		.loc 1 794 0
 340 002a C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 341              		.loc 1 793 0
 342 002c 8D42     		cmp	r5, r1
 343 002e 5ED0     		beq	.L27
 344              		.loc 1 769 0
 345 0030 2118     		adds	r1, r4, r0
 346              		.loc 1 795 0
 347 0032 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 348              		.loc 1 793 0
 349 0034 4D78     		ldrb	r5, [r1, #1]	@ zero_extendqisi2
 350 0036 9542     		cmp	r5, r2
 351 0038 59D1     		bne	.L27
 352              		.loc 1 796 0
 353 003a 324A     		ldr	r2, .L37+12
 354 003c 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 355              		.loc 1 793 0
 356 003e 9342     		cmp	r3, r2
 357 0040 55D1     		bne	.L27
 358              		.loc 1 800 0
 359 0042 CD78     		ldrb	r5, [r1, #3]	@ zero_extendqisi2
 360              		.loc 1 798 0
 361 0044 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 362              		.loc 1 800 0
 363 0046 05F00305 		and	r5, r5, #3
 364 004a 012D     		cmp	r5, #1
 365 004c 14BF     		ite	ne
 366 004e 0025     		movne	r5, #0
 367 0050 0125     		moveq	r5, #1
 368              		.loc 1 801 0
 369 0052 12F0800F 		tst	r2, #128
 370              		.loc 1 798 0
 371 0056 02F07F03 		and	r3, r2, #127
 372              	.LVL21:
 373 005a 2B4A     		ldr	r2, .L37+16
 374              		.loc 1 801 0
 375 005c 09D0     		beq	.L28
 376              		.loc 1 804 0
 377 005e 0C26     		movs	r6, #12
 378 0060 06FB0322 		mla	r2, r6, r3, r2
 379 0064 0B3E     		subs	r6, r6, #11
 380 0066 5670     		strb	r6, [r2, #1]
 381              		.loc 1 805 0
 382 0068 002D     		cmp	r5, #0
 383 006a 14BF     		ite	ne
 384 006c 0725     		movne	r5, #7
 385 006e 0D25     		moveq	r5, #13
 386 0070 08E0     		b	.L36
 387              	.L28:
 388              		.loc 1 811 0
 389 0072 0C26     		movs	r6, #12
 390 0074 06FB0322 		mla	r2, r6, r3, r2
 391 0078 0C3E     		subs	r6, r6, #12
 392 007a 5670     		strb	r6, [r2, #1]
 393              		.loc 1 812 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 24


 394 007c B542     		cmp	r5, r6
 395 007e 14BF     		ite	ne
 396 0080 0525     		movne	r5, #5
 397 0082 0925     		moveq	r5, #9
 398              	.L36:
 399 0084 5571     		strb	r5, [r2, #5]
 400              		.loc 1 816 0
 401 0086 5A1E     		subs	r2, r3, #1
 402 0088 1201     		lsls	r2, r2, #4
 403 008a 204D     		ldr	r5, .L37+20
 404 008c D2B2     		uxtb	r2, r2
 405 008e 5519     		adds	r5, r2, r5
 406 0090 0126     		movs	r6, #1
 407 0092 2E70     		strb	r6, [r5, #0]
 408              		.loc 1 817 0
 409 0094 0B36     		adds	r6, r6, #11
 410 0096 5E43     		muls	r6, r3, r6
 411 0098 1B4D     		ldr	r5, .L37+16
 412 009a 8F88     		ldrh	r7, [r1, #4]
 413 009c 7319     		adds	r3, r6, r5
 414              	.LVL22:
 415 009e 1F81     		strh	r7, [r3, #8]	@ movhi
 416              		.loc 1 818 0
 417 00a0 8F78     		ldrb	r7, [r1, #2]	@ zero_extendqisi2
 418 00a2 1F71     		strb	r7, [r3, #4]
 419              		.loc 1 819 0
 420 00a4 C978     		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 421 00a6 7155     		strb	r1, [r6, r5]
 422              		.loc 1 822 0
 423 00a8 0021     		movs	r1, #0
 424 00aa D970     		strb	r1, [r3, #3]
 425              		.loc 1 855 0
 426 00ac 1D89     		ldrh	r5, [r3, #8]
 427 00ae 1849     		ldr	r1, .L37+24
 428 00b0 ADB2     		uxth	r5, r5
 429 00b2 5118     		adds	r1, r2, r1
 430 00b4 2D0A     		lsrs	r5, r5, #8
 431 00b6 0D70     		strb	r5, [r1, #0]
 432              		.loc 1 856 0
 433 00b8 1D89     		ldrh	r5, [r3, #8]
 434 00ba 1649     		ldr	r1, .L37+28
 435 00bc EDB2     		uxtb	r5, r5
 436 00be 5118     		adds	r1, r2, r1
 437 00c0 0D70     		strb	r5, [r1, #0]
 438              		.loc 1 858 0
 439 00c2 DD88     		ldrh	r5, [r3, #6]
 440 00c4 1449     		ldr	r1, .L37+32
 441 00c6 EDB2     		uxtb	r5, r5
 442 00c8 5118     		adds	r1, r2, r1
 443 00ca 0D70     		strb	r5, [r1, #0]
 444              		.loc 1 859 0
 445 00cc DD88     		ldrh	r5, [r3, #6]
 446 00ce 1349     		ldr	r1, .L37+36
 447 00d0 ADB2     		uxth	r5, r5
 448 00d2 5118     		adds	r1, r2, r1
 449 00d4 2D0A     		lsrs	r5, r5, #8
 450 00d6 0D70     		strb	r5, [r1, #0]
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 25


 451              		.loc 1 860 0
 452 00d8 DD88     		ldrh	r5, [r3, #6]
 453 00da 1149     		ldr	r1, .L37+40
 454 00dc EDB2     		uxtb	r5, r5
 455 00de 5118     		adds	r1, r2, r1
 456 00e0 0D70     		strb	r5, [r1, #0]
 457              		.loc 1 861 0
 458 00e2 DB88     		ldrh	r3, [r3, #6]
 459 00e4 0F49     		ldr	r1, .L37+44
 460 00e6 9BB2     		uxth	r3, r3
 461 00e8 5118     		adds	r1, r2, r1
 462 00ea 1B0A     		lsrs	r3, r3, #8
 463 00ec 0B70     		strb	r3, [r1, #0]
 464              	.L27:
 465 00ee 0830     		adds	r0, r0, #8
 466              	.L26:
 467              		.loc 1 790 0
 468 00f0 6045     		cmp	r0, ip
 469 00f2 96D1     		bne	.L34
 470              	.L35:
 471 00f4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 472              	.L38:
 473 00f6 00BF     		.align	2
 474              	.L37:
 475 00f8 00000000 		.word	USBFS_configuration
 476 00fc 00000000 		.word	USBFS_interfaceSetting
 477 0100 00000000 		.word	USBFS_interfaceSetting_last
 478 0104 04600040 		.word	1073766404
 479 0108 00000000 		.word	USBFS_EP
 480 010c 0E600040 		.word	1073766414
 481 0110 0C600040 		.word	1073766412
 482 0114 0D600040 		.word	1073766413
 483 0118 86600040 		.word	1073766534
 484 011c 87600040 		.word	1073766535
 485 0120 84600040 		.word	1073766532
 486 0124 85600040 		.word	1073766533
 487              		.cfi_endproc
 488              	.LFE5:
 489              		.size	USBFS_ConfigAltChanged, .-USBFS_ConfigAltChanged
 490              		.section	.text.USBFS_GetDeviceTablePtr,"ax",%progbits
 491              		.align	1
 492              		.global	USBFS_GetDeviceTablePtr
 493              		.thumb
 494              		.thumb_func
 495              		.type	USBFS_GetDeviceTablePtr, %function
 496              	USBFS_GetDeviceTablePtr:
 497              	.LFB7:
 498              		.loc 1 912 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              		.loc 1 914 0
 504 0000 034B     		ldr	r3, .L41
 505 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 506 0004 034B     		ldr	r3, .L41+4
 507 0006 03EBC203 		add	r3, r3, r2, lsl #3
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 26


 915:.\Generated_Source\PSoC5/USBFS_std.c **** }
 508              		.loc 1 915 0
 509 000a 5868     		ldr	r0, [r3, #4]
 510 000c 7047     		bx	lr
 511              	.L42:
 512 000e 00BF     		.align	2
 513              	.L41:
 514 0010 00000000 		.word	USBFS_device
 515 0014 00000000 		.word	USBFS_TABLE
 516              		.cfi_endproc
 517              	.LFE7:
 518              		.size	USBFS_GetDeviceTablePtr, .-USBFS_GetDeviceTablePtr
 519              		.section	.text.USBFS_GetInterfaceClassTablePtr,"ax",%progbits
 520              		.align	1
 521              		.global	USBFS_GetInterfaceClassTablePtr
 522              		.thumb
 523              		.thumb_func
 524              		.type	USBFS_GetInterfaceClassTablePtr, %function
 525              	USBFS_GetInterfaceClassTablePtr:
 526              	.LFB8:
 916:.\Generated_Source\PSoC5/USBFS_std.c **** 
 917:.\Generated_Source\PSoC5/USBFS_std.c **** 
 918:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 919:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USB_GetInterfaceClassTablePtr
 920:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 921:.\Generated_Source\PSoC5/USBFS_std.c **** *
 922:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 923:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine returns Interface Class table pointer, which contains
 924:.\Generated_Source\PSoC5/USBFS_std.c **** *  the relation between interface number and interface class.
 925:.\Generated_Source\PSoC5/USBFS_std.c **** *
 926:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 927:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 928:.\Generated_Source\PSoC5/USBFS_std.c **** *
 929:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 930:.\Generated_Source\PSoC5/USBFS_std.c **** *  Interface Class table pointer.
 931:.\Generated_Source\PSoC5/USBFS_std.c **** *
 932:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 933:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 CYCODE *USBFS_GetInterfaceClassTablePtr(void)
 934:.\Generated_Source\PSoC5/USBFS_std.c ****                                                         
 935:.\Generated_Source\PSoC5/USBFS_std.c **** {
 527              		.loc 1 935 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531 0000 08B5     		push	{r3, lr}
 532              	.LCFI3:
 533              		.cfi_def_cfa_offset 8
 936:.\Generated_Source\PSoC5/USBFS_std.c ****     T_USBFS_LUT *pTmp;
 937:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 currentInterfacesNum;
 938:.\Generated_Source\PSoC5/USBFS_std.c **** 
 939:.\Generated_Source\PSoC5/USBFS_std.c ****     pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 534              		.loc 1 939 0
 535 0002 064B     		ldr	r3, .L45
 536              		.cfi_offset 14, -4
 537              		.cfi_offset 3, -8
 538 0004 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 539 0006 0138     		subs	r0, r0, #1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 27


 540 0008 C0B2     		uxtb	r0, r0
 541 000a FFF7FEFF 		bl	USBFS_GetConfigTablePtr
 940:.\Generated_Source\PSoC5/USBFS_std.c ****     currentInterfacesNum  = ((uint8 *) pTmp->p_list)[USBFS_CONFIG_DESCR_NUM_INTERFACES];
 941:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Third entry in the LUT starts the Interface Table pointers */
 942:.\Generated_Source\PSoC5/USBFS_std.c ****     pTmp += 2;
 943:.\Generated_Source\PSoC5/USBFS_std.c ****     /* The INTERFACE_CLASS table is located after all interfaces*/
 944:.\Generated_Source\PSoC5/USBFS_std.c ****     pTmp += currentInterfacesNum;
 542              		.loc 1 944 0
 543 000e 4368     		ldr	r3, [r0, #4]
 544              	.LVL23:
 545 0010 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 546 0012 00EBC300 		add	r0, r0, r3, lsl #3
 547              	.LVL24:
 945:.\Generated_Source\PSoC5/USBFS_std.c ****     return(pTmp->p_list);
 946:.\Generated_Source\PSoC5/USBFS_std.c **** }
 548              		.loc 1 946 0
 549 0016 4069     		ldr	r0, [r0, #20]
 550 0018 08BD     		pop	{r3, pc}
 551              	.L46:
 552 001a 00BF     		.align	2
 553              	.L45:
 554 001c 00000000 		.word	USBFS_configuration
 555              		.cfi_endproc
 556              	.LFE8:
 557              		.size	USBFS_GetInterfaceClassTablePtr, .-USBFS_GetInterfaceClassTablePtr
 558              		.section	.text.USBFS_Config,"ax",%progbits
 559              		.align	1
 560              		.global	USBFS_Config
 561              		.thumb
 562              		.thumb_func
 563              		.type	USBFS_Config, %function
 564              	USBFS_Config:
 565              	.LFB4:
 566              		.loc 1 526 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              	.LVL25:
 571 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 572              	.LCFI4:
 573              		.cfi_def_cfa_offset 24
 574              		.loc 1 526 0
 575 0004 0021     		movs	r1, #0
 576              	.L48:
 577              		.loc 1 542 0
 578 0006 4FF00C0C 		mov	ip, #12
 579 000a 0CFB01FC 		mul	ip, ip, r1
 580 000e 524C     		ldr	r4, .L70
 581              		.cfi_offset 14, -4
 582              		.cfi_offset 8, -8
 583              		.cfi_offset 7, -12
 584              		.cfi_offset 6, -16
 585              		.cfi_offset 5, -20
 586              		.cfi_offset 4, -24
 587 0010 0023     		movs	r3, #0
 588 0012 0CEB0402 		add	r2, ip, r4
 589              		.loc 1 548 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 28


 590 0016 0131     		adds	r1, r1, #1
 591              		.loc 1 542 0
 592 0018 0CF80430 		strb	r3, [ip, r4]
 593              		.loc 1 540 0
 594 001c 0929     		cmp	r1, #9
 595              		.loc 1 547 0
 596 001e 02F10804 		add	r4, r2, #8
 597              		.loc 1 543 0
 598 0022 9370     		strb	r3, [r2, #2]
 599              		.loc 1 544 0
 600 0024 5370     		strb	r3, [r2, #1]
 601              		.loc 1 545 0
 602 0026 D370     		strb	r3, [r2, #3]
 603              		.loc 1 546 0
 604 0028 5371     		strb	r3, [r2, #5]
 605              		.loc 1 547 0
 606 002a 1381     		strh	r3, [r2, #8]	@ movhi
 607              		.loc 1 548 0
 608 002c A370     		strb	r3, [r4, #2]
 609              		.loc 1 540 0
 610 002e EAD1     		bne	.L48
 611              		.loc 1 553 0
 612 0030 18B1     		cbz	r0, .L49
 613              		.loc 1 557 0
 614 0032 4A4A     		ldr	r2, .L70+4
 615 0034 1370     		strb	r3, [r2, #0]
 616              		.loc 1 558 0
 617 0036 4A4A     		ldr	r2, .L70+8
 618 0038 1370     		strb	r3, [r2, #0]
 619              	.L49:
 620              		.loc 1 563 0
 621 003a 4A4B     		ldr	r3, .L70+12
 622 003c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 623 003e 002A     		cmp	r2, #0
 624 0040 00F08880 		beq	.L67
 625              		.loc 1 565 0
 626 0044 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 627              	.LVL26:
 628 0046 0138     		subs	r0, r0, #1
 629 0048 C0B2     		uxtb	r0, r0
 630 004a FFF7FEFF 		bl	USBFS_GetConfigTablePtr
 631              		.loc 1 567 0
 632 004e 4368     		ldr	r3, [r0, #4]
 633              	.LVL27:
 634              		.loc 1 644 0
 635 0050 4FF0000C 		mov	ip, #0
 636              		.loc 1 567 0
 637 0054 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 638 0056 13F0400F 		tst	r3, #64
 639 005a 434B     		ldr	r3, .L70+16
 640              		.loc 1 570 0
 641 005c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 642 005e 14BF     		ite	ne
 643 0060 42F00102 		orrne	r2, r2, #1
 644              	.LVL28:
 645              		.loc 1 574 0
 646 0064 02F0FE02 		andeq	r2, r2, #254
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 29


 647              	.LVL29:
 648 0068 1A70     		strb	r2, [r3, #0]
 649              		.loc 1 577 0
 650 006a 047A     		ldrb	r4, [r0, #8]	@ zero_extendqisi2
 651              	.LVL30:
 652              		.loc 1 644 0
 653 006c C168     		ldr	r1, [r0, #12]
 654              	.L63:
 655              		.loc 1 525 0
 656 006e E700     		lsls	r7, r4, #3
 657 0070 0022     		movs	r2, #0
 658              	.LVL31:
 659              		.loc 1 647 0
 660 0072 41E0     		b	.L53
 661              	.L62:
 662              		.loc 1 525 0
 663 0074 8818     		adds	r0, r1, r2
 664              	.LVL32:
 665              		.loc 1 650 0
 666 0076 90F802E0 		ldrb	lr, [r0, #2]	@ zero_extendqisi2
 667 007a 0EF07F05 		and	r5, lr, #127
 668 007e AB42     		cmp	r3, r5
 669 0080 39D1     		bne	.L54
 670              		.loc 1 652 0
 671 0082 354D     		ldr	r5, .L70
 672 0084 0C26     		movs	r6, #12
 673 0086 06FB0355 		mla	r5, r6, r3, r5
 674 008a B5F80880 		ldrh	r8, [r5, #8]
 675 008e 8688     		ldrh	r6, [r0, #4]
 676 0090 1FFA88F8 		uxth	r8, r8
 677 0094 B045     		cmp	r8, r6
 678              		.loc 1 654 0
 679 0096 38BF     		it	cc
 680 0098 2E81     		strhcc	r6, [r5, #8]	@ movhi
 681              		.loc 1 657 0
 682 009a 8D5C     		ldrb	r5, [r1, r2]	@ zero_extendqisi2
 683 009c 2F4E     		ldr	r6, .L70+4
 684 009e 755D     		ldrb	r5, [r6, r5]	@ zero_extendqisi2
 685 00a0 4678     		ldrb	r6, [r0, #1]	@ zero_extendqisi2
 686 00a2 AE42     		cmp	r6, r5
 687 00a4 27D1     		bne	.L54
 688              		.loc 1 659 0
 689 00a6 C578     		ldrb	r5, [r0, #3]	@ zero_extendqisi2
 690 00a8 2B48     		ldr	r0, .L70
 691 00aa 05F00306 		and	r6, r5, #3
 692 00ae 012E     		cmp	r6, #1
 693 00b0 14BF     		ite	ne
 694 00b2 0026     		movne	r6, #0
 695 00b4 0126     		moveq	r6, #1
 696              		.loc 1 663 0
 697 00b6 4FF00C08 		mov	r8, #12
 698              		.loc 1 660 0
 699 00ba 1EF0800F 		tst	lr, #128
 700              		.loc 1 663 0
 701 00be 08FB0300 		mla	r0, r8, r3, r0
 702              		.loc 1 660 0
 703 00c2 08D0     		beq	.L56
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 30


 704              		.loc 1 663 0
 705 00c4 A8F10B08 		sub	r8, r8, #11
 706 00c8 80F80180 		strb	r8, [r0, #1]
 707              		.loc 1 664 0
 708 00cc 002E     		cmp	r6, #0
 709 00ce 14BF     		ite	ne
 710 00d0 0726     		movne	r6, #7
 711 00d2 0D26     		moveq	r6, #13
 712 00d4 07E0     		b	.L69
 713              	.L56:
 714              		.loc 1 688 0
 715 00d6 A8F10C08 		sub	r8, r8, #12
 716 00da 80F80180 		strb	r8, [r0, #1]
 717              		.loc 1 689 0
 718 00de 4645     		cmp	r6, r8
 719 00e0 14BF     		ite	ne
 720 00e2 0526     		movne	r6, #5
 721 00e4 0926     		moveq	r6, #9
 722              	.L69:
 723 00e6 4671     		strb	r6, [r0, #5]
 724              		.loc 1 710 0
 725 00e8 0C26     		movs	r6, #12
 726 00ea 7343     		muls	r3, r6, r3
 727 00ec 1A48     		ldr	r0, .L70
 728 00ee 1E18     		adds	r6, r3, r0
 729 00f0 86F804E0 		strb	lr, [r6, #4]
 730              		.loc 1 711 0
 731 00f4 1D54     		strb	r5, [r3, r0]
 732              	.L54:
 733 00f6 0832     		adds	r2, r2, #8
 734              	.LVL33:
 735              	.L53:
 736              		.loc 1 647 0
 737 00f8 BA42     		cmp	r2, r7
 738 00fa 0CF10103 		add	r3, ip, #1
 739 00fe B9D1     		bne	.L62
 740              		.loc 1 641 0
 741 0100 082B     		cmp	r3, #8
 742              		.loc 1 647 0
 743 0102 9C46     		mov	ip, r3
 744              		.loc 1 641 0
 745 0104 B3D1     		bne	.L63
 746              		.loc 1 525 0
 747 0106 E400     		lsls	r4, r4, #3
 748              	.LVL34:
 749 0108 0023     		movs	r3, #0
 750              		.loc 1 728 0
 751 010a 0CE0     		b	.L64
 752              	.L65:
 753              		.loc 1 731 0
 754 010c CA18     		adds	r2, r1, r3
 755 010e 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 756 0110 114D     		ldr	r5, .L70
 757 0112 02F07F02 		and	r2, r2, #127
 758 0116 4FF00C0C 		mov	ip, #12
 759 011a 0CFB0252 		mla	r2, ip, r2, r5
 760 011e C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 31


 761              	.LVL35:
 762 0120 0832     		adds	r2, r2, #8
 763 0122 9070     		strb	r0, [r2, #2]
 764 0124 0833     		adds	r3, r3, #8
 765              	.LVL36:
 766              	.L64:
 767              		.loc 1 728 0
 768 0126 A342     		cmp	r3, r4
 769 0128 F0D1     		bne	.L65
 770              		.loc 1 734 0
 771 012a FFF7FEFF 		bl	USBFS_GetInterfaceClassTablePtr
 772              	.LVL37:
 773 012e 0F4B     		ldr	r3, .L70+20
 774 0130 1860     		str	r0, [r3, #0]
 775 0132 0023     		movs	r3, #0
 776 0134 1A46     		mov	r2, r3
 777              	.LVL38:
 778              	.L66:
 779              		.loc 1 740 0
 780 0136 0849     		ldr	r1, .L70
 781              		.loc 1 525 0
 782 0138 0133     		adds	r3, r3, #1
 783              		.loc 1 740 0
 784 013a 0C20     		movs	r0, #12
 785 013c 00FB0311 		mla	r1, r0, r3, r1
 786 0140 CA80     		strh	r2, [r1, #6]	@ movhi
 787              		.loc 1 741 0
 788 0142 0989     		ldrh	r1, [r1, #8]
 789 0144 5218     		adds	r2, r2, r1
 790              	.LVL39:
 791              		.loc 1 738 0
 792 0146 082B     		cmp	r3, #8
 793              		.loc 1 741 0
 794 0148 92B2     		uxth	r2, r2
 795              	.LVL40:
 796              		.loc 1 738 0
 797 014a F4D1     		bne	.L66
 798              		.loc 1 748 0
 799 014c BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 800              		.loc 1 746 0
 801 0150 FFF7FEBF 		b	USBFS_ConfigReg
 802              	.LVL41:
 803              	.L67:
 804 0154 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 805              	.L71:
 806              		.align	2
 807              	.L70:
 808 0158 00000000 		.word	USBFS_EP
 809 015c 00000000 		.word	USBFS_interfaceSetting
 810 0160 00000000 		.word	USBFS_interfaceSetting_last
 811 0164 00000000 		.word	USBFS_configuration
 812 0168 00000000 		.word	USBFS_deviceStatus
 813 016c 00000000 		.word	USBFS_interfaceClass
 814              		.cfi_endproc
 815              	.LFE4:
 816              		.size	USBFS_Config, .-USBFS_Config
 817              		.section	.text.USBFS_TerminateEP,"ax",%progbits
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 32


 818              		.align	1
 819              		.global	USBFS_TerminateEP
 820              		.thumb
 821              		.thumb_func
 822              		.type	USBFS_TerminateEP, %function
 823              	USBFS_TerminateEP:
 824              	.LFB9:
 947:.\Generated_Source\PSoC5/USBFS_std.c **** 
 948:.\Generated_Source\PSoC5/USBFS_std.c **** 
 949:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 950:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_TerminateEP
 951:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
 952:.\Generated_Source\PSoC5/USBFS_std.c **** *
 953:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
 954:.\Generated_Source\PSoC5/USBFS_std.c **** *  This function terminates the specified USBFS endpoint. 
 955:.\Generated_Source\PSoC5/USBFS_std.c **** *  This function should be used before endpoint reconfiguration.
 956:.\Generated_Source\PSoC5/USBFS_std.c **** *
 957:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
 958:.\Generated_Source\PSoC5/USBFS_std.c **** *  Endpoint number.
 959:.\Generated_Source\PSoC5/USBFS_std.c **** *
 960:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
 961:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
 962:.\Generated_Source\PSoC5/USBFS_std.c **** *
 963:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
 964:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
 965:.\Generated_Source\PSoC5/USBFS_std.c **** *
 966:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
 967:.\Generated_Source\PSoC5/USBFS_std.c **** void USBFS_TerminateEP(uint8 ep) 
 968:.\Generated_Source\PSoC5/USBFS_std.c **** {
 825              		.loc 1 968 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 830              	.LVL42:
 969:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ri;
 970:.\Generated_Source\PSoC5/USBFS_std.c **** 
 971:.\Generated_Source\PSoC5/USBFS_std.c ****     ep &= USBFS_DIR_UNUSED;
 831              		.loc 1 971 0
 832 0000 00F07F00 		and	r0, r0, #127
 833              	.LVL43:
 972:.\Generated_Source\PSoC5/USBFS_std.c ****     ri = ((ep - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
 834              		.loc 1 972 0
 835 0004 431E     		subs	r3, r0, #1
 836 0006 DBB2     		uxtb	r3, r3
 973:.\Generated_Source\PSoC5/USBFS_std.c **** 
 974:.\Generated_Source\PSoC5/USBFS_std.c ****     if ((ep > USBFS_EP0) && (ep < USBFS_MAX_EP))
 837              		.loc 1 974 0
 838 0008 072B     		cmp	r3, #7
 839 000a 17D8     		bhi	.L75
 975:.\Generated_Source\PSoC5/USBFS_std.c ****     {
 976:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Set the endpoint Halt */
 977:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].hwEpState |= (USBFS_ENDPOINT_STATUS_HALT);
 840              		.loc 1 977 0
 841 000c 0C49     		ldr	r1, .L76
 842 000e 0C22     		movs	r2, #12
 843 0010 02FB0010 		mla	r0, r2, r0, r1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 33


 844              	.LVL44:
 845 0014 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 846              		.loc 1 972 0
 847 0016 1B01     		lsls	r3, r3, #4
 848              		.loc 1 977 0
 849 0018 41F00101 		orr	r1, r1, #1
 850 001c 8170     		strb	r1, [r0, #2]
 978:.\Generated_Source\PSoC5/USBFS_std.c **** 
 979:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Clear the data toggle */
 980:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epToggle = 0u;
 851              		.loc 1 980 0
 852 001e 0021     		movs	r1, #0
 853 0020 C170     		strb	r1, [r0, #3]
 981:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_ALLOWED;
 854              		.loc 1 981 0
 855 0022 0231     		adds	r1, r1, #2
 856 0024 4170     		strb	r1, [r0, #1]
 982:.\Generated_Source\PSoC5/USBFS_std.c **** 
 983:.\Generated_Source\PSoC5/USBFS_std.c ****         if (USBFS_EP[ep].addr & USBFS_DIR_IN)
 857              		.loc 1 983 0
 858 0026 0179     		ldrb	r1, [r0, #4]	@ zero_extendqisi2
 859              		.loc 1 972 0
 860 0028 DBB2     		uxtb	r3, r3
 861              	.LVL45:
 862              		.loc 1 983 0
 863 002a 11F0800F 		tst	r1, #128
 864 002e 02D0     		beq	.L74
 984:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 985:.\Generated_Source\PSoC5/USBFS_std.c ****             /* IN Endpoint */
 986:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[ri], USBFS_MODE_NAK_IN);
 865              		.loc 1 986 0
 866 0030 0449     		ldr	r1, .L76+4
 867 0032 5A54     		strb	r2, [r3, r1]
 868 0034 7047     		bx	lr
 869              	.L74:
 987:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 988:.\Generated_Source\PSoC5/USBFS_std.c ****         else
 989:.\Generated_Source\PSoC5/USBFS_std.c ****         {
 990:.\Generated_Source\PSoC5/USBFS_std.c ****             /* OUT Endpoint */
 991:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[ri], USBFS_MODE_NAK_OUT);
 870              		.loc 1 991 0
 871 0036 034A     		ldr	r2, .L76+4
 872 0038 0821     		movs	r1, #8
 873 003a 9954     		strb	r1, [r3, r2]
 874              	.LVL46:
 875              	.L75:
 876 003c 7047     		bx	lr
 877              	.L77:
 878 003e 00BF     		.align	2
 879              	.L76:
 880 0040 00000000 		.word	USBFS_EP
 881 0044 0E600040 		.word	1073766414
 882              		.cfi_endproc
 883              	.LFE9:
 884              		.size	USBFS_TerminateEP, .-USBFS_TerminateEP
 885              		.section	.text.USBFS_ValidateAlternateSetting,"ax",%progbits
 886              		.align	1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 34


 887              		.global	USBFS_ValidateAlternateSetting
 888              		.thumb
 889              		.thumb_func
 890              		.type	USBFS_ValidateAlternateSetting, %function
 891              	USBFS_ValidateAlternateSetting:
 892              	.LFB12:
 992:.\Generated_Source\PSoC5/USBFS_std.c ****         }
 993:.\Generated_Source\PSoC5/USBFS_std.c ****     }
 994:.\Generated_Source\PSoC5/USBFS_std.c **** }
 995:.\Generated_Source\PSoC5/USBFS_std.c **** 
 996:.\Generated_Source\PSoC5/USBFS_std.c **** 
 997:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
 998:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_SetEndpointHalt
 999:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
1000:.\Generated_Source\PSoC5/USBFS_std.c **** *
1001:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
1002:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine handles set endpoint halt.
1003:.\Generated_Source\PSoC5/USBFS_std.c **** *
1004:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
1005:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
1006:.\Generated_Source\PSoC5/USBFS_std.c **** *
1007:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
1008:.\Generated_Source\PSoC5/USBFS_std.c **** *  requestHandled.
1009:.\Generated_Source\PSoC5/USBFS_std.c **** *
1010:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
1011:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
1012:.\Generated_Source\PSoC5/USBFS_std.c **** *
1013:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
1014:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_SetEndpointHalt(void) 
1015:.\Generated_Source\PSoC5/USBFS_std.c **** {
1016:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ep, ri;
1017:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 requestHandled = USBFS_FALSE;
1018:.\Generated_Source\PSoC5/USBFS_std.c **** 
1019:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Set endpoint halt */
1020:.\Generated_Source\PSoC5/USBFS_std.c ****     ep = CY_GET_REG8(USBFS_wIndexLo) & USBFS_DIR_UNUSED;
1021:.\Generated_Source\PSoC5/USBFS_std.c ****     ri = ((ep - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
1022:.\Generated_Source\PSoC5/USBFS_std.c **** 
1023:.\Generated_Source\PSoC5/USBFS_std.c ****     if ((ep > USBFS_EP0) && (ep < USBFS_MAX_EP))
1024:.\Generated_Source\PSoC5/USBFS_std.c ****     {
1025:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Set the endpoint Halt */
1026:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].hwEpState |= (USBFS_ENDPOINT_STATUS_HALT);
1027:.\Generated_Source\PSoC5/USBFS_std.c **** 
1028:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Clear the data toggle */
1029:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epToggle = 0u;
1030:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].apiEpState |= USBFS_NO_EVENT_ALLOWED;
1031:.\Generated_Source\PSoC5/USBFS_std.c **** 
1032:.\Generated_Source\PSoC5/USBFS_std.c ****         if (USBFS_EP[ep].addr & USBFS_DIR_IN)
1033:.\Generated_Source\PSoC5/USBFS_std.c ****         {
1034:.\Generated_Source\PSoC5/USBFS_std.c ****             /* IN Endpoint */
1035:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[ri], USBFS_MODE_STALL_DATA_EP |
1036:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                USBFS_MODE_ACK_IN);
1037:.\Generated_Source\PSoC5/USBFS_std.c ****         }
1038:.\Generated_Source\PSoC5/USBFS_std.c ****         else
1039:.\Generated_Source\PSoC5/USBFS_std.c ****         {
1040:.\Generated_Source\PSoC5/USBFS_std.c ****             /* OUT Endpoint */
1041:.\Generated_Source\PSoC5/USBFS_std.c ****             CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[ri], USBFS_MODE_STALL_DATA_EP |
1042:.\Generated_Source\PSoC5/USBFS_std.c ****                                                                USBFS_MODE_ACK_OUT);
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 35


1043:.\Generated_Source\PSoC5/USBFS_std.c ****         }
1044:.\Generated_Source\PSoC5/USBFS_std.c ****         requestHandled = USBFS_InitNoDataControlTransfer();
1045:.\Generated_Source\PSoC5/USBFS_std.c ****     }
1046:.\Generated_Source\PSoC5/USBFS_std.c **** 
1047:.\Generated_Source\PSoC5/USBFS_std.c ****     return(requestHandled);
1048:.\Generated_Source\PSoC5/USBFS_std.c **** }
1049:.\Generated_Source\PSoC5/USBFS_std.c **** 
1050:.\Generated_Source\PSoC5/USBFS_std.c **** 
1051:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
1052:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_ClearEndpointHalt
1053:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
1054:.\Generated_Source\PSoC5/USBFS_std.c **** *
1055:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
1056:.\Generated_Source\PSoC5/USBFS_std.c **** *  This routine handles clear endpoint halt.
1057:.\Generated_Source\PSoC5/USBFS_std.c **** *
1058:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
1059:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
1060:.\Generated_Source\PSoC5/USBFS_std.c **** *
1061:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
1062:.\Generated_Source\PSoC5/USBFS_std.c **** *  requestHandled.
1063:.\Generated_Source\PSoC5/USBFS_std.c **** *
1064:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
1065:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
1066:.\Generated_Source\PSoC5/USBFS_std.c **** *
1067:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
1068:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_ClearEndpointHalt(void) 
1069:.\Generated_Source\PSoC5/USBFS_std.c **** {
1070:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 ep, ri;
1071:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 requestHandled = USBFS_FALSE;
1072:.\Generated_Source\PSoC5/USBFS_std.c **** 
1073:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Clear endpoint halt */
1074:.\Generated_Source\PSoC5/USBFS_std.c ****     ep = CY_GET_REG8(USBFS_wIndexLo) & USBFS_DIR_UNUSED;
1075:.\Generated_Source\PSoC5/USBFS_std.c ****     ri = ((ep - USBFS_EP1) << USBFS_EPX_CNTX_ADDR_SHIFT);
1076:.\Generated_Source\PSoC5/USBFS_std.c **** 
1077:.\Generated_Source\PSoC5/USBFS_std.c ****     if ((ep > USBFS_EP0) && (ep < USBFS_MAX_EP))
1078:.\Generated_Source\PSoC5/USBFS_std.c ****     {
1079:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Clear the endpoint Halt */
1080:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].hwEpState &= ~(USBFS_ENDPOINT_STATUS_HALT);
1081:.\Generated_Source\PSoC5/USBFS_std.c **** 
1082:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Clear the data toggle */
1083:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].epToggle = 0u;
1084:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Clear toggle bit for already armed packet */
1085:.\Generated_Source\PSoC5/USBFS_std.c ****         CY_SET_REG8(&USBFS_SIE_EP1_CNT0_PTR[ri], 
1086:.\Generated_Source\PSoC5/USBFS_std.c ****                     CY_GET_REG8(&USBFS_SIE_EP1_CNT0_PTR[ri]) & ~USBFS_EPX_CNT_DATA_TOGGLE);
1087:.\Generated_Source\PSoC5/USBFS_std.c ****         /* Return api State as it was defined before */
1088:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_EP[ep].apiEpState &= ~USBFS_NO_EVENT_ALLOWED;
1089:.\Generated_Source\PSoC5/USBFS_std.c **** 
1090:.\Generated_Source\PSoC5/USBFS_std.c ****         if (USBFS_EP[ep].addr & USBFS_DIR_IN)
1091:.\Generated_Source\PSoC5/USBFS_std.c ****         {
1092:.\Generated_Source\PSoC5/USBFS_std.c ****             /* IN Endpoint */
1093:.\Generated_Source\PSoC5/USBFS_std.c ****             if(USBFS_EP[ep].apiEpState == USBFS_IN_BUFFER_EMPTY)
1094:.\Generated_Source\PSoC5/USBFS_std.c ****             {       /* Wait for next packet from application */
1095:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[ri], USBFS_MODE_NAK_IN);
1096:.\Generated_Source\PSoC5/USBFS_std.c ****             }
1097:.\Generated_Source\PSoC5/USBFS_std.c ****             else    /* Continue armed transfer */
1098:.\Generated_Source\PSoC5/USBFS_std.c ****             {
1099:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[ri], USBFS_MODE_ACK_IN);
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 36


1100:.\Generated_Source\PSoC5/USBFS_std.c ****             }
1101:.\Generated_Source\PSoC5/USBFS_std.c ****         }
1102:.\Generated_Source\PSoC5/USBFS_std.c ****         else
1103:.\Generated_Source\PSoC5/USBFS_std.c ****         {
1104:.\Generated_Source\PSoC5/USBFS_std.c ****             /* OUT Endpoint */
1105:.\Generated_Source\PSoC5/USBFS_std.c ****             if(USBFS_EP[ep].apiEpState == USBFS_OUT_BUFFER_FULL)
1106:.\Generated_Source\PSoC5/USBFS_std.c ****             {       /* Allow application to read full buffer */
1107:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[ri], USBFS_MODE_NAK_OUT);
1108:.\Generated_Source\PSoC5/USBFS_std.c ****             }
1109:.\Generated_Source\PSoC5/USBFS_std.c ****             else    /* Mark endpoint as empty, so it will be reloaded */
1110:.\Generated_Source\PSoC5/USBFS_std.c ****             {
1111:.\Generated_Source\PSoC5/USBFS_std.c ****                 CY_SET_REG8(&USBFS_SIE_EP1_CR0_PTR[ri], USBFS_MODE_ACK_OUT);
1112:.\Generated_Source\PSoC5/USBFS_std.c ****             }
1113:.\Generated_Source\PSoC5/USBFS_std.c ****         }
1114:.\Generated_Source\PSoC5/USBFS_std.c ****         requestHandled = USBFS_InitNoDataControlTransfer();
1115:.\Generated_Source\PSoC5/USBFS_std.c ****     }
1116:.\Generated_Source\PSoC5/USBFS_std.c **** 
1117:.\Generated_Source\PSoC5/USBFS_std.c ****     return(requestHandled);
1118:.\Generated_Source\PSoC5/USBFS_std.c **** }
1119:.\Generated_Source\PSoC5/USBFS_std.c **** 
1120:.\Generated_Source\PSoC5/USBFS_std.c **** 
1121:.\Generated_Source\PSoC5/USBFS_std.c **** /*******************************************************************************
1122:.\Generated_Source\PSoC5/USBFS_std.c **** * Function Name: USBFS_ValidateAlternateSetting
1123:.\Generated_Source\PSoC5/USBFS_std.c **** ********************************************************************************
1124:.\Generated_Source\PSoC5/USBFS_std.c **** *
1125:.\Generated_Source\PSoC5/USBFS_std.c **** * Summary:
1126:.\Generated_Source\PSoC5/USBFS_std.c **** *  Validates (and records) a SET INTERFACE request.
1127:.\Generated_Source\PSoC5/USBFS_std.c **** *
1128:.\Generated_Source\PSoC5/USBFS_std.c **** * Parameters:
1129:.\Generated_Source\PSoC5/USBFS_std.c **** *  None.
1130:.\Generated_Source\PSoC5/USBFS_std.c **** *
1131:.\Generated_Source\PSoC5/USBFS_std.c **** * Return:
1132:.\Generated_Source\PSoC5/USBFS_std.c **** *  requestHandled.
1133:.\Generated_Source\PSoC5/USBFS_std.c **** *
1134:.\Generated_Source\PSoC5/USBFS_std.c **** * Reentrant:
1135:.\Generated_Source\PSoC5/USBFS_std.c **** *  No.
1136:.\Generated_Source\PSoC5/USBFS_std.c **** *
1137:.\Generated_Source\PSoC5/USBFS_std.c **** *******************************************************************************/
1138:.\Generated_Source\PSoC5/USBFS_std.c **** uint8 USBFS_ValidateAlternateSetting(void) 
1139:.\Generated_Source\PSoC5/USBFS_std.c **** {
 893              		.loc 1 1139 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 897 0000 10B5     		push	{r4, lr}
 898              	.LCFI5:
 899              		.cfi_def_cfa_offset 8
1140:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 requestHandled = USBFS_TRUE;
1141:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 interfaceNum;
1142:.\Generated_Source\PSoC5/USBFS_std.c ****     T_USBFS_LUT *pTmp;
1143:.\Generated_Source\PSoC5/USBFS_std.c ****     uint8 currentInterfacesNum;
1144:.\Generated_Source\PSoC5/USBFS_std.c **** 
1145:.\Generated_Source\PSoC5/USBFS_std.c ****     interfaceNum = CY_GET_REG8(USBFS_wIndexLo);
 900              		.loc 1 1145 0
 901 0002 0C4B     		ldr	r3, .L82
 902 0004 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 903              		.cfi_offset 14, -4
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 37


 904              		.cfi_offset 4, -8
1146:.\Generated_Source\PSoC5/USBFS_std.c ****     /* Validate interface setting, stall if invalid. */
1147:.\Generated_Source\PSoC5/USBFS_std.c ****     pTmp = USBFS_GetConfigTablePtr(USBFS_configuration - 1u);
 905              		.loc 1 1147 0
 906 0006 0C4B     		ldr	r3, .L82+4
 907 0008 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 908 000a 0138     		subs	r0, r0, #1
 909 000c C0B2     		uxtb	r0, r0
 910 000e FFF7FEFF 		bl	USBFS_GetConfigTablePtr
1148:.\Generated_Source\PSoC5/USBFS_std.c ****     currentInterfacesNum  = ((uint8 *) pTmp->p_list)[USBFS_CONFIG_DESCR_NUM_INTERFACES];
 911              		.loc 1 1148 0
 912 0012 4368     		ldr	r3, [r0, #4]
 913 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 914 0016 A342     		cmp	r3, r4
 915              	.LVL47:
 916 0018 09D9     		bls	.L79
1149:.\Generated_Source\PSoC5/USBFS_std.c **** 
1150:.\Generated_Source\PSoC5/USBFS_std.c ****     if((interfaceNum >= currentInterfacesNum) || (interfaceNum >= USBFS_MAX_INTERFACES_NUMBER))
 917              		.loc 1 1150 0
 918 001a 44B9     		cbnz	r4, .L79
1151:.\Generated_Source\PSoC5/USBFS_std.c ****     {   /* wrong interface number */
1152:.\Generated_Source\PSoC5/USBFS_std.c ****         requestHandled = USBFS_FALSE;
1153:.\Generated_Source\PSoC5/USBFS_std.c ****     }
1154:.\Generated_Source\PSoC5/USBFS_std.c ****     else
1155:.\Generated_Source\PSoC5/USBFS_std.c ****     {
1156:.\Generated_Source\PSoC5/USBFS_std.c ****         /* save current Alt setting to find out the difference in Config() function */
1157:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_interfaceSetting_last[interfaceNum] = USBFS_interfaceSetting[interfaceNum];
 919              		.loc 1 1157 0
 920 001c 074B     		ldr	r3, .L82+8
 921 001e 084A     		ldr	r2, .L82+12
 922 0020 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
1158:.\Generated_Source\PSoC5/USBFS_std.c ****         USBFS_interfaceSetting[interfaceNum] = CY_GET_REG8(USBFS_wValueLo);
 923              		.loc 1 1158 0
 924 0022 0120     		movs	r0, #1
 925              	.LVL48:
 926              		.loc 1 1157 0
 927 0024 1170     		strb	r1, [r2, #0]
 928              		.loc 1 1158 0
 929 0026 074A     		ldr	r2, .L82+16
 930 0028 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 931 002a 1A70     		strb	r2, [r3, #0]
 932 002c 10BD     		pop	{r4, pc}
 933              	.LVL49:
 934              	.L79:
 935 002e 0020     		movs	r0, #0
 936              	.LVL50:
 937              	.LVL51:
1159:.\Generated_Source\PSoC5/USBFS_std.c ****     }
1160:.\Generated_Source\PSoC5/USBFS_std.c **** 
1161:.\Generated_Source\PSoC5/USBFS_std.c ****     return (requestHandled);
1162:.\Generated_Source\PSoC5/USBFS_std.c **** }
 938              		.loc 1 1162 0
 939 0030 10BD     		pop	{r4, pc}
 940              	.L83:
 941 0032 00BF     		.align	2
 942              	.L82:
 943 0034 04600040 		.word	1073766404
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 38


 944 0038 00000000 		.word	USBFS_configuration
 945 003c 00000000 		.word	USBFS_interfaceSetting
 946 0040 00000000 		.word	USBFS_interfaceSetting_last
 947 0044 02600040 		.word	1073766402
 948              		.cfi_endproc
 949              	.LFE12:
 950              		.size	USBFS_ValidateAlternateSetting, .-USBFS_ValidateAlternateSetting
 951              		.section	.text.USBFS_ClearEndpointHalt,"ax",%progbits
 952              		.align	1
 953              		.global	USBFS_ClearEndpointHalt
 954              		.thumb
 955              		.thumb_func
 956              		.type	USBFS_ClearEndpointHalt, %function
 957              	USBFS_ClearEndpointHalt:
 958              	.LFB11:
 959              		.loc 1 1069 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963              		@ link register save eliminated.
 964              		.loc 1 1074 0
 965 0000 194B     		ldr	r3, .L93
 966 0002 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 967 0004 03F07F03 		and	r3, r3, #127
 968              	.LVL52:
 969              		.loc 1 1075 0
 970 0008 5A1E     		subs	r2, r3, #1
 971 000a D2B2     		uxtb	r2, r2
 972              		.loc 1 1077 0
 973 000c 072A     		cmp	r2, #7
 974 000e 01D9     		bls	.L85
 975              		.loc 1 1118 0
 976 0010 0020     		movs	r0, #0
 977 0012 7047     		bx	lr
 978              	.L85:
 979              		.loc 1 1080 0
 980 0014 1548     		ldr	r0, .L93+4
 981 0016 0C21     		movs	r1, #12
 982 0018 01FB0303 		mla	r3, r1, r3, r0
 983              	.LVL53:
 984 001c 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 985              		.loc 1 1085 0
 986 001e 1201     		lsls	r2, r2, #4
 987              		.loc 1 1080 0
 988 0020 00F0FE00 		and	r0, r0, #254
 989 0024 9870     		strb	r0, [r3, #2]
 990              		.loc 1 1083 0
 991 0026 0020     		movs	r0, #0
 992 0028 D870     		strb	r0, [r3, #3]
 993              		.loc 1 1085 0
 994 002a 1148     		ldr	r0, .L93+8
 995 002c D2B2     		uxtb	r2, r2
 996 002e 12F800C0 		ldrb	ip, [r2, r0]	@ zero_extendqisi2
 997 0032 0CF07F0C 		and	ip, ip, #127
 998 0036 02F800C0 		strb	ip, [r2, r0]
 999              		.loc 1 1088 0
 1000 003a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 39


 1001 003c 00F0FD00 		and	r0, r0, #253
 1002 0040 5870     		strb	r0, [r3, #1]
 1003              		.loc 1 1090 0
 1004 0042 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 1005              		.loc 1 1093 0
 1006 0044 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1007              		.loc 1 1090 0
 1008 0046 10F0800F 		tst	r0, #128
 1009 004a 03D0     		beq	.L87
 1010              		.loc 1 1093 0
 1011 004c 012B     		cmp	r3, #1
 1012              		.loc 1 1099 0
 1013 004e 18BF     		it	ne
 1014 0050 0D21     		movne	r1, #13
 1015 0052 04E0     		b	.L92
 1016              	.L87:
 1017              		.loc 1 1105 0
 1018 0054 012B     		cmp	r3, #1
 1019 0056 01D1     		bne	.L90
 1020              		.loc 1 1107 0
 1021 0058 0821     		movs	r1, #8
 1022 005a 00E0     		b	.L92
 1023              	.L90:
 1024              		.loc 1 1111 0
 1025 005c 0921     		movs	r1, #9
 1026              	.L92:
 1027 005e 054B     		ldr	r3, .L93+12
 1028 0060 D154     		strb	r1, [r2, r3]
 1029              		.loc 1 1118 0
 1030              		.loc 1 1114 0
 1031 0062 FFF7FEBF 		b	USBFS_InitNoDataControlTransfer
 1032              	.L94:
 1033 0066 00BF     		.align	2
 1034              	.L93:
 1035 0068 04600040 		.word	1073766404
 1036 006c 00000000 		.word	USBFS_EP
 1037 0070 0C600040 		.word	1073766412
 1038 0074 0E600040 		.word	1073766414
 1039              		.cfi_endproc
 1040              	.LFE11:
 1041              		.size	USBFS_ClearEndpointHalt, .-USBFS_ClearEndpointHalt
 1042              		.section	.text.USBFS_SetEndpointHalt,"ax",%progbits
 1043              		.align	1
 1044              		.global	USBFS_SetEndpointHalt
 1045              		.thumb
 1046              		.thumb_func
 1047              		.type	USBFS_SetEndpointHalt, %function
 1048              	USBFS_SetEndpointHalt:
 1049              	.LFB10:
 1050              		.loc 1 1015 0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 0
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 1054              		@ link register save eliminated.
 1055              		.loc 1 1020 0
 1056 0000 124B     		ldr	r3, .L102
 1057 0002 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 40


 1058 0004 01F07F01 		and	r1, r1, #127
 1059              	.LVL54:
 1060              		.loc 1 1021 0
 1061 0008 4A1E     		subs	r2, r1, #1
 1062 000a D2B2     		uxtb	r2, r2
 1063              		.loc 1 1023 0
 1064 000c 072A     		cmp	r2, #7
 1065 000e 01D9     		bls	.L96
 1066              		.loc 1 1048 0
 1067 0010 0020     		movs	r0, #0
 1068 0012 7047     		bx	lr
 1069              	.L96:
 1070              		.loc 1 1026 0
 1071 0014 0E4B     		ldr	r3, .L102+4
 1072 0016 0C20     		movs	r0, #12
 1073 0018 00FB0133 		mla	r3, r0, r1, r3
 1074 001c 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 1075              	.LVL55:
 1076              		.loc 1 1021 0
 1077 001e 1201     		lsls	r2, r2, #4
 1078              		.loc 1 1026 0
 1079 0020 41F00101 		orr	r1, r1, #1
 1080 0024 9970     		strb	r1, [r3, #2]
 1081              		.loc 1 1029 0
 1082 0026 0021     		movs	r1, #0
 1083 0028 D970     		strb	r1, [r3, #3]
 1084              		.loc 1 1030 0
 1085 002a 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 1086              		.loc 1 1021 0
 1087 002c D2B2     		uxtb	r2, r2
 1088              	.LVL56:
 1089              		.loc 1 1030 0
 1090 002e 41F00201 		orr	r1, r1, #2
 1091 0032 5970     		strb	r1, [r3, #1]
 1092              		.loc 1 1032 0
 1093 0034 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1094 0036 13F0800F 		tst	r3, #128
 1095              		.loc 1 1041 0
 1096 003a 064B     		ldr	r3, .L102+8
 1097              		.loc 1 1035 0
 1098 003c 14BF     		ite	ne
 1099 003e 6FF07201 		mvnne	r1, #114
 1100              		.loc 1 1041 0
 1101 0042 6FF07601 		mvneq	r1, #118
 1102 0046 D154     		strb	r1, [r2, r3]
 1103              		.loc 1 1048 0
 1104              		.loc 1 1044 0
 1105 0048 FFF7FEBF 		b	USBFS_InitNoDataControlTransfer
 1106              	.LVL57:
 1107              	.L103:
 1108              		.align	2
 1109              	.L102:
 1110 004c 04600040 		.word	1073766404
 1111 0050 00000000 		.word	USBFS_EP
 1112 0054 0E600040 		.word	1073766414
 1113              		.cfi_endproc
 1114              	.LFE10:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 41


 1115              		.size	USBFS_SetEndpointHalt, .-USBFS_SetEndpointHalt
 1116              		.section	.text.USBFS_HandleStandardRqst,"ax",%progbits
 1117              		.align	1
 1118              		.global	USBFS_HandleStandardRqst
 1119              		.thumb
 1120              		.thumb_func
 1121              		.type	USBFS_HandleStandardRqst, %function
 1122              	USBFS_HandleStandardRqst:
 1123              	.LFB1:
 1124              		.loc 1 151 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128 0000 10B5     		push	{r4, lr}
 1129              	.LCFI6:
 1130              		.cfi_def_cfa_offset 8
 1131              		.loc 1 162 0
 1132 0002 754B     		ldr	r3, .L143
 1133 0004 4FF00002 		mov	r2, #0	@ movhi
 1134 0008 1A80     		strh	r2, [r3, #0]	@ movhi
 1135              		.loc 1 164 0
 1136 000a 744B     		ldr	r3, .L143+4
 1137 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1138 000e 13F0800F 		tst	r3, #128
 1139              		.loc 1 167 0
 1140 0012 734B     		ldr	r3, .L143+8
 1141 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1142              		.loc 1 164 0
 1143 0016 00F09380 		beq	.L105
 1144              		.cfi_offset 14, -4
 1145              		.cfi_offset 4, -8
 1146              		.loc 1 167 0
 1147 001a 0A2B     		cmp	r3, #10
 1148 001c 00F23081 		bhi	.L106
 1149 0020 DFE813F0 		tbh	[pc, r3, lsl #1]
 1150              	.L111:
 1151 0024 5C00     		.2byte	(.L107-.L111)/2
 1152 0026 2E01     		.2byte	(.L106-.L111)/2
 1153 0028 2E01     		.2byte	(.L106-.L111)/2
 1154 002a 2E01     		.2byte	(.L106-.L111)/2
 1155 002c 2E01     		.2byte	(.L106-.L111)/2
 1156 002e 2E01     		.2byte	(.L106-.L111)/2
 1157 0030 0B00     		.2byte	(.L108-.L111)/2
 1158 0032 2E01     		.2byte	(.L106-.L111)/2
 1159 0034 7E00     		.2byte	(.L109-.L111)/2
 1160 0036 2E01     		.2byte	(.L106-.L111)/2
 1161 0038 8400     		.2byte	(.L110-.L111)/2
 1162              	.L108:
 1163              		.loc 1 170 0
 1164 003a 6A4B     		ldr	r3, .L143+12
 1165 003c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1166 003e 012A     		cmp	r2, #1
 1167 0040 0BD1     		bne	.L112
 1168              	.LBB8:
 1169              	.LBB9:
 1170              		.loc 1 914 0
 1171 0042 694B     		ldr	r3, .L143+16
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 42


 1172 0044 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1173              	.LBE9:
 1174              	.LBE8:
 1175              		.loc 1 173 0
 1176 0046 694B     		ldr	r3, .L143+20
 1177 0048 03EBC203 		add	r3, r3, r2, lsl #3
 1178 004c 5B68     		ldr	r3, [r3, #4]
 1179 004e 5A68     		ldr	r2, [r3, #4]
 1180 0050 614B     		ldr	r3, .L143
 1181 0052 5A60     		str	r2, [r3, #4]
 1182              		.loc 1 174 0
 1183 0054 4FF01202 		mov	r2, #18	@ movhi
 1184 0058 0FE0     		b	.L134
 1185              	.L112:
 1186              		.loc 1 177 0
 1187 005a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1188 005c 022A     		cmp	r2, #2
 1189 005e 11D1     		bne	.L113
 1190              		.loc 1 179 0
 1191 0060 634B     		ldr	r3, .L143+24
 1192 0062 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1193 0064 FFF7FEFF 		bl	USBFS_GetConfigTablePtr
 1194              		.loc 1 180 0
 1195 0068 5B4B     		ldr	r3, .L143
 1196 006a 4268     		ldr	r2, [r0, #4]
 1197 006c 5A60     		str	r2, [r3, #4]
 1198              		.loc 1 181 0
 1199 006e 5A68     		ldr	r2, [r3, #4]
 1200 0070 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 1201              		.loc 1 183 0
 1202 0072 5A68     		ldr	r2, [r3, #4]
 1203 0074 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1204              		.loc 1 181 0
 1205 0076 42EA0122 		orr	r2, r2, r1, lsl #8
 1206              	.LVL58:
 1207              	.L134:
 1208              		.loc 1 184 0
 1209 007a 1A80     		strh	r2, [r3, #0]	@ movhi
 1210              	.LVL59:
 1211              	.L135:
 1212              		.loc 1 371 0
 1213 007c BDE81040 		pop	{r4, lr}
 1214              		.loc 1 185 0
 1215 0080 FFF7FEBF 		b	USBFS_InitControlRead
 1216              	.LVL60:
 1217              	.L113:
 1218              		.loc 1 188 0
 1219 0084 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1220 0086 032B     		cmp	r3, #3
 1221 0088 24D1     		bne	.L114
 1222              		.loc 1 193 0
 1223 008a 5A4B     		ldr	r3, .L143+28
 1224              	.LVL61:
 1225 008c 0022     		movs	r2, #0
 1226              	.LVL62:
 1227              		.loc 1 194 0
 1228 008e 03E0     		b	.L115
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 43


 1229              	.L117:
 1230              		.loc 1 196 0
 1231 0090 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1232              		.loc 1 197 0
 1233 0092 0132     		adds	r2, r2, #1
 1234              	.LVL63:
 1235              		.loc 1 196 0
 1236 0094 5B18     		adds	r3, r3, r1
 1237              		.loc 1 197 0
 1238 0096 D2B2     		uxtb	r2, r2
 1239              	.LVL64:
 1240              	.L115:
 1241              		.loc 1 194 0
 1242 0098 5549     		ldr	r1, .L143+24
 1243 009a 0978     		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 1244 009c 9142     		cmp	r1, r2
 1245 009e 02D9     		bls	.L116
 1246 00a0 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1247 00a2 0029     		cmp	r1, #0
 1248 00a4 F4D1     		bne	.L117
 1249              	.L116:
 1250              		.loc 1 209 0
 1251 00a6 524A     		ldr	r2, .L143+24
 1252              	.LVL65:
 1253 00a8 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 1254 00aa 51B1     		cbz	r1, .L118
 1255              		.loc 1 211 0
 1256 00ac 5249     		ldr	r1, .L143+32
 1257              		.loc 1 210 0
 1258 00ae 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1259              		.loc 1 211 0
 1260 00b0 097C     		ldrb	r1, [r1, #16]	@ zero_extendqisi2
 1261 00b2 9142     		cmp	r1, r2
 1262 00b4 05D1     		bne	.L118
 1263              		.loc 1 214 0
 1264 00b6 514B     		ldr	r3, .L143+36
 1265              	.LVL66:
 1266              		.loc 1 220 0
 1267 00b8 5148     		ldr	r0, .L143+40
 1268              		.loc 1 214 0
 1269 00ba 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1270              		.loc 1 220 0
 1271 00bc FFF7FEFF 		bl	USBFS_ReadDieID
 1272              		.loc 1 221 0
 1273 00c0 4F4B     		ldr	r3, .L143+40
 1274              	.LVL67:
 1275              	.L118:
 1276              		.loc 1 225 0
 1277 00c2 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1278 00c4 002A     		cmp	r2, #0
 1279 00c6 00F0DB80 		beq	.L106
 1280              		.loc 1 227 0
 1281 00ca 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1282 00cc 424A     		ldr	r2, .L143
 1283 00ce 1180     		strh	r1, [r2, #0]	@ movhi
 1284              		.loc 1 228 0
 1285 00d0 5360     		str	r3, [r2, #4]
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 44


 1286 00d2 D3E7     		b	.L135
 1287              	.LVL68:
 1288              	.L114:
 1289              		.loc 1 371 0
 1290 00d4 BDE81040 		pop	{r4, lr}
 1291              		.loc 1 235 0
 1292 00d8 FFF7FEBF 		b	USBFS_DispatchClassRqst
 1293              	.L107:
 1294              		.loc 1 239 0
 1295 00dc 3F4B     		ldr	r3, .L143+4
 1296 00de 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1297 00e0 12F00302 		ands	r2, r2, #3
 1298 00e4 11D0     		beq	.L119
 1299 00e6 022A     		cmp	r2, #2
 1300 00e8 40F0CA80 		bne	.L106
 1301              		.loc 1 242 0
 1302 00ec 3A49     		ldr	r1, .L143
 1303              		.loc 1 244 0
 1304 00ee 0433     		adds	r3, r3, #4
 1305              		.loc 1 242 0
 1306 00f0 0A80     		strh	r2, [r1, #0]	@ movhi
 1307              		.loc 1 244 0
 1308 00f2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1309              		.loc 1 243 0
 1310 00f4 434A     		ldr	r2, .L143+44
 1311              		.loc 1 244 0
 1312 00f6 03F07F03 		and	r3, r3, #127
 1313              		.loc 1 243 0
 1314 00fa 0C20     		movs	r0, #12
 1315 00fc 00FB0323 		mla	r3, r0, r3, r2
 1316 0100 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1317 0102 414B     		ldr	r3, .L143+48
 1318 0104 1A70     		strb	r2, [r3, #0]
 1319              		.loc 1 245 0
 1320 0106 0022     		movs	r2, #0
 1321 0108 07E0     		b	.L137
 1322              	.L119:
 1323              		.loc 1 250 0
 1324 010a 3349     		ldr	r1, .L143
 1325 010c 4FF00203 		mov	r3, #2	@ movhi
 1326 0110 0B80     		strh	r3, [r1, #0]	@ movhi
 1327              		.loc 1 251 0
 1328 0112 3E4B     		ldr	r3, .L143+52
 1329 0114 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 1330 0116 3C4B     		ldr	r3, .L143+48
 1331 0118 1870     		strb	r0, [r3, #0]
 1332              	.L137:
 1333              		.loc 1 252 0
 1334 011a 5A70     		strb	r2, [r3, #1]
 1335              		.loc 1 253 0
 1336 011c 4B60     		str	r3, [r1, #4]
 1337 011e ADE7     		b	.L135
 1338              	.L109:
 1339              		.loc 1 261 0
 1340 0120 2D4B     		ldr	r3, .L143
 1341 0122 4FF00102 		mov	r2, #1	@ movhi
 1342 0126 1A80     		strh	r2, [r3, #0]	@ movhi
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 45


 1343              		.loc 1 262 0
 1344 0128 394A     		ldr	r2, .L143+56
 1345 012a 07E0     		b	.L138
 1346              	.L110:
 1347              		.loc 1 266 0
 1348 012c 2A4B     		ldr	r3, .L143
 1349 012e 4FF00102 		mov	r2, #1	@ movhi
 1350 0132 1A80     		strh	r2, [r3, #0]	@ movhi
 1351              		.loc 1 268 0
 1352 0134 374A     		ldr	r2, .L143+60
 1353              		.loc 1 267 0
 1354 0136 3849     		ldr	r1, .L143+64
 1355              		.loc 1 268 0
 1356 0138 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1357              		.loc 1 267 0
 1358 013a 8A18     		adds	r2, r1, r2
 1359              	.L138:
 1360 013c 5A60     		str	r2, [r3, #4]
 1361 013e 9DE7     		b	.L135
 1362              	.L105:
 1363              		.loc 1 277 0
 1364 0140 013B     		subs	r3, r3, #1
 1365 0142 0A2B     		cmp	r3, #10
 1366 0144 00F29C80 		bhi	.L106
 1367 0148 DFE813F0 		tbh	[pc, r3, lsl #1]
 1368              	.L126:
 1369 014c 2C00     		.2byte	(.L121-.L126)/2
 1370 014e 9A00     		.2byte	(.L106-.L126)/2
 1371 0150 7000     		.2byte	(.L122-.L126)/2
 1372 0152 9A00     		.2byte	(.L106-.L126)/2
 1373 0154 0B00     		.2byte	(.L123-.L126)/2
 1374 0156 9A00     		.2byte	(.L106-.L126)/2
 1375 0158 9A00     		.2byte	(.L106-.L126)/2
 1376 015a 9A00     		.2byte	(.L106-.L126)/2
 1377 015c 0F00     		.2byte	(.L124-.L126)/2
 1378 015e 9A00     		.2byte	(.L106-.L126)/2
 1379 0160 1900     		.2byte	(.L125-.L126)/2
 1380              	.L123:
 1381              		.loc 1 280 0
 1382 0162 234B     		ldr	r3, .L143+24
 1383 0164 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1384 0166 2D4B     		ldr	r3, .L143+68
 1385 0168 79E0     		b	.L140
 1386              	.L124:
 1387              		.loc 1 284 0
 1388 016a 214B     		ldr	r3, .L143+24
 1389              		.loc 1 285 0
 1390 016c 0120     		movs	r0, #1
 1391              		.loc 1 284 0
 1392 016e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1393 0170 274B     		ldr	r3, .L143+56
 1394 0172 1A70     		strb	r2, [r3, #0]
 1395              	.LVL69:
 1396              		.loc 1 285 0
 1397 0174 2A4B     		ldr	r3, .L143+72
 1398 0176 1870     		strb	r0, [r3, #0]
 1399              		.loc 1 286 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 46


 1400 0178 FFF7FEFF 		bl	USBFS_Config
 1401              	.LVL70:
 1402 017c 7CE0     		b	.L136
 1403              	.L125:
 1404              		.loc 1 290 0
 1405 017e FFF7FEFF 		bl	USBFS_ValidateAlternateSetting
 1406 0182 0028     		cmp	r0, #0
 1407 0184 7CD0     		beq	.L106
 1408              		.loc 1 292 0
 1409 0186 234B     		ldr	r3, .L143+60
 1410 0188 264C     		ldr	r4, .L143+76
 1411 018a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1412              		.loc 1 293 0
 1413 018c 0122     		movs	r2, #1
 1414              		.loc 1 292 0
 1415 018e 2370     		strb	r3, [r4, #0]
 1416              	.LVL71:
 1417              		.loc 1 293 0
 1418 0190 234B     		ldr	r3, .L143+72
 1419              	.LVL72:
 1420 0192 1A70     		strb	r2, [r3, #0]
 1421              		.loc 1 298 0
 1422 0194 FFF7FEFF 		bl	USBFS_ConfigAltChanged
 1423              		.loc 1 301 0
 1424 0198 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1425              		.loc 1 302 0
 1426 019a 1F49     		ldr	r1, .L143+64
 1427 019c 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1428 019e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1429              		.loc 1 301 0
 1430 01a0 214A     		ldr	r2, .L143+80
 1431 01a2 68E0     		b	.L141
 1432              	.L121:
 1433              		.loc 1 307 0
 1434 01a4 0D4B     		ldr	r3, .L143+4
 1435 01a6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1436 01a8 03F00303 		and	r3, r3, #3
 1437 01ac 012B     		cmp	r3, #1
 1438 01ae 58D0     		beq	.L131
 1439 01b0 09D3     		bcc	.L127
 1440 01b2 022B     		cmp	r3, #2
 1441 01b4 64D1     		bne	.L106
 1442              		.loc 1 310 0
 1443 01b6 0E4B     		ldr	r3, .L143+24
 1444 01b8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1445 01ba 002B     		cmp	r3, #0
 1446 01bc 60D1     		bne	.L106
 1447              		.loc 1 371 0
 1448 01be BDE81040 		pop	{r4, lr}
 1449              		.loc 1 312 0
 1450 01c2 FFF7FEBF 		b	USBFS_ClearEndpointHalt
 1451              	.L127:
 1452              		.loc 1 317 0
 1453 01c6 0A4B     		ldr	r3, .L143+24
 1454 01c8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1455 01ca 012B     		cmp	r3, #1
 1456 01cc 58D1     		bne	.L106
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 47


 1457              		.loc 1 319 0
 1458 01ce 0F4B     		ldr	r3, .L143+52
 1459 01d0 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1460 01d2 02F0FD02 		and	r2, r2, #253
 1461              	.LVL73:
 1462 01d6 42E0     		b	.L140
 1463              	.L144:
 1464              		.align	2
 1465              	.L143:
 1466 01d8 00000000 		.word	USBFS_currentTD
 1467 01dc 00600040 		.word	1073766400
 1468 01e0 01600040 		.word	1073766401
 1469 01e4 03600040 		.word	1073766403
 1470 01e8 00000000 		.word	USBFS_device
 1471 01ec 00000000 		.word	USBFS_TABLE
 1472 01f0 02600040 		.word	1073766402
 1473 01f4 00000000 		.word	USBFS_STRING_DESCRIPTORS
 1474 01f8 00000000 		.word	USBFS_DEVICE0_DESCR
 1475 01fc 00000000 		.word	.LANCHOR1
 1476 0200 00000000 		.word	.LANCHOR2
 1477 0204 00000000 		.word	USBFS_EP
 1478 0208 00000000 		.word	USBFS_tBuffer
 1479 020c 00000000 		.word	USBFS_deviceStatus
 1480 0210 00000000 		.word	USBFS_configuration
 1481 0214 04600040 		.word	1073766404
 1482 0218 00000000 		.word	USBFS_interfaceSetting
 1483 021c 00000000 		.word	USBFS_deviceAddress
 1484 0220 00000000 		.word	USBFS_configurationChanged
 1485 0224 00000000 		.word	USBFS_interfaceNumber
 1486 0228 00000000 		.word	USBFS_interfaceSetting_last
 1487              	.LVL74:
 1488              	.L122:
 1489              		.loc 1 337 0
 1490 022c 154B     		ldr	r3, .L145
 1491 022e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1492 0230 03F00303 		and	r3, r3, #3
 1493 0234 012B     		cmp	r3, #1
 1494 0236 14D0     		beq	.L131
 1495 0238 09D3     		bcc	.L130
 1496 023a 022B     		cmp	r3, #2
 1497 023c 20D1     		bne	.L106
 1498              		.loc 1 340 0
 1499 023e 124B     		ldr	r3, .L145+4
 1500 0240 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1501 0242 002B     		cmp	r3, #0
 1502 0244 1CD1     		bne	.L106
 1503              		.loc 1 371 0
 1504 0246 BDE81040 		pop	{r4, lr}
 1505              		.loc 1 342 0
 1506 024a FFF7FEBF 		b	USBFS_SetEndpointHalt
 1507              	.L130:
 1508              		.loc 1 347 0
 1509 024e 0E4B     		ldr	r3, .L145+4
 1510 0250 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1511 0252 012B     		cmp	r3, #1
 1512 0254 14D1     		bne	.L106
 1513              		.loc 1 349 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 48


 1514 0256 0D4B     		ldr	r3, .L145+8
 1515 0258 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1516 025a 42F00202 		orr	r2, r2, #2
 1517              	.LVL75:
 1518              	.L140:
 1519 025e 1A70     		strb	r2, [r3, #0]
 1520 0260 0AE0     		b	.L136
 1521              	.LVL76:
 1522              	.L131:
 1523              		.loc 1 355 0
 1524 0262 0B4B     		ldr	r3, .L145+12
 1525 0264 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1526 0266 5AB9     		cbnz	r2, .L106
 1527              		.loc 1 357 0
 1528 0268 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1529 026a 0A4A     		ldr	r2, .L145+16
 1530              		.loc 1 358 0
 1531 026c 0648     		ldr	r0, .L145+4
 1532              		.loc 1 357 0
 1533 026e D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1534              		.loc 1 358 0
 1535 0270 0078     		ldrb	r0, [r0, #0]	@ zero_extendqisi2
 1536              		.loc 1 357 0
 1537 0272 21EA0001 		bic	r1, r1, r0
 1538              	.L141:
 1539 0276 D154     		strb	r1, [r2, r3]
 1540              	.LVL77:
 1541              	.L136:
 1542              		.loc 1 371 0
 1543 0278 BDE81040 		pop	{r4, lr}
 1544              		.loc 1 359 0
 1545 027c FFF7FEBF 		b	USBFS_InitNoDataControlTransfer
 1546              	.LVL78:
 1547              	.L106:
 1548              		.loc 1 371 0
 1549 0280 0020     		movs	r0, #0
 1550 0282 10BD     		pop	{r4, pc}
 1551              	.L146:
 1552              		.align	2
 1553              	.L145:
 1554 0284 00600040 		.word	1073766400
 1555 0288 02600040 		.word	1073766402
 1556 028c 00000000 		.word	USBFS_deviceStatus
 1557 0290 04600040 		.word	1073766404
 1558 0294 00000000 		.word	USBFS_interfaceStatus
 1559              		.cfi_endproc
 1560              	.LFE1:
 1561              		.size	USBFS_HandleStandardRqst, .-USBFS_HandleStandardRqst
 1562              		.global	USBFS_idSerialNumberStringDescriptor
 1563              		.global	USBFS_snStringConfirm
 1564              		.comm	USBFS_tBuffer,2,4
 1565              		.comm	USBFS_fwSerialNumberStringDescriptor,4,4
 1566              		.section	.rodata
 1567              		.align	2
 1568              		.set	.LANCHOR0,. + 0
 1569              		.type	hex.2290, %object
 1570              		.size	hex.2290, 16
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 49


 1571              	hex.2290:
 1572 0000 30313233 		.ascii	"0123456789ABCDEF"
 1572      34353637 
 1572      38394142 
 1572      43444546 
 1573              		.data
 1574              		.align	2
 1575              		.set	.LANCHOR2,. + 0
 1576              		.type	USBFS_idSerialNumberStringDescriptor, %object
 1577              		.size	USBFS_idSerialNumberStringDescriptor, 34
 1578              	USBFS_idSerialNumberStringDescriptor:
 1579 0000 22       		.byte	34
 1580 0001 03       		.byte	3
 1581 0002 00000000 		.space	32
 1581      00000000 
 1581      00000000 
 1581      00000000 
 1581      00000000 
 1582 0022 0000     		.bss
 1583              		.set	.LANCHOR1,. + 0
 1584              		.type	USBFS_snStringConfirm, %object
 1585              		.size	USBFS_snStringConfirm, 1
 1586              	USBFS_snStringConfirm:
 1587 0000 00       		.space	1
 1588              		.text
 1589              	.Letext0:
 1590              		.section	.debug_loc,"",%progbits
 1591              	.Ldebug_loc0:
 1592              	.LLST1:
 1593 0000 00000000 		.4byte	.LFB2
 1594 0004 04000000 		.4byte	.LCFI0
 1595 0008 0100     		.2byte	0x1
 1596 000a 5D       		.byte	0x5d
 1597 000b 04000000 		.4byte	.LCFI0
 1598 000f 4C000000 		.4byte	.LFE2
 1599 0013 0200     		.2byte	0x2
 1600 0015 7D       		.byte	0x7d
 1601 0016 08       		.sleb128 8
 1602 0017 00000000 		.4byte	0x0
 1603 001b 00000000 		.4byte	0x0
 1604              	.LLST2:
 1605 001f 12000000 		.4byte	.LVL3
 1606 0023 3A000000 		.4byte	.LVL7
 1607 0027 0100     		.2byte	0x1
 1608 0029 53       		.byte	0x53
 1609 002a 40000000 		.4byte	.LVL9
 1610 002e 4C000000 		.4byte	.LFE2
 1611 0032 0100     		.2byte	0x1
 1612 0034 53       		.byte	0x53
 1613 0035 00000000 		.4byte	0x0
 1614 0039 00000000 		.4byte	0x0
 1615              	.LLST3:
 1616 003d 10000000 		.4byte	.LVL2
 1617 0041 36000000 		.4byte	.LVL6
 1618 0045 0100     		.2byte	0x1
 1619 0047 52       		.byte	0x52
 1620 0048 3C000000 		.4byte	.LVL8
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 50


 1621 004c 4C000000 		.4byte	.LFE2
 1622 0050 0100     		.2byte	0x1
 1623 0052 52       		.byte	0x52
 1624 0053 00000000 		.4byte	0x0
 1625 0057 00000000 		.4byte	0x0
 1626              	.LLST4:
 1627 005b 26000000 		.4byte	.LVL4
 1628 005f 2C000000 		.4byte	.LVL5
 1629 0063 0100     		.2byte	0x1
 1630 0065 5C       		.byte	0x5c
 1631 0066 00000000 		.4byte	0x0
 1632 006a 00000000 		.4byte	0x0
 1633              	.LLST5:
 1634 006e 00000000 		.4byte	.LFB3
 1635 0072 02000000 		.4byte	.LCFI1
 1636 0076 0100     		.2byte	0x1
 1637 0078 5D       		.byte	0x5d
 1638 0079 02000000 		.4byte	.LCFI1
 1639 007d E0000000 		.4byte	.LFE3
 1640 0081 0200     		.2byte	0x2
 1641 0083 7D       		.byte	0x7d
 1642 0084 08       		.sleb128 8
 1643 0085 00000000 		.4byte	0x0
 1644 0089 00000000 		.4byte	0x0
 1645              	.LLST6:
 1646 008d 06000000 		.4byte	.LVL11
 1647 0091 98000000 		.4byte	.LVL12
 1648 0095 0100     		.2byte	0x1
 1649 0097 51       		.byte	0x51
 1650 0098 9E000000 		.4byte	.LVL13
 1651 009c E0000000 		.4byte	.LFE3
 1652 00a0 0100     		.2byte	0x1
 1653 00a2 51       		.byte	0x51
 1654 00a3 00000000 		.4byte	0x0
 1655 00a7 00000000 		.4byte	0x0
 1656              	.LLST7:
 1657 00ab 04000000 		.4byte	.LVL10
 1658 00af A4000000 		.4byte	.LVL14
 1659 00b3 0100     		.2byte	0x1
 1660 00b5 53       		.byte	0x53
 1661 00b6 AA000000 		.4byte	.LVL15
 1662 00ba AE000000 		.4byte	.LVL16
 1663 00be 0100     		.2byte	0x1
 1664 00c0 53       		.byte	0x53
 1665 00c1 00000000 		.4byte	0x0
 1666 00c5 00000000 		.4byte	0x0
 1667              	.LLST9:
 1668 00c9 00000000 		.4byte	.LVL17
 1669 00cd 12000000 		.4byte	.LVL18
 1670 00d1 0100     		.2byte	0x1
 1671 00d3 50       		.byte	0x50
 1672 00d4 00000000 		.4byte	0x0
 1673 00d8 00000000 		.4byte	0x0
 1674              	.LLST10:
 1675 00dc 00000000 		.4byte	.LFB5
 1676 00e0 02000000 		.4byte	.LCFI2
 1677 00e4 0100     		.2byte	0x1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 51


 1678 00e6 5D       		.byte	0x5d
 1679 00e7 02000000 		.4byte	.LCFI2
 1680 00eb 28010000 		.4byte	.LFE5
 1681 00ef 0200     		.2byte	0x2
 1682 00f1 7D       		.byte	0x7d
 1683 00f2 18       		.sleb128 24
 1684 00f3 00000000 		.4byte	0x0
 1685 00f7 00000000 		.4byte	0x0
 1686              	.LLST11:
 1687 00fb 5A000000 		.4byte	.LVL21
 1688 00ff 9E000000 		.4byte	.LVL22
 1689 0103 0100     		.2byte	0x1
 1690 0105 53       		.byte	0x53
 1691 0106 00000000 		.4byte	0x0
 1692 010a 00000000 		.4byte	0x0
 1693              	.LLST12:
 1694 010e 18000000 		.4byte	.LVL19
 1695 0112 20000000 		.4byte	.LVL20
 1696 0116 0100     		.2byte	0x1
 1697 0118 50       		.byte	0x50
 1698 0119 00000000 		.4byte	0x0
 1699 011d 00000000 		.4byte	0x0
 1700              	.LLST14:
 1701 0121 00000000 		.4byte	.LFB8
 1702 0125 02000000 		.4byte	.LCFI3
 1703 0129 0100     		.2byte	0x1
 1704 012b 5D       		.byte	0x5d
 1705 012c 02000000 		.4byte	.LCFI3
 1706 0130 20000000 		.4byte	.LFE8
 1707 0134 0200     		.2byte	0x2
 1708 0136 7D       		.byte	0x7d
 1709 0137 08       		.sleb128 8
 1710 0138 00000000 		.4byte	0x0
 1711 013c 00000000 		.4byte	0x0
 1712              	.LLST15:
 1713 0140 10000000 		.4byte	.LVL23
 1714 0144 16000000 		.4byte	.LVL24
 1715 0148 0100     		.2byte	0x1
 1716 014a 50       		.byte	0x50
 1717 014b 00000000 		.4byte	0x0
 1718 014f 00000000 		.4byte	0x0
 1719              	.LLST16:
 1720 0153 00000000 		.4byte	.LFB4
 1721 0157 04000000 		.4byte	.LCFI4
 1722 015b 0100     		.2byte	0x1
 1723 015d 5D       		.byte	0x5d
 1724 015e 04000000 		.4byte	.LCFI4
 1725 0162 70010000 		.4byte	.LFE4
 1726 0166 0200     		.2byte	0x2
 1727 0168 7D       		.byte	0x7d
 1728 0169 18       		.sleb128 24
 1729 016a 00000000 		.4byte	0x0
 1730 016e 00000000 		.4byte	0x0
 1731              	.LLST17:
 1732 0172 00000000 		.4byte	.LVL25
 1733 0176 46000000 		.4byte	.LVL26
 1734 017a 0100     		.2byte	0x1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 52


 1735 017c 50       		.byte	0x50
 1736 017d 54010000 		.4byte	.LVL41
 1737 0181 70010000 		.4byte	.LFE4
 1738 0185 0100     		.2byte	0x1
 1739 0187 50       		.byte	0x50
 1740 0188 00000000 		.4byte	0x0
 1741 018c 00000000 		.4byte	0x0
 1742              	.LLST18:
 1743 0190 6C000000 		.4byte	.LVL30
 1744 0194 08010000 		.4byte	.LVL34
 1745 0198 0100     		.2byte	0x1
 1746 019a 54       		.byte	0x54
 1747 019b 00000000 		.4byte	0x0
 1748 019f 00000000 		.4byte	0x0
 1749              	.LLST19:
 1750 01a3 36010000 		.4byte	.LVL38
 1751 01a7 46010000 		.4byte	.LVL39
 1752 01ab 0100     		.2byte	0x1
 1753 01ad 52       		.byte	0x52
 1754 01ae 4A010000 		.4byte	.LVL40
 1755 01b2 54010000 		.4byte	.LVL41
 1756 01b6 0100     		.2byte	0x1
 1757 01b8 52       		.byte	0x52
 1758 01b9 00000000 		.4byte	0x0
 1759 01bd 00000000 		.4byte	0x0
 1760              	.LLST20:
 1761 01c1 50000000 		.4byte	.LVL27
 1762 01c5 76000000 		.4byte	.LVL32
 1763 01c9 0100     		.2byte	0x1
 1764 01cb 50       		.byte	0x50
 1765 01cc F8000000 		.4byte	.LVL33
 1766 01d0 20010000 		.4byte	.LVL35
 1767 01d4 0100     		.2byte	0x1
 1768 01d6 50       		.byte	0x50
 1769 01d7 26010000 		.4byte	.LVL36
 1770 01db 2E010000 		.4byte	.LVL37
 1771 01df 0100     		.2byte	0x1
 1772 01e1 50       		.byte	0x50
 1773 01e2 00000000 		.4byte	0x0
 1774 01e6 00000000 		.4byte	0x0
 1775              	.LLST22:
 1776 01ea 00000000 		.4byte	.LVL42
 1777 01ee 14000000 		.4byte	.LVL44
 1778 01f2 0100     		.2byte	0x1
 1779 01f4 50       		.byte	0x50
 1780 01f5 3C000000 		.4byte	.LVL46
 1781 01f9 48000000 		.4byte	.LFE9
 1782 01fd 0100     		.2byte	0x1
 1783 01ff 50       		.byte	0x50
 1784 0200 00000000 		.4byte	0x0
 1785 0204 00000000 		.4byte	0x0
 1786              	.LLST23:
 1787 0208 00000000 		.4byte	.LFB12
 1788 020c 02000000 		.4byte	.LCFI5
 1789 0210 0100     		.2byte	0x1
 1790 0212 5D       		.byte	0x5d
 1791 0213 02000000 		.4byte	.LCFI5
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 53


 1792 0217 48000000 		.4byte	.LFE12
 1793 021b 0200     		.2byte	0x2
 1794 021d 7D       		.byte	0x7d
 1795 021e 08       		.sleb128 8
 1796 021f 00000000 		.4byte	0x0
 1797 0223 00000000 		.4byte	0x0
 1798              	.LLST24:
 1799 0227 24000000 		.4byte	.LVL48
 1800 022b 2E000000 		.4byte	.LVL49
 1801 022f 0100     		.2byte	0x1
 1802 0231 50       		.byte	0x50
 1803 0232 30000000 		.4byte	.LVL50
 1804 0236 30000000 		.4byte	.LVL51
 1805 023a 0100     		.2byte	0x1
 1806 023c 50       		.byte	0x50
 1807 023d 00000000 		.4byte	0x0
 1808 0241 00000000 		.4byte	0x0
 1809              	.LLST26:
 1810 0245 08000000 		.4byte	.LVL52
 1811 0249 1C000000 		.4byte	.LVL53
 1812 024d 0100     		.2byte	0x1
 1813 024f 53       		.byte	0x53
 1814 0250 00000000 		.4byte	0x0
 1815 0254 00000000 		.4byte	0x0
 1816              	.LLST28:
 1817 0258 08000000 		.4byte	.LVL54
 1818 025c 1E000000 		.4byte	.LVL55
 1819 0260 0100     		.2byte	0x1
 1820 0262 51       		.byte	0x51
 1821 0263 00000000 		.4byte	0x0
 1822 0267 00000000 		.4byte	0x0
 1823              	.LLST29:
 1824 026b 2E000000 		.4byte	.LVL56
 1825 026f 4C000000 		.4byte	.LVL57
 1826 0273 0100     		.2byte	0x1
 1827 0275 52       		.byte	0x52
 1828 0276 00000000 		.4byte	0x0
 1829 027a 00000000 		.4byte	0x0
 1830              	.LLST30:
 1831 027e 00000000 		.4byte	.LFB1
 1832 0282 02000000 		.4byte	.LCFI6
 1833 0286 0100     		.2byte	0x1
 1834 0288 5D       		.byte	0x5d
 1835 0289 02000000 		.4byte	.LCFI6
 1836 028d 98020000 		.4byte	.LFE1
 1837 0291 0200     		.2byte	0x2
 1838 0293 7D       		.byte	0x7d
 1839 0294 08       		.sleb128 8
 1840 0295 00000000 		.4byte	0x0
 1841 0299 00000000 		.4byte	0x0
 1842              	.LLST31:
 1843 029d 7C000000 		.4byte	.LVL59
 1844 02a1 84000000 		.4byte	.LVL60
 1845 02a5 0100     		.2byte	0x1
 1846 02a7 53       		.byte	0x53
 1847 02a8 8C000000 		.4byte	.LVL61
 1848 02ac B8000000 		.4byte	.LVL66
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 54


 1849 02b0 0100     		.2byte	0x1
 1850 02b2 53       		.byte	0x53
 1851 02b3 C2000000 		.4byte	.LVL67
 1852 02b7 D4000000 		.4byte	.LVL68
 1853 02bb 0100     		.2byte	0x1
 1854 02bd 53       		.byte	0x53
 1855 02be 80020000 		.4byte	.LVL78
 1856 02c2 98020000 		.4byte	.LFE1
 1857 02c6 0100     		.2byte	0x1
 1858 02c8 53       		.byte	0x53
 1859 02c9 00000000 		.4byte	0x0
 1860 02cd 00000000 		.4byte	0x0
 1861              	.LLST32:
 1862 02d1 8E000000 		.4byte	.LVL62
 1863 02d5 94000000 		.4byte	.LVL63
 1864 02d9 0100     		.2byte	0x1
 1865 02db 52       		.byte	0x52
 1866 02dc 98000000 		.4byte	.LVL64
 1867 02e0 A8000000 		.4byte	.LVL65
 1868 02e4 0100     		.2byte	0x1
 1869 02e6 52       		.byte	0x52
 1870 02e7 00000000 		.4byte	0x0
 1871 02eb 00000000 		.4byte	0x0
 1872              	.LLST33:
 1873 02ef 7A000000 		.4byte	.LVL58
 1874 02f3 84000000 		.4byte	.LVL60
 1875 02f7 0100     		.2byte	0x1
 1876 02f9 52       		.byte	0x52
 1877 02fa 00000000 		.4byte	0x0
 1878 02fe 00000000 		.4byte	0x0
 1879              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 1880              		.file 3 ".\\Generated_Source\\PSoC5\\/USBFS.h"
 1881              		.section	.debug_info
 1882 0000 03080000 		.4byte	0x803
 1883 0004 0200     		.2byte	0x2
 1884 0006 00000000 		.4byte	.Ldebug_abbrev0
 1885 000a 04       		.byte	0x4
 1886 000b 01       		.uleb128 0x1
 1887 000c 58000000 		.4byte	.LASF87
 1888 0010 01       		.byte	0x1
 1889 0011 F2030000 		.4byte	.LASF88
 1890 0015 1D020000 		.4byte	.LASF89
 1891 0019 00000000 		.4byte	0x0
 1892 001d 00000000 		.4byte	0x0
 1893 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 1894 0025 00000000 		.4byte	.Ldebug_line0
 1895 0029 02       		.uleb128 0x2
 1896 002a 01       		.byte	0x1
 1897 002b 06       		.byte	0x6
 1898 002c 96000000 		.4byte	.LASF0
 1899 0030 02       		.uleb128 0x2
 1900 0031 01       		.byte	0x1
 1901 0032 08       		.byte	0x8
 1902 0033 A1030000 		.4byte	.LASF1
 1903 0037 02       		.uleb128 0x2
 1904 0038 02       		.byte	0x2
 1905 0039 05       		.byte	0x5
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 55


 1906 003a C6030000 		.4byte	.LASF2
 1907 003e 02       		.uleb128 0x2
 1908 003f 02       		.byte	0x2
 1909 0040 07       		.byte	0x7
 1910 0041 C6010000 		.4byte	.LASF3
 1911 0045 02       		.uleb128 0x2
 1912 0046 04       		.byte	0x4
 1913 0047 05       		.byte	0x5
 1914 0048 11010000 		.4byte	.LASF4
 1915 004c 02       		.uleb128 0x2
 1916 004d 04       		.byte	0x4
 1917 004e 07       		.byte	0x7
 1918 004f 94010000 		.4byte	.LASF5
 1919 0053 02       		.uleb128 0x2
 1920 0054 08       		.byte	0x8
 1921 0055 05       		.byte	0x5
 1922 0056 88000000 		.4byte	.LASF6
 1923 005a 02       		.uleb128 0x2
 1924 005b 08       		.byte	0x8
 1925 005c 07       		.byte	0x7
 1926 005d 3C000000 		.4byte	.LASF7
 1927 0061 03       		.uleb128 0x3
 1928 0062 04       		.byte	0x4
 1929 0063 05       		.byte	0x5
 1930 0064 696E7400 		.ascii	"int\000"
 1931 0068 02       		.uleb128 0x2
 1932 0069 04       		.byte	0x4
 1933 006a 07       		.byte	0x7
 1934 006b 87010000 		.4byte	.LASF8
 1935 006f 04       		.uleb128 0x4
 1936 0070 1A010000 		.4byte	.LASF9
 1937 0074 02       		.byte	0x2
 1938 0075 4C       		.byte	0x4c
 1939 0076 30000000 		.4byte	0x30
 1940 007a 04       		.uleb128 0x4
 1941 007b 13000000 		.4byte	.LASF10
 1942 007f 02       		.byte	0x2
 1943 0080 4D       		.byte	0x4d
 1944 0081 3E000000 		.4byte	0x3e
 1945 0085 02       		.uleb128 0x2
 1946 0086 04       		.byte	0x4
 1947 0087 04       		.byte	0x4
 1948 0088 64030000 		.4byte	.LASF11
 1949 008c 02       		.uleb128 0x2
 1950 008d 08       		.byte	0x8
 1951 008e 04       		.byte	0x4
 1952 008f 29010000 		.4byte	.LASF12
 1953 0093 04       		.uleb128 0x4
 1954 0094 A8040000 		.4byte	.LASF13
 1955 0098 02       		.byte	0x2
 1956 0099 5D       		.byte	0x5d
 1957 009a 9E000000 		.4byte	0x9e
 1958 009e 02       		.uleb128 0x2
 1959 009f 01       		.byte	0x1
 1960 00a0 08       		.byte	0x8
 1961 00a1 7E040000 		.4byte	.LASF14
 1962 00a5 05       		.uleb128 0x5
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 56


 1963 00a6 6F000000 		.4byte	0x6f
 1964 00aa 06       		.uleb128 0x6
 1965 00ab 04       		.byte	0x4
 1966 00ac 07       		.byte	0x7
 1967 00ad 07       		.uleb128 0x7
 1968 00ae 04       		.byte	0x4
 1969 00af 08       		.uleb128 0x8
 1970 00b0 B5040000 		.4byte	.LASF25
 1971 00b4 0C       		.byte	0xc
 1972 00b5 03       		.byte	0x3
 1973 00b6 7A       		.byte	0x7a
 1974 00b7 3A010000 		.4byte	0x13a
 1975 00bb 09       		.uleb128 0x9
 1976 00bc CF020000 		.4byte	.LASF15
 1977 00c0 03       		.byte	0x3
 1978 00c1 7B       		.byte	0x7b
 1979 00c2 6F000000 		.4byte	0x6f
 1980 00c6 02       		.byte	0x2
 1981 00c7 23       		.byte	0x23
 1982 00c8 00       		.uleb128 0x0
 1983 00c9 09       		.uleb128 0x9
 1984 00ca 82030000 		.4byte	.LASF16
 1985 00ce 03       		.byte	0x3
 1986 00cf 7C       		.byte	0x7c
 1987 00d0 6F000000 		.4byte	0x6f
 1988 00d4 02       		.byte	0x2
 1989 00d5 23       		.byte	0x23
 1990 00d6 01       		.uleb128 0x1
 1991 00d7 09       		.uleb128 0x9
 1992 00d8 B9020000 		.4byte	.LASF17
 1993 00dc 03       		.byte	0x3
 1994 00dd 7D       		.byte	0x7d
 1995 00de 6F000000 		.4byte	0x6f
 1996 00e2 02       		.byte	0x2
 1997 00e3 23       		.byte	0x23
 1998 00e4 02       		.uleb128 0x2
 1999 00e5 09       		.uleb128 0x9
 2000 00e6 20010000 		.4byte	.LASF18
 2001 00ea 03       		.byte	0x3
 2002 00eb 7E       		.byte	0x7e
 2003 00ec 6F000000 		.4byte	0x6f
 2004 00f0 02       		.byte	0x2
 2005 00f1 23       		.byte	0x23
 2006 00f2 03       		.uleb128 0x3
 2007 00f3 09       		.uleb128 0x9
 2008 00f4 53000000 		.4byte	.LASF19
 2009 00f8 03       		.byte	0x3
 2010 00f9 7F       		.byte	0x7f
 2011 00fa 6F000000 		.4byte	0x6f
 2012 00fe 02       		.byte	0x2
 2013 00ff 23       		.byte	0x23
 2014 0100 04       		.uleb128 0x4
 2015 0101 09       		.uleb128 0x9
 2016 0102 7A010000 		.4byte	.LASF20
 2017 0106 03       		.byte	0x3
 2018 0107 80       		.byte	0x80
 2019 0108 6F000000 		.4byte	0x6f
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 57


 2020 010c 02       		.byte	0x2
 2021 010d 23       		.byte	0x23
 2022 010e 05       		.uleb128 0x5
 2023 010f 09       		.uleb128 0x9
 2024 0110 9D040000 		.4byte	.LASF21
 2025 0114 03       		.byte	0x3
 2026 0115 81       		.byte	0x81
 2027 0116 7A000000 		.4byte	0x7a
 2028 011a 02       		.byte	0x2
 2029 011b 23       		.byte	0x23
 2030 011c 06       		.uleb128 0x6
 2031 011d 09       		.uleb128 0x9
 2032 011e 83040000 		.4byte	.LASF22
 2033 0122 03       		.byte	0x3
 2034 0123 82       		.byte	0x82
 2035 0124 7A000000 		.4byte	0x7a
 2036 0128 02       		.byte	0x2
 2037 0129 23       		.byte	0x23
 2038 012a 08       		.uleb128 0x8
 2039 012b 09       		.uleb128 0x9
 2040 012c D9010000 		.4byte	.LASF23
 2041 0130 03       		.byte	0x3
 2042 0131 83       		.byte	0x83
 2043 0132 6F000000 		.4byte	0x6f
 2044 0136 02       		.byte	0x2
 2045 0137 23       		.byte	0x23
 2046 0138 0A       		.uleb128 0xa
 2047 0139 00       		.byte	0x0
 2048 013a 04       		.uleb128 0x4
 2049 013b 2E040000 		.4byte	.LASF24
 2050 013f 03       		.byte	0x3
 2051 0140 84       		.byte	0x84
 2052 0141 AF000000 		.4byte	0xaf
 2053 0145 08       		.uleb128 0x8
 2054 0146 AF030000 		.4byte	.LASF26
 2055 014a 08       		.byte	0x8
 2056 014b 03       		.byte	0x3
 2057 014c 87       		.byte	0x87
 2058 014d A6010000 		.4byte	0x1a6
 2059 0151 09       		.uleb128 0x9
 2060 0152 D9010000 		.4byte	.LASF23
 2061 0156 03       		.byte	0x3
 2062 0157 88       		.byte	0x88
 2063 0158 6F000000 		.4byte	0x6f
 2064 015c 02       		.byte	0x2
 2065 015d 23       		.byte	0x23
 2066 015e 00       		.uleb128 0x0
 2067 015f 09       		.uleb128 0x9
 2068 0160 73040000 		.4byte	.LASF27
 2069 0164 03       		.byte	0x3
 2070 0165 89       		.byte	0x89
 2071 0166 6F000000 		.4byte	0x6f
 2072 016a 02       		.byte	0x2
 2073 016b 23       		.byte	0x23
 2074 016c 01       		.uleb128 0x1
 2075 016d 09       		.uleb128 0x9
 2076 016e 53000000 		.4byte	.LASF19
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 58


 2077 0172 03       		.byte	0x3
 2078 0173 8A       		.byte	0x8a
 2079 0174 6F000000 		.4byte	0x6f
 2080 0178 02       		.byte	0x2
 2081 0179 23       		.byte	0x23
 2082 017a 02       		.uleb128 0x2
 2083 017b 09       		.uleb128 0x9
 2084 017c 50040000 		.4byte	.LASF28
 2085 0180 03       		.byte	0x3
 2086 0181 8B       		.byte	0x8b
 2087 0182 6F000000 		.4byte	0x6f
 2088 0186 02       		.byte	0x2
 2089 0187 23       		.byte	0x23
 2090 0188 03       		.uleb128 0x3
 2091 0189 09       		.uleb128 0x9
 2092 018a 83040000 		.4byte	.LASF22
 2093 018e 03       		.byte	0x3
 2094 018f 8C       		.byte	0x8c
 2095 0190 7A000000 		.4byte	0x7a
 2096 0194 02       		.byte	0x2
 2097 0195 23       		.byte	0x23
 2098 0196 04       		.uleb128 0x4
 2099 0197 09       		.uleb128 0x9
 2100 0198 35050000 		.4byte	.LASF29
 2101 019c 03       		.byte	0x3
 2102 019d 8D       		.byte	0x8d
 2103 019e 6F000000 		.4byte	0x6f
 2104 01a2 02       		.byte	0x2
 2105 01a3 23       		.byte	0x23
 2106 01a4 06       		.uleb128 0x6
 2107 01a5 00       		.byte	0x0
 2108 01a6 04       		.uleb128 0x4
 2109 01a7 30010000 		.4byte	.LASF30
 2110 01ab 03       		.byte	0x3
 2111 01ac 8E       		.byte	0x8e
 2112 01ad 45010000 		.4byte	0x145
 2113 01b1 08       		.uleb128 0x8
 2114 01b2 DB030000 		.4byte	.LASF31
 2115 01b6 04       		.byte	0x4
 2116 01b7 03       		.byte	0x3
 2117 01b8 91       		.byte	0x91
 2118 01b9 DA010000 		.4byte	0x1da
 2119 01bd 09       		.uleb128 0x9
 2120 01be 2E050000 		.4byte	.LASF32
 2121 01c2 03       		.byte	0x3
 2122 01c3 92       		.byte	0x92
 2123 01c4 6F000000 		.4byte	0x6f
 2124 01c8 02       		.byte	0x2
 2125 01c9 23       		.byte	0x23
 2126 01ca 00       		.uleb128 0x0
 2127 01cb 09       		.uleb128 0x9
 2128 01cc F6040000 		.4byte	.LASF33
 2129 01d0 03       		.byte	0x3
 2130 01d1 93       		.byte	0x93
 2131 01d2 7A000000 		.4byte	0x7a
 2132 01d6 02       		.byte	0x2
 2133 01d7 23       		.byte	0x23
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 59


 2134 01d8 02       		.uleb128 0x2
 2135 01d9 00       		.byte	0x0
 2136 01da 04       		.uleb128 0x4
 2137 01db 29030000 		.4byte	.LASF34
 2138 01df 03       		.byte	0x3
 2139 01e0 94       		.byte	0x94
 2140 01e1 B1010000 		.4byte	0x1b1
 2141 01e5 08       		.uleb128 0x8
 2142 01e6 77050000 		.4byte	.LASF35
 2143 01ea 0C       		.byte	0xc
 2144 01eb 03       		.byte	0x3
 2145 01ec 97       		.byte	0x97
 2146 01ed 1C020000 		.4byte	0x21c
 2147 01f1 09       		.uleb128 0x9
 2148 01f2 0D000000 		.4byte	.LASF36
 2149 01f6 03       		.byte	0x3
 2150 01f7 98       		.byte	0x98
 2151 01f8 7A000000 		.4byte	0x7a
 2152 01fc 02       		.byte	0x2
 2153 01fd 23       		.byte	0x23
 2154 01fe 00       		.uleb128 0x0
 2155 01ff 09       		.uleb128 0x9
 2156 0200 60010000 		.4byte	.LASF37
 2157 0204 03       		.byte	0x3
 2158 0205 99       		.byte	0x99
 2159 0206 1C020000 		.4byte	0x21c
 2160 020a 02       		.byte	0x2
 2161 020b 23       		.byte	0x23
 2162 020c 04       		.uleb128 0x4
 2163 020d 09       		.uleb128 0x9
 2164 020e 00000000 		.4byte	.LASF38
 2165 0212 03       		.byte	0x3
 2166 0213 9A       		.byte	0x9a
 2167 0214 22020000 		.4byte	0x222
 2168 0218 02       		.byte	0x2
 2169 0219 23       		.byte	0x23
 2170 021a 08       		.uleb128 0x8
 2171 021b 00       		.byte	0x0
 2172 021c 0A       		.uleb128 0xa
 2173 021d 04       		.byte	0x4
 2174 021e A5000000 		.4byte	0xa5
 2175 0222 0A       		.uleb128 0xa
 2176 0223 04       		.byte	0x4
 2177 0224 DA010000 		.4byte	0x1da
 2178 0228 04       		.uleb128 0x4
 2179 0229 D0030000 		.4byte	.LASF39
 2180 022d 03       		.byte	0x3
 2181 022e 9B       		.byte	0x9b
 2182 022f E5010000 		.4byte	0x1e5
 2183 0233 08       		.uleb128 0x8
 2184 0234 A3050000 		.4byte	.LASF40
 2185 0238 08       		.byte	0x8
 2186 0239 03       		.byte	0x3
 2187 023a 9E       		.byte	0x9e
 2188 023b 5A020000 		.4byte	0x25a
 2189 023f 0B       		.uleb128 0xb
 2190 0240 6300     		.ascii	"c\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 60


 2191 0242 03       		.byte	0x3
 2192 0243 9F       		.byte	0x9f
 2193 0244 6F000000 		.4byte	0x6f
 2194 0248 02       		.byte	0x2
 2195 0249 23       		.byte	0x23
 2196 024a 00       		.uleb128 0x0
 2197 024b 09       		.uleb128 0x9
 2198 024c C8020000 		.4byte	.LASF41
 2199 0250 03       		.byte	0x3
 2200 0251 A0       		.byte	0xa0
 2201 0252 AD000000 		.4byte	0xad
 2202 0256 02       		.byte	0x2
 2203 0257 23       		.byte	0x23
 2204 0258 04       		.uleb128 0x4
 2205 0259 00       		.byte	0x0
 2206 025a 04       		.uleb128 0x4
 2207 025b AE050000 		.4byte	.LASF42
 2208 025f 03       		.byte	0x3
 2209 0260 A1       		.byte	0xa1
 2210 0261 33020000 		.4byte	0x233
 2211 0265 0C       		.uleb128 0xc
 2212 0266 01       		.byte	0x1
 2213 0267 5B040000 		.4byte	.LASF90
 2214 026b 01       		.byte	0x1
 2215 026c 8F03     		.2byte	0x38f
 2216 026e 01       		.byte	0x1
 2217 026f 74020000 		.4byte	0x274
 2218 0273 01       		.byte	0x1
 2219 0274 0A       		.uleb128 0xa
 2220 0275 04       		.byte	0x4
 2221 0276 5A020000 		.4byte	0x25a
 2222 027a 0D       		.uleb128 0xd
 2223 027b 01       		.byte	0x1
 2224 027c 72000000 		.4byte	.LASF43
 2225 0280 01       		.byte	0x1
 2226 0281 71       		.byte	0x71
 2227 0282 01       		.byte	0x1
 2228 0283 00000000 		.4byte	.LFB0
 2229 0287 02000000 		.4byte	.LFE0
 2230 028b 01       		.byte	0x1
 2231 028c 5D       		.byte	0x5d
 2232 028d 9F020000 		.4byte	0x29f
 2233 0291 0E       		.uleb128 0xe
 2234 0292 9A050000 		.4byte	.LASF45
 2235 0296 01       		.byte	0x1
 2236 0297 71       		.byte	0x71
 2237 0298 9F020000 		.4byte	0x29f
 2238 029c 01       		.byte	0x1
 2239 029d 50       		.byte	0x50
 2240 029e 00       		.byte	0x0
 2241 029f 0A       		.uleb128 0xa
 2242 02a0 04       		.byte	0x4
 2243 02a1 6F000000 		.4byte	0x6f
 2244 02a5 0F       		.uleb128 0xf
 2245 02a6 01       		.byte	0x1
 2246 02a7 67050000 		.4byte	.LASF44
 2247 02ab 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 61


 2248 02ac 8901     		.2byte	0x189
 2249 02ae 01       		.byte	0x1
 2250 02af 00000000 		.4byte	.LFB2
 2251 02b3 4C000000 		.4byte	.LFE2
 2252 02b7 00000000 		.4byte	.LLST1
 2253 02bb 0C030000 		.4byte	0x30c
 2254 02bf 10       		.uleb128 0x10
 2255 02c0 9B030000 		.4byte	.LASF46
 2256 02c4 01       		.byte	0x1
 2257 02c5 8901     		.2byte	0x189
 2258 02c7 9F020000 		.4byte	0x29f
 2259 02cb 01       		.byte	0x1
 2260 02cc 50       		.byte	0x50
 2261 02cd 11       		.uleb128 0x11
 2262 02ce 6900     		.ascii	"i\000"
 2263 02d0 01       		.byte	0x1
 2264 02d1 8B01     		.2byte	0x18b
 2265 02d3 6F000000 		.4byte	0x6f
 2266 02d7 1F000000 		.4byte	.LLST2
 2267 02db 11       		.uleb128 0x11
 2268 02dc 6A00     		.ascii	"j\000"
 2269 02de 01       		.byte	0x1
 2270 02df 8B01     		.2byte	0x18b
 2271 02e1 6F000000 		.4byte	0x6f
 2272 02e5 3D000000 		.4byte	.LLST3
 2273 02e9 12       		.uleb128 0x12
 2274 02ea 81010000 		.4byte	.LASF47
 2275 02ee 01       		.byte	0x1
 2276 02ef 8C01     		.2byte	0x18c
 2277 02f1 6F000000 		.4byte	0x6f
 2278 02f5 5B000000 		.4byte	.LLST4
 2279 02f9 13       		.uleb128 0x13
 2280 02fa 68657800 		.ascii	"hex\000"
 2281 02fe 01       		.byte	0x1
 2282 02ff 8D01     		.2byte	0x18d
 2283 0301 1C030000 		.4byte	0x31c
 2284 0305 05       		.byte	0x5
 2285 0306 03       		.byte	0x3
 2286 0307 00000000 		.4byte	hex.2290
 2287 030b 00       		.byte	0x0
 2288 030c 14       		.uleb128 0x14
 2289 030d 93000000 		.4byte	0x93
 2290 0311 1C030000 		.4byte	0x31c
 2291 0315 15       		.uleb128 0x15
 2292 0316 AA000000 		.4byte	0xaa
 2293 031a 0F       		.byte	0xf
 2294 031b 00       		.byte	0x0
 2295 031c 16       		.uleb128 0x16
 2296 031d 0C030000 		.4byte	0x30c
 2297 0321 0F       		.uleb128 0xf
 2298 0322 01       		.byte	0x1
 2299 0323 01010000 		.4byte	.LASF48
 2300 0327 01       		.byte	0x1
 2301 0328 B001     		.2byte	0x1b0
 2302 032a 01       		.byte	0x1
 2303 032b 00000000 		.4byte	.LFB3
 2304 032f E0000000 		.4byte	.LFE3
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 62


 2305 0333 6E000000 		.4byte	.LLST5
 2306 0337 59030000 		.4byte	0x359
 2307 033b 11       		.uleb128 0x11
 2308 033c 657000   		.ascii	"ep\000"
 2309 033f 01       		.byte	0x1
 2310 0340 B201     		.2byte	0x1b2
 2311 0342 6F000000 		.4byte	0x6f
 2312 0346 8D000000 		.4byte	.LLST6
 2313 034a 11       		.uleb128 0x11
 2314 034b 6900     		.ascii	"i\000"
 2315 034d 01       		.byte	0x1
 2316 034e B301     		.2byte	0x1b3
 2317 0350 6F000000 		.4byte	0x6f
 2318 0354 AB000000 		.4byte	.LLST7
 2319 0358 00       		.byte	0x0
 2320 0359 17       		.uleb128 0x17
 2321 035a 01       		.byte	0x1
 2322 035b 6A030000 		.4byte	.LASF52
 2323 035f 01       		.byte	0x1
 2324 0360 7303     		.2byte	0x373
 2325 0362 01       		.byte	0x1
 2326 0363 74020000 		.4byte	0x274
 2327 0367 00000000 		.4byte	.LFB6
 2328 036b 1C000000 		.4byte	.LFE6
 2329 036f 01       		.byte	0x1
 2330 0370 5D       		.byte	0x5d
 2331 0371 A0030000 		.4byte	0x3a0
 2332 0375 18       		.uleb128 0x18
 2333 0376 6300     		.ascii	"c\000"
 2334 0378 01       		.byte	0x1
 2335 0379 7303     		.2byte	0x373
 2336 037b 6F000000 		.4byte	0x6f
 2337 037f C9000000 		.4byte	.LLST9
 2338 0383 19       		.uleb128 0x19
 2339 0384 C3020000 		.4byte	.LASF50
 2340 0388 01       		.byte	0x1
 2341 0389 7703     		.2byte	0x377
 2342 038b 74020000 		.4byte	0x274
 2343 038f 1A       		.uleb128 0x1a
 2344 0390 65020000 		.4byte	0x265
 2345 0394 00000000 		.4byte	.LBB6
 2346 0398 10000000 		.4byte	.LBE6
 2347 039c 01       		.byte	0x1
 2348 039d 7903     		.2byte	0x379
 2349 039f 00       		.byte	0x0
 2350 03a0 0F       		.uleb128 0xf
 2351 03a1 01       		.byte	0x1
 2352 03a2 12030000 		.4byte	.LASF49
 2353 03a6 01       		.byte	0x1
 2354 03a7 0103     		.2byte	0x301
 2355 03a9 01       		.byte	0x1
 2356 03aa 00000000 		.4byte	.LFB5
 2357 03ae 28010000 		.4byte	.LFE5
 2358 03b2 DC000000 		.4byte	.LLST10
 2359 03b6 13040000 		.4byte	0x413
 2360 03ba 1B       		.uleb128 0x1b
 2361 03bb 657000   		.ascii	"ep\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 63


 2362 03be 01       		.byte	0x1
 2363 03bf 0303     		.2byte	0x303
 2364 03c1 6F000000 		.4byte	0x6f
 2365 03c5 12       		.uleb128 0x12
 2366 03c6 02050000 		.4byte	.LASF51
 2367 03ca 01       		.byte	0x1
 2368 03cb 0303     		.2byte	0x303
 2369 03cd 6F000000 		.4byte	0x6f
 2370 03d1 FB000000 		.4byte	.LLST11
 2371 03d5 1B       		.uleb128 0x1b
 2372 03d6 6900     		.ascii	"i\000"
 2373 03d8 01       		.byte	0x1
 2374 03d9 0303     		.2byte	0x303
 2375 03db 6F000000 		.4byte	0x6f
 2376 03df 1B       		.uleb128 0x1b
 2377 03e0 69736F00 		.ascii	"iso\000"
 2378 03e4 01       		.byte	0x1
 2379 03e5 0403     		.2byte	0x304
 2380 03e7 6F000000 		.4byte	0x6f
 2381 03eb 1B       		.uleb128 0x1b
 2382 03ec 726900   		.ascii	"ri\000"
 2383 03ef 01       		.byte	0x1
 2384 03f0 0503     		.2byte	0x305
 2385 03f2 6F000000 		.4byte	0x6f
 2386 03f6 12       		.uleb128 0x12
 2387 03f7 C3020000 		.4byte	.LASF50
 2388 03fb 01       		.byte	0x1
 2389 03fc 0703     		.2byte	0x307
 2390 03fe 74020000 		.4byte	0x274
 2391 0402 0E010000 		.4byte	.LLST12
 2392 0406 1B       		.uleb128 0x1b
 2393 0407 70455000 		.ascii	"pEP\000"
 2394 040b 01       		.byte	0x1
 2395 040c 0803     		.2byte	0x308
 2396 040e 13040000 		.4byte	0x413
 2397 0412 00       		.byte	0x0
 2398 0413 0A       		.uleb128 0xa
 2399 0414 04       		.byte	0x4
 2400 0415 A6010000 		.4byte	0x1a6
 2401 0419 1C       		.uleb128 0x1c
 2402 041a 65020000 		.4byte	0x265
 2403 041e 00000000 		.4byte	.LFB7
 2404 0422 18000000 		.4byte	.LFE7
 2405 0426 01       		.byte	0x1
 2406 0427 5D       		.byte	0x5d
 2407 0428 1D       		.uleb128 0x1d
 2408 0429 01       		.byte	0x1
 2409 042a A6010000 		.4byte	.LASF53
 2410 042e 01       		.byte	0x1
 2411 042f A503     		.2byte	0x3a5
 2412 0431 01       		.byte	0x1
 2413 0432 9F020000 		.4byte	0x29f
 2414 0436 00000000 		.4byte	.LFB8
 2415 043a 20000000 		.4byte	.LFE8
 2416 043e 21010000 		.4byte	.LLST14
 2417 0442 63040000 		.4byte	0x463
 2418 0446 12       		.uleb128 0x12
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 64


 2419 0447 C3020000 		.4byte	.LASF50
 2420 044b 01       		.byte	0x1
 2421 044c A803     		.2byte	0x3a8
 2422 044e 74020000 		.4byte	0x274
 2423 0452 40010000 		.4byte	.LLST15
 2424 0456 19       		.uleb128 0x19
 2425 0457 FD020000 		.4byte	.LASF54
 2426 045b 01       		.byte	0x1
 2427 045c A903     		.2byte	0x3a9
 2428 045e 6F000000 		.4byte	0x6f
 2429 0462 00       		.byte	0x0
 2430 0463 0F       		.uleb128 0xf
 2431 0464 01       		.byte	0x1
 2432 0465 F4000000 		.4byte	.LASF55
 2433 0469 01       		.byte	0x1
 2434 046a 0D02     		.2byte	0x20d
 2435 046c 01       		.byte	0x1
 2436 046d 00000000 		.4byte	.LFB4
 2437 0471 70010000 		.4byte	.LFE4
 2438 0475 53010000 		.4byte	.LLST16
 2439 0479 F7040000 		.4byte	0x4f7
 2440 047d 1E       		.uleb128 0x1e
 2441 047e A2000000 		.4byte	.LASF56
 2442 0482 01       		.byte	0x1
 2443 0483 0D02     		.2byte	0x20d
 2444 0485 6F000000 		.4byte	0x6f
 2445 0489 72010000 		.4byte	.LLST17
 2446 048d 11       		.uleb128 0x11
 2447 048e 657000   		.ascii	"ep\000"
 2448 0491 01       		.byte	0x1
 2449 0492 0F02     		.2byte	0x20f
 2450 0494 6F000000 		.4byte	0x6f
 2451 0498 90010000 		.4byte	.LLST18
 2452 049c 19       		.uleb128 0x19
 2453 049d 02050000 		.4byte	.LASF51
 2454 04a1 01       		.byte	0x1
 2455 04a2 1002     		.2byte	0x210
 2456 04a4 6F000000 		.4byte	0x6f
 2457 04a8 1B       		.uleb128 0x1b
 2458 04a9 6900     		.ascii	"i\000"
 2459 04ab 01       		.byte	0x1
 2460 04ac 1102     		.2byte	0x211
 2461 04ae 6F000000 		.4byte	0x6f
 2462 04b2 1B       		.uleb128 0x1b
 2463 04b3 69736F00 		.ascii	"iso\000"
 2464 04b7 01       		.byte	0x1
 2465 04b8 1202     		.2byte	0x212
 2466 04ba 6F000000 		.4byte	0x6f
 2467 04be 19       		.uleb128 0x19
 2468 04bf AE040000 		.4byte	.LASF57
 2469 04c3 01       		.byte	0x1
 2470 04c4 1302     		.2byte	0x213
 2471 04c6 9F020000 		.4byte	0x29f
 2472 04ca 12       		.uleb128 0x12
 2473 04cb 0D000000 		.4byte	.LASF36
 2474 04cf 01       		.byte	0x1
 2475 04d0 1502     		.2byte	0x215
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 65


 2476 04d2 7A000000 		.4byte	0x7a
 2477 04d6 A3010000 		.4byte	.LLST19
 2478 04da 12       		.uleb128 0x12
 2479 04db C3020000 		.4byte	.LASF50
 2480 04df 01       		.byte	0x1
 2481 04e0 1802     		.2byte	0x218
 2482 04e2 74020000 		.4byte	0x274
 2483 04e6 C1010000 		.4byte	.LLST20
 2484 04ea 1B       		.uleb128 0x1b
 2485 04eb 70455000 		.ascii	"pEP\000"
 2486 04ef 01       		.byte	0x1
 2487 04f0 1902     		.2byte	0x219
 2488 04f2 13040000 		.4byte	0x413
 2489 04f6 00       		.byte	0x0
 2490 04f7 1F       		.uleb128 0x1f
 2491 04f8 01       		.byte	0x1
 2492 04f9 1A000000 		.4byte	.LASF58
 2493 04fd 01       		.byte	0x1
 2494 04fe C703     		.2byte	0x3c7
 2495 0500 01       		.byte	0x1
 2496 0501 00000000 		.4byte	.LFB9
 2497 0505 48000000 		.4byte	.LFE9
 2498 0509 01       		.byte	0x1
 2499 050a 5D       		.byte	0x5d
 2500 050b 2C050000 		.4byte	0x52c
 2501 050f 18       		.uleb128 0x18
 2502 0510 657000   		.ascii	"ep\000"
 2503 0513 01       		.byte	0x1
 2504 0514 C703     		.2byte	0x3c7
 2505 0516 6F000000 		.4byte	0x6f
 2506 051a EA010000 		.4byte	.LLST22
 2507 051e 13       		.uleb128 0x13
 2508 051f 726900   		.ascii	"ri\000"
 2509 0522 01       		.byte	0x1
 2510 0523 C903     		.2byte	0x3c9
 2511 0525 6F000000 		.4byte	0x6f
 2512 0529 01       		.byte	0x1
 2513 052a 53       		.byte	0x53
 2514 052b 00       		.byte	0x0
 2515 052c 1D       		.uleb128 0x1d
 2516 052d 01       		.byte	0x1
 2517 052e E3010000 		.4byte	.LASF59
 2518 0532 01       		.byte	0x1
 2519 0533 7204     		.2byte	0x472
 2520 0535 01       		.byte	0x1
 2521 0536 6F000000 		.4byte	0x6f
 2522 053a 00000000 		.4byte	.LFB12
 2523 053e 48000000 		.4byte	.LFE12
 2524 0542 08020000 		.4byte	.LLST23
 2525 0546 81050000 		.4byte	0x581
 2526 054a 12       		.uleb128 0x12
 2527 054b 8E040000 		.4byte	.LASF60
 2528 054f 01       		.byte	0x1
 2529 0550 7404     		.2byte	0x474
 2530 0552 6F000000 		.4byte	0x6f
 2531 0556 27020000 		.4byte	.LLST24
 2532 055a 20       		.uleb128 0x20
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 66


 2533 055b 43030000 		.4byte	.LASF61
 2534 055f 01       		.byte	0x1
 2535 0560 7504     		.2byte	0x475
 2536 0562 6F000000 		.4byte	0x6f
 2537 0566 01       		.byte	0x1
 2538 0567 54       		.byte	0x54
 2539 0568 19       		.uleb128 0x19
 2540 0569 C3020000 		.4byte	.LASF50
 2541 056d 01       		.byte	0x1
 2542 056e 7604     		.2byte	0x476
 2543 0570 74020000 		.4byte	0x274
 2544 0574 19       		.uleb128 0x19
 2545 0575 FD020000 		.4byte	.LASF54
 2546 0579 01       		.byte	0x1
 2547 057a 7704     		.2byte	0x477
 2548 057c 6F000000 		.4byte	0x6f
 2549 0580 00       		.byte	0x0
 2550 0581 17       		.uleb128 0x17
 2551 0582 01       		.byte	0x1
 2552 0583 C6000000 		.4byte	.LASF62
 2553 0587 01       		.byte	0x1
 2554 0588 2C04     		.2byte	0x42c
 2555 058a 01       		.byte	0x1
 2556 058b 6F000000 		.4byte	0x6f
 2557 058f 00000000 		.4byte	.LFB11
 2558 0593 78000000 		.4byte	.LFE11
 2559 0597 01       		.byte	0x1
 2560 0598 5D       		.byte	0x5d
 2561 0599 C4050000 		.4byte	0x5c4
 2562 059d 11       		.uleb128 0x11
 2563 059e 657000   		.ascii	"ep\000"
 2564 05a1 01       		.byte	0x1
 2565 05a2 2E04     		.2byte	0x42e
 2566 05a4 6F000000 		.4byte	0x6f
 2567 05a8 45020000 		.4byte	.LLST26
 2568 05ac 1B       		.uleb128 0x1b
 2569 05ad 726900   		.ascii	"ri\000"
 2570 05b0 01       		.byte	0x1
 2571 05b1 2E04     		.2byte	0x42e
 2572 05b3 6F000000 		.4byte	0x6f
 2573 05b7 19       		.uleb128 0x19
 2574 05b8 8E040000 		.4byte	.LASF60
 2575 05bc 01       		.byte	0x1
 2576 05bd 2F04     		.2byte	0x42f
 2577 05bf 6F000000 		.4byte	0x6f
 2578 05c3 00       		.byte	0x0
 2579 05c4 17       		.uleb128 0x17
 2580 05c5 01       		.byte	0x1
 2581 05c6 4A010000 		.4byte	.LASF63
 2582 05ca 01       		.byte	0x1
 2583 05cb F603     		.2byte	0x3f6
 2584 05cd 01       		.byte	0x1
 2585 05ce 6F000000 		.4byte	0x6f
 2586 05d2 00000000 		.4byte	.LFB10
 2587 05d6 58000000 		.4byte	.LFE10
 2588 05da 01       		.byte	0x1
 2589 05db 5D       		.byte	0x5d
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 67


 2590 05dc 0B060000 		.4byte	0x60b
 2591 05e0 11       		.uleb128 0x11
 2592 05e1 657000   		.ascii	"ep\000"
 2593 05e4 01       		.byte	0x1
 2594 05e5 F803     		.2byte	0x3f8
 2595 05e7 6F000000 		.4byte	0x6f
 2596 05eb 58020000 		.4byte	.LLST28
 2597 05ef 11       		.uleb128 0x11
 2598 05f0 726900   		.ascii	"ri\000"
 2599 05f3 01       		.byte	0x1
 2600 05f4 F803     		.2byte	0x3f8
 2601 05f6 6F000000 		.4byte	0x6f
 2602 05fa 6B020000 		.4byte	.LLST29
 2603 05fe 19       		.uleb128 0x19
 2604 05ff 8E040000 		.4byte	.LASF60
 2605 0603 01       		.byte	0x1
 2606 0604 F903     		.2byte	0x3f9
 2607 0606 6F000000 		.4byte	0x6f
 2608 060a 00       		.byte	0x0
 2609 060b 21       		.uleb128 0x21
 2610 060c 01       		.byte	0x1
 2611 060d 81050000 		.4byte	.LASF64
 2612 0611 01       		.byte	0x1
 2613 0612 96       		.byte	0x96
 2614 0613 01       		.byte	0x1
 2615 0614 6F000000 		.4byte	0x6f
 2616 0618 00000000 		.4byte	.LFB1
 2617 061c 98020000 		.4byte	.LFE1
 2618 0620 7E020000 		.4byte	.LLST30
 2619 0624 7B060000 		.4byte	0x67b
 2620 0628 22       		.uleb128 0x22
 2621 0629 8E040000 		.4byte	.LASF60
 2622 062d 01       		.byte	0x1
 2623 062e 98       		.byte	0x98
 2624 062f 6F000000 		.4byte	0x6f
 2625 0633 23       		.uleb128 0x23
 2626 0634 96030000 		.4byte	.LASF65
 2627 0638 01       		.byte	0x1
 2628 0639 9A       		.byte	0x9a
 2629 063a 1C020000 		.4byte	0x21c
 2630 063e 9D020000 		.4byte	.LLST31
 2631 0642 23       		.uleb128 0x23
 2632 0643 FD040000 		.4byte	.LASF66
 2633 0647 01       		.byte	0x1
 2634 0648 9C       		.byte	0x9c
 2635 0649 6F000000 		.4byte	0x6f
 2636 064d D1020000 		.4byte	.LLST32
 2637 0651 23       		.uleb128 0x23
 2638 0652 0D000000 		.4byte	.LASF36
 2639 0656 01       		.byte	0x1
 2640 0657 9F       		.byte	0x9f
 2641 0658 7A000000 		.4byte	0x7a
 2642 065c EF020000 		.4byte	.LLST33
 2643 0660 22       		.uleb128 0x22
 2644 0661 C3020000 		.4byte	.LASF50
 2645 0665 01       		.byte	0x1
 2646 0666 A1       		.byte	0xa1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 68


 2647 0667 74020000 		.4byte	0x274
 2648 066b 24       		.uleb128 0x24
 2649 066c 65020000 		.4byte	0x265
 2650 0670 42000000 		.4byte	.LBB8
 2651 0674 46000000 		.4byte	.LBE8
 2652 0678 01       		.byte	0x1
 2653 0679 AC       		.byte	0xac
 2654 067a 00       		.byte	0x0
 2655 067b 14       		.uleb128 0x14
 2656 067c 6F000000 		.4byte	0x6f
 2657 0680 86060000 		.4byte	0x686
 2658 0684 25       		.uleb128 0x25
 2659 0685 00       		.byte	0x0
 2660 0686 26       		.uleb128 0x26
 2661 0687 50030000 		.4byte	.LASF67
 2662 068b 01       		.byte	0x1
 2663 068c 18       		.byte	0x18
 2664 068d 93060000 		.4byte	0x693
 2665 0691 01       		.byte	0x1
 2666 0692 01       		.byte	0x1
 2667 0693 16       		.uleb128 0x16
 2668 0694 7B060000 		.4byte	0x67b
 2669 0698 26       		.uleb128 0x26
 2670 0699 7B020000 		.4byte	.LASF68
 2671 069d 01       		.byte	0x1
 2672 069e 1A       		.byte	0x1a
 2673 069f A5060000 		.4byte	0x6a5
 2674 06a3 01       		.byte	0x1
 2675 06a4 01       		.byte	0x1
 2676 06a5 16       		.uleb128 0x16
 2677 06a6 7B060000 		.4byte	0x67b
 2678 06aa 26       		.uleb128 0x26
 2679 06ab E2020000 		.4byte	.LASF69
 2680 06af 01       		.byte	0x1
 2681 06b0 1C       		.byte	0x1c
 2682 06b1 B7060000 		.4byte	0x6b7
 2683 06b5 01       		.byte	0x1
 2684 06b6 01       		.byte	0x1
 2685 06b7 16       		.uleb128 0x16
 2686 06b8 7B060000 		.4byte	0x67b
 2687 06bc 26       		.uleb128 0x26
 2688 06bd 43040000 		.4byte	.LASF70
 2689 06c1 01       		.byte	0x1
 2690 06c2 1E       		.byte	0x1e
 2691 06c3 A5000000 		.4byte	0xa5
 2692 06c7 01       		.byte	0x1
 2693 06c8 01       		.byte	0x1
 2694 06c9 26       		.uleb128 0x26
 2695 06ca 66010000 		.4byte	.LASF71
 2696 06ce 01       		.byte	0x1
 2697 06cf 1F       		.byte	0x1f
 2698 06d0 A5000000 		.4byte	0xa5
 2699 06d4 01       		.byte	0x1
 2700 06d5 01       		.byte	0x1
 2701 06d6 26       		.uleb128 0x26
 2702 06d7 02020000 		.4byte	.LASF72
 2703 06db 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 69


 2704 06dc 20       		.byte	0x20
 2705 06dd A5000000 		.4byte	0xa5
 2706 06e1 01       		.byte	0x1
 2707 06e2 01       		.byte	0x1
 2708 06e3 26       		.uleb128 0x26
 2709 06e4 DE000000 		.4byte	.LASF73
 2710 06e8 01       		.byte	0x1
 2711 06e9 21       		.byte	0x21
 2712 06ea A5000000 		.4byte	0xa5
 2713 06ee 01       		.byte	0x1
 2714 06ef 01       		.byte	0x1
 2715 06f0 26       		.uleb128 0x26
 2716 06f1 17040000 		.4byte	.LASF74
 2717 06f5 01       		.byte	0x1
 2718 06f6 22       		.byte	0x22
 2719 06f7 FD060000 		.4byte	0x6fd
 2720 06fb 01       		.byte	0x1
 2721 06fc 01       		.byte	0x1
 2722 06fd 05       		.uleb128 0x5
 2723 06fe 7B060000 		.4byte	0x67b
 2724 0702 26       		.uleb128 0x26
 2725 0703 DA040000 		.4byte	.LASF75
 2726 0707 01       		.byte	0x1
 2727 0708 23       		.byte	0x23
 2728 0709 0F070000 		.4byte	0x70f
 2729 070d 01       		.byte	0x1
 2730 070e 01       		.byte	0x1
 2731 070f 05       		.uleb128 0x5
 2732 0710 7B060000 		.4byte	0x67b
 2733 0714 26       		.uleb128 0x26
 2734 0715 B2000000 		.4byte	.LASF76
 2735 0719 01       		.byte	0x1
 2736 071a 24       		.byte	0x24
 2737 071b A5000000 		.4byte	0xa5
 2738 071f 01       		.byte	0x1
 2739 0720 01       		.byte	0x1
 2740 0721 26       		.uleb128 0x26
 2741 0722 C7040000 		.4byte	.LASF77
 2742 0726 01       		.byte	0x1
 2743 0727 25       		.byte	0x25
 2744 0728 A5000000 		.4byte	0xa5
 2745 072c 01       		.byte	0x1
 2746 072d 01       		.byte	0x1
 2747 072e 26       		.uleb128 0x26
 2748 072f 51050000 		.4byte	.LASF78
 2749 0733 01       		.byte	0x1
 2750 0734 26       		.byte	0x26
 2751 0735 3B070000 		.4byte	0x73b
 2752 0739 01       		.byte	0x1
 2753 073a 01       		.byte	0x1
 2754 073b 05       		.uleb128 0x5
 2755 073c 7B060000 		.4byte	0x67b
 2756 0740 26       		.uleb128 0x26
 2757 0741 66020000 		.4byte	.LASF79
 2758 0745 01       		.byte	0x1
 2759 0746 27       		.byte	0x27
 2760 0747 9F020000 		.4byte	0x29f
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 70


 2761 074b 01       		.byte	0x1
 2762 074c 01       		.byte	0x1
 2763 074d 14       		.uleb128 0x14
 2764 074e 5A020000 		.4byte	0x25a
 2765 0752 58070000 		.4byte	0x758
 2766 0756 25       		.uleb128 0x25
 2767 0757 00       		.byte	0x0
 2768 0758 26       		.uleb128 0x26
 2769 0759 D6020000 		.4byte	.LASF80
 2770 075d 01       		.byte	0x1
 2771 075e 28       		.byte	0x28
 2772 075f 65070000 		.4byte	0x765
 2773 0763 01       		.byte	0x1
 2774 0764 01       		.byte	0x1
 2775 0765 16       		.uleb128 0x16
 2776 0766 4D070000 		.4byte	0x74d
 2777 076a 14       		.uleb128 0x14
 2778 076b 3A010000 		.4byte	0x13a
 2779 076f 75070000 		.4byte	0x775
 2780 0773 25       		.uleb128 0x25
 2781 0774 00       		.byte	0x0
 2782 0775 26       		.uleb128 0x26
 2783 0776 8D030000 		.4byte	.LASF81
 2784 077a 01       		.byte	0x1
 2785 077b 29       		.byte	0x29
 2786 077c 82070000 		.4byte	0x782
 2787 0780 01       		.byte	0x1
 2788 0781 01       		.byte	0x1
 2789 0782 05       		.uleb128 0x5
 2790 0783 6A070000 		.4byte	0x76a
 2791 0787 26       		.uleb128 0x26
 2792 0788 2C000000 		.4byte	.LASF82
 2793 078c 01       		.byte	0x1
 2794 078d 2A       		.byte	0x2a
 2795 078e 94070000 		.4byte	0x794
 2796 0792 01       		.byte	0x1
 2797 0793 01       		.byte	0x1
 2798 0794 05       		.uleb128 0x5
 2799 0795 28020000 		.4byte	0x228
 2800 0799 14       		.uleb128 0x14
 2801 079a 6F000000 		.4byte	0x6f
 2802 079e A9070000 		.4byte	0x7a9
 2803 07a2 15       		.uleb128 0x15
 2804 07a3 AA000000 		.4byte	0xaa
 2805 07a7 21       		.byte	0x21
 2806 07a8 00       		.byte	0x0
 2807 07a9 27       		.uleb128 0x27
 2808 07aa 09050000 		.4byte	.LASF83
 2809 07ae 01       		.byte	0x1
 2810 07af 4B       		.byte	0x4b
 2811 07b0 99070000 		.4byte	0x799
 2812 07b4 01       		.byte	0x1
 2813 07b5 05       		.byte	0x5
 2814 07b6 03       		.byte	0x3
 2815 07b7 00000000 		.4byte	USBFS_idSerialNumberStringDescriptor
 2816 07bb 14       		.uleb128 0x14
 2817 07bc 6F000000 		.4byte	0x6f
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 71


 2818 07c0 CB070000 		.4byte	0x7cb
 2819 07c4 15       		.uleb128 0x15
 2820 07c5 AA000000 		.4byte	0xaa
 2821 07c9 01       		.byte	0x1
 2822 07ca 00       		.byte	0x0
 2823 07cb 27       		.uleb128 0x27
 2824 07cc 64000000 		.4byte	.LASF84
 2825 07d0 01       		.byte	0x1
 2826 07d1 59       		.byte	0x59
 2827 07d2 DD070000 		.4byte	0x7dd
 2828 07d6 01       		.byte	0x1
 2829 07d7 05       		.byte	0x5
 2830 07d8 03       		.byte	0x3
 2831 07d9 00000000 		.4byte	USBFS_tBuffer
 2832 07dd 05       		.uleb128 0x5
 2833 07de BB070000 		.4byte	0x7bb
 2834 07e2 27       		.uleb128 0x27
 2835 07e3 94020000 		.4byte	.LASF85
 2836 07e7 01       		.byte	0x1
 2837 07e8 5B       		.byte	0x5b
 2838 07e9 1C020000 		.4byte	0x21c
 2839 07ed 01       		.byte	0x1
 2840 07ee 05       		.byte	0x5
 2841 07ef 03       		.byte	0x3
 2842 07f0 00000000 		.4byte	USBFS_fwSerialNumberStringDescriptor
 2843 07f4 27       		.uleb128 0x27
 2844 07f5 3B050000 		.4byte	.LASF86
 2845 07f9 01       		.byte	0x1
 2846 07fa 5C       		.byte	0x5c
 2847 07fb A5000000 		.4byte	0xa5
 2848 07ff 01       		.byte	0x1
 2849 0800 05       		.byte	0x5
 2850 0801 03       		.byte	0x3
 2851 0802 00000000 		.4byte	USBFS_snStringConfirm
 2852 0806 00       		.byte	0x0
 2853              		.section	.debug_abbrev
 2854 0000 01       		.uleb128 0x1
 2855 0001 11       		.uleb128 0x11
 2856 0002 01       		.byte	0x1
 2857 0003 25       		.uleb128 0x25
 2858 0004 0E       		.uleb128 0xe
 2859 0005 13       		.uleb128 0x13
 2860 0006 0B       		.uleb128 0xb
 2861 0007 03       		.uleb128 0x3
 2862 0008 0E       		.uleb128 0xe
 2863 0009 1B       		.uleb128 0x1b
 2864 000a 0E       		.uleb128 0xe
 2865 000b 11       		.uleb128 0x11
 2866 000c 01       		.uleb128 0x1
 2867 000d 52       		.uleb128 0x52
 2868 000e 01       		.uleb128 0x1
 2869 000f 55       		.uleb128 0x55
 2870 0010 06       		.uleb128 0x6
 2871 0011 10       		.uleb128 0x10
 2872 0012 06       		.uleb128 0x6
 2873 0013 00       		.byte	0x0
 2874 0014 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 72


 2875 0015 02       		.uleb128 0x2
 2876 0016 24       		.uleb128 0x24
 2877 0017 00       		.byte	0x0
 2878 0018 0B       		.uleb128 0xb
 2879 0019 0B       		.uleb128 0xb
 2880 001a 3E       		.uleb128 0x3e
 2881 001b 0B       		.uleb128 0xb
 2882 001c 03       		.uleb128 0x3
 2883 001d 0E       		.uleb128 0xe
 2884 001e 00       		.byte	0x0
 2885 001f 00       		.byte	0x0
 2886 0020 03       		.uleb128 0x3
 2887 0021 24       		.uleb128 0x24
 2888 0022 00       		.byte	0x0
 2889 0023 0B       		.uleb128 0xb
 2890 0024 0B       		.uleb128 0xb
 2891 0025 3E       		.uleb128 0x3e
 2892 0026 0B       		.uleb128 0xb
 2893 0027 03       		.uleb128 0x3
 2894 0028 08       		.uleb128 0x8
 2895 0029 00       		.byte	0x0
 2896 002a 00       		.byte	0x0
 2897 002b 04       		.uleb128 0x4
 2898 002c 16       		.uleb128 0x16
 2899 002d 00       		.byte	0x0
 2900 002e 03       		.uleb128 0x3
 2901 002f 0E       		.uleb128 0xe
 2902 0030 3A       		.uleb128 0x3a
 2903 0031 0B       		.uleb128 0xb
 2904 0032 3B       		.uleb128 0x3b
 2905 0033 0B       		.uleb128 0xb
 2906 0034 49       		.uleb128 0x49
 2907 0035 13       		.uleb128 0x13
 2908 0036 00       		.byte	0x0
 2909 0037 00       		.byte	0x0
 2910 0038 05       		.uleb128 0x5
 2911 0039 35       		.uleb128 0x35
 2912 003a 00       		.byte	0x0
 2913 003b 49       		.uleb128 0x49
 2914 003c 13       		.uleb128 0x13
 2915 003d 00       		.byte	0x0
 2916 003e 00       		.byte	0x0
 2917 003f 06       		.uleb128 0x6
 2918 0040 24       		.uleb128 0x24
 2919 0041 00       		.byte	0x0
 2920 0042 0B       		.uleb128 0xb
 2921 0043 0B       		.uleb128 0xb
 2922 0044 3E       		.uleb128 0x3e
 2923 0045 0B       		.uleb128 0xb
 2924 0046 00       		.byte	0x0
 2925 0047 00       		.byte	0x0
 2926 0048 07       		.uleb128 0x7
 2927 0049 0F       		.uleb128 0xf
 2928 004a 00       		.byte	0x0
 2929 004b 0B       		.uleb128 0xb
 2930 004c 0B       		.uleb128 0xb
 2931 004d 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 73


 2932 004e 00       		.byte	0x0
 2933 004f 08       		.uleb128 0x8
 2934 0050 13       		.uleb128 0x13
 2935 0051 01       		.byte	0x1
 2936 0052 03       		.uleb128 0x3
 2937 0053 0E       		.uleb128 0xe
 2938 0054 0B       		.uleb128 0xb
 2939 0055 0B       		.uleb128 0xb
 2940 0056 3A       		.uleb128 0x3a
 2941 0057 0B       		.uleb128 0xb
 2942 0058 3B       		.uleb128 0x3b
 2943 0059 0B       		.uleb128 0xb
 2944 005a 01       		.uleb128 0x1
 2945 005b 13       		.uleb128 0x13
 2946 005c 00       		.byte	0x0
 2947 005d 00       		.byte	0x0
 2948 005e 09       		.uleb128 0x9
 2949 005f 0D       		.uleb128 0xd
 2950 0060 00       		.byte	0x0
 2951 0061 03       		.uleb128 0x3
 2952 0062 0E       		.uleb128 0xe
 2953 0063 3A       		.uleb128 0x3a
 2954 0064 0B       		.uleb128 0xb
 2955 0065 3B       		.uleb128 0x3b
 2956 0066 0B       		.uleb128 0xb
 2957 0067 49       		.uleb128 0x49
 2958 0068 13       		.uleb128 0x13
 2959 0069 38       		.uleb128 0x38
 2960 006a 0A       		.uleb128 0xa
 2961 006b 00       		.byte	0x0
 2962 006c 00       		.byte	0x0
 2963 006d 0A       		.uleb128 0xa
 2964 006e 0F       		.uleb128 0xf
 2965 006f 00       		.byte	0x0
 2966 0070 0B       		.uleb128 0xb
 2967 0071 0B       		.uleb128 0xb
 2968 0072 49       		.uleb128 0x49
 2969 0073 13       		.uleb128 0x13
 2970 0074 00       		.byte	0x0
 2971 0075 00       		.byte	0x0
 2972 0076 0B       		.uleb128 0xb
 2973 0077 0D       		.uleb128 0xd
 2974 0078 00       		.byte	0x0
 2975 0079 03       		.uleb128 0x3
 2976 007a 08       		.uleb128 0x8
 2977 007b 3A       		.uleb128 0x3a
 2978 007c 0B       		.uleb128 0xb
 2979 007d 3B       		.uleb128 0x3b
 2980 007e 0B       		.uleb128 0xb
 2981 007f 49       		.uleb128 0x49
 2982 0080 13       		.uleb128 0x13
 2983 0081 38       		.uleb128 0x38
 2984 0082 0A       		.uleb128 0xa
 2985 0083 00       		.byte	0x0
 2986 0084 00       		.byte	0x0
 2987 0085 0C       		.uleb128 0xc
 2988 0086 2E       		.uleb128 0x2e
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 74


 2989 0087 00       		.byte	0x0
 2990 0088 3F       		.uleb128 0x3f
 2991 0089 0C       		.uleb128 0xc
 2992 008a 03       		.uleb128 0x3
 2993 008b 0E       		.uleb128 0xe
 2994 008c 3A       		.uleb128 0x3a
 2995 008d 0B       		.uleb128 0xb
 2996 008e 3B       		.uleb128 0x3b
 2997 008f 05       		.uleb128 0x5
 2998 0090 27       		.uleb128 0x27
 2999 0091 0C       		.uleb128 0xc
 3000 0092 49       		.uleb128 0x49
 3001 0093 13       		.uleb128 0x13
 3002 0094 20       		.uleb128 0x20
 3003 0095 0B       		.uleb128 0xb
 3004 0096 00       		.byte	0x0
 3005 0097 00       		.byte	0x0
 3006 0098 0D       		.uleb128 0xd
 3007 0099 2E       		.uleb128 0x2e
 3008 009a 01       		.byte	0x1
 3009 009b 3F       		.uleb128 0x3f
 3010 009c 0C       		.uleb128 0xc
 3011 009d 03       		.uleb128 0x3
 3012 009e 0E       		.uleb128 0xe
 3013 009f 3A       		.uleb128 0x3a
 3014 00a0 0B       		.uleb128 0xb
 3015 00a1 3B       		.uleb128 0x3b
 3016 00a2 0B       		.uleb128 0xb
 3017 00a3 27       		.uleb128 0x27
 3018 00a4 0C       		.uleb128 0xc
 3019 00a5 11       		.uleb128 0x11
 3020 00a6 01       		.uleb128 0x1
 3021 00a7 12       		.uleb128 0x12
 3022 00a8 01       		.uleb128 0x1
 3023 00a9 40       		.uleb128 0x40
 3024 00aa 0A       		.uleb128 0xa
 3025 00ab 01       		.uleb128 0x1
 3026 00ac 13       		.uleb128 0x13
 3027 00ad 00       		.byte	0x0
 3028 00ae 00       		.byte	0x0
 3029 00af 0E       		.uleb128 0xe
 3030 00b0 05       		.uleb128 0x5
 3031 00b1 00       		.byte	0x0
 3032 00b2 03       		.uleb128 0x3
 3033 00b3 0E       		.uleb128 0xe
 3034 00b4 3A       		.uleb128 0x3a
 3035 00b5 0B       		.uleb128 0xb
 3036 00b6 3B       		.uleb128 0x3b
 3037 00b7 0B       		.uleb128 0xb
 3038 00b8 49       		.uleb128 0x49
 3039 00b9 13       		.uleb128 0x13
 3040 00ba 02       		.uleb128 0x2
 3041 00bb 0A       		.uleb128 0xa
 3042 00bc 00       		.byte	0x0
 3043 00bd 00       		.byte	0x0
 3044 00be 0F       		.uleb128 0xf
 3045 00bf 2E       		.uleb128 0x2e
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 75


 3046 00c0 01       		.byte	0x1
 3047 00c1 3F       		.uleb128 0x3f
 3048 00c2 0C       		.uleb128 0xc
 3049 00c3 03       		.uleb128 0x3
 3050 00c4 0E       		.uleb128 0xe
 3051 00c5 3A       		.uleb128 0x3a
 3052 00c6 0B       		.uleb128 0xb
 3053 00c7 3B       		.uleb128 0x3b
 3054 00c8 05       		.uleb128 0x5
 3055 00c9 27       		.uleb128 0x27
 3056 00ca 0C       		.uleb128 0xc
 3057 00cb 11       		.uleb128 0x11
 3058 00cc 01       		.uleb128 0x1
 3059 00cd 12       		.uleb128 0x12
 3060 00ce 01       		.uleb128 0x1
 3061 00cf 40       		.uleb128 0x40
 3062 00d0 06       		.uleb128 0x6
 3063 00d1 01       		.uleb128 0x1
 3064 00d2 13       		.uleb128 0x13
 3065 00d3 00       		.byte	0x0
 3066 00d4 00       		.byte	0x0
 3067 00d5 10       		.uleb128 0x10
 3068 00d6 05       		.uleb128 0x5
 3069 00d7 00       		.byte	0x0
 3070 00d8 03       		.uleb128 0x3
 3071 00d9 0E       		.uleb128 0xe
 3072 00da 3A       		.uleb128 0x3a
 3073 00db 0B       		.uleb128 0xb
 3074 00dc 3B       		.uleb128 0x3b
 3075 00dd 05       		.uleb128 0x5
 3076 00de 49       		.uleb128 0x49
 3077 00df 13       		.uleb128 0x13
 3078 00e0 02       		.uleb128 0x2
 3079 00e1 0A       		.uleb128 0xa
 3080 00e2 00       		.byte	0x0
 3081 00e3 00       		.byte	0x0
 3082 00e4 11       		.uleb128 0x11
 3083 00e5 34       		.uleb128 0x34
 3084 00e6 00       		.byte	0x0
 3085 00e7 03       		.uleb128 0x3
 3086 00e8 08       		.uleb128 0x8
 3087 00e9 3A       		.uleb128 0x3a
 3088 00ea 0B       		.uleb128 0xb
 3089 00eb 3B       		.uleb128 0x3b
 3090 00ec 05       		.uleb128 0x5
 3091 00ed 49       		.uleb128 0x49
 3092 00ee 13       		.uleb128 0x13
 3093 00ef 02       		.uleb128 0x2
 3094 00f0 06       		.uleb128 0x6
 3095 00f1 00       		.byte	0x0
 3096 00f2 00       		.byte	0x0
 3097 00f3 12       		.uleb128 0x12
 3098 00f4 34       		.uleb128 0x34
 3099 00f5 00       		.byte	0x0
 3100 00f6 03       		.uleb128 0x3
 3101 00f7 0E       		.uleb128 0xe
 3102 00f8 3A       		.uleb128 0x3a
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 76


 3103 00f9 0B       		.uleb128 0xb
 3104 00fa 3B       		.uleb128 0x3b
 3105 00fb 05       		.uleb128 0x5
 3106 00fc 49       		.uleb128 0x49
 3107 00fd 13       		.uleb128 0x13
 3108 00fe 02       		.uleb128 0x2
 3109 00ff 06       		.uleb128 0x6
 3110 0100 00       		.byte	0x0
 3111 0101 00       		.byte	0x0
 3112 0102 13       		.uleb128 0x13
 3113 0103 34       		.uleb128 0x34
 3114 0104 00       		.byte	0x0
 3115 0105 03       		.uleb128 0x3
 3116 0106 08       		.uleb128 0x8
 3117 0107 3A       		.uleb128 0x3a
 3118 0108 0B       		.uleb128 0xb
 3119 0109 3B       		.uleb128 0x3b
 3120 010a 05       		.uleb128 0x5
 3121 010b 49       		.uleb128 0x49
 3122 010c 13       		.uleb128 0x13
 3123 010d 02       		.uleb128 0x2
 3124 010e 0A       		.uleb128 0xa
 3125 010f 00       		.byte	0x0
 3126 0110 00       		.byte	0x0
 3127 0111 14       		.uleb128 0x14
 3128 0112 01       		.uleb128 0x1
 3129 0113 01       		.byte	0x1
 3130 0114 49       		.uleb128 0x49
 3131 0115 13       		.uleb128 0x13
 3132 0116 01       		.uleb128 0x1
 3133 0117 13       		.uleb128 0x13
 3134 0118 00       		.byte	0x0
 3135 0119 00       		.byte	0x0
 3136 011a 15       		.uleb128 0x15
 3137 011b 21       		.uleb128 0x21
 3138 011c 00       		.byte	0x0
 3139 011d 49       		.uleb128 0x49
 3140 011e 13       		.uleb128 0x13
 3141 011f 2F       		.uleb128 0x2f
 3142 0120 0B       		.uleb128 0xb
 3143 0121 00       		.byte	0x0
 3144 0122 00       		.byte	0x0
 3145 0123 16       		.uleb128 0x16
 3146 0124 26       		.uleb128 0x26
 3147 0125 00       		.byte	0x0
 3148 0126 49       		.uleb128 0x49
 3149 0127 13       		.uleb128 0x13
 3150 0128 00       		.byte	0x0
 3151 0129 00       		.byte	0x0
 3152 012a 17       		.uleb128 0x17
 3153 012b 2E       		.uleb128 0x2e
 3154 012c 01       		.byte	0x1
 3155 012d 3F       		.uleb128 0x3f
 3156 012e 0C       		.uleb128 0xc
 3157 012f 03       		.uleb128 0x3
 3158 0130 0E       		.uleb128 0xe
 3159 0131 3A       		.uleb128 0x3a
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 77


 3160 0132 0B       		.uleb128 0xb
 3161 0133 3B       		.uleb128 0x3b
 3162 0134 05       		.uleb128 0x5
 3163 0135 27       		.uleb128 0x27
 3164 0136 0C       		.uleb128 0xc
 3165 0137 49       		.uleb128 0x49
 3166 0138 13       		.uleb128 0x13
 3167 0139 11       		.uleb128 0x11
 3168 013a 01       		.uleb128 0x1
 3169 013b 12       		.uleb128 0x12
 3170 013c 01       		.uleb128 0x1
 3171 013d 40       		.uleb128 0x40
 3172 013e 0A       		.uleb128 0xa
 3173 013f 01       		.uleb128 0x1
 3174 0140 13       		.uleb128 0x13
 3175 0141 00       		.byte	0x0
 3176 0142 00       		.byte	0x0
 3177 0143 18       		.uleb128 0x18
 3178 0144 05       		.uleb128 0x5
 3179 0145 00       		.byte	0x0
 3180 0146 03       		.uleb128 0x3
 3181 0147 08       		.uleb128 0x8
 3182 0148 3A       		.uleb128 0x3a
 3183 0149 0B       		.uleb128 0xb
 3184 014a 3B       		.uleb128 0x3b
 3185 014b 05       		.uleb128 0x5
 3186 014c 49       		.uleb128 0x49
 3187 014d 13       		.uleb128 0x13
 3188 014e 02       		.uleb128 0x2
 3189 014f 06       		.uleb128 0x6
 3190 0150 00       		.byte	0x0
 3191 0151 00       		.byte	0x0
 3192 0152 19       		.uleb128 0x19
 3193 0153 34       		.uleb128 0x34
 3194 0154 00       		.byte	0x0
 3195 0155 03       		.uleb128 0x3
 3196 0156 0E       		.uleb128 0xe
 3197 0157 3A       		.uleb128 0x3a
 3198 0158 0B       		.uleb128 0xb
 3199 0159 3B       		.uleb128 0x3b
 3200 015a 05       		.uleb128 0x5
 3201 015b 49       		.uleb128 0x49
 3202 015c 13       		.uleb128 0x13
 3203 015d 00       		.byte	0x0
 3204 015e 00       		.byte	0x0
 3205 015f 1A       		.uleb128 0x1a
 3206 0160 1D       		.uleb128 0x1d
 3207 0161 00       		.byte	0x0
 3208 0162 31       		.uleb128 0x31
 3209 0163 13       		.uleb128 0x13
 3210 0164 11       		.uleb128 0x11
 3211 0165 01       		.uleb128 0x1
 3212 0166 12       		.uleb128 0x12
 3213 0167 01       		.uleb128 0x1
 3214 0168 58       		.uleb128 0x58
 3215 0169 0B       		.uleb128 0xb
 3216 016a 59       		.uleb128 0x59
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 78


 3217 016b 05       		.uleb128 0x5
 3218 016c 00       		.byte	0x0
 3219 016d 00       		.byte	0x0
 3220 016e 1B       		.uleb128 0x1b
 3221 016f 34       		.uleb128 0x34
 3222 0170 00       		.byte	0x0
 3223 0171 03       		.uleb128 0x3
 3224 0172 08       		.uleb128 0x8
 3225 0173 3A       		.uleb128 0x3a
 3226 0174 0B       		.uleb128 0xb
 3227 0175 3B       		.uleb128 0x3b
 3228 0176 05       		.uleb128 0x5
 3229 0177 49       		.uleb128 0x49
 3230 0178 13       		.uleb128 0x13
 3231 0179 00       		.byte	0x0
 3232 017a 00       		.byte	0x0
 3233 017b 1C       		.uleb128 0x1c
 3234 017c 2E       		.uleb128 0x2e
 3235 017d 00       		.byte	0x0
 3236 017e 31       		.uleb128 0x31
 3237 017f 13       		.uleb128 0x13
 3238 0180 11       		.uleb128 0x11
 3239 0181 01       		.uleb128 0x1
 3240 0182 12       		.uleb128 0x12
 3241 0183 01       		.uleb128 0x1
 3242 0184 40       		.uleb128 0x40
 3243 0185 0A       		.uleb128 0xa
 3244 0186 00       		.byte	0x0
 3245 0187 00       		.byte	0x0
 3246 0188 1D       		.uleb128 0x1d
 3247 0189 2E       		.uleb128 0x2e
 3248 018a 01       		.byte	0x1
 3249 018b 3F       		.uleb128 0x3f
 3250 018c 0C       		.uleb128 0xc
 3251 018d 03       		.uleb128 0x3
 3252 018e 0E       		.uleb128 0xe
 3253 018f 3A       		.uleb128 0x3a
 3254 0190 0B       		.uleb128 0xb
 3255 0191 3B       		.uleb128 0x3b
 3256 0192 05       		.uleb128 0x5
 3257 0193 27       		.uleb128 0x27
 3258 0194 0C       		.uleb128 0xc
 3259 0195 49       		.uleb128 0x49
 3260 0196 13       		.uleb128 0x13
 3261 0197 11       		.uleb128 0x11
 3262 0198 01       		.uleb128 0x1
 3263 0199 12       		.uleb128 0x12
 3264 019a 01       		.uleb128 0x1
 3265 019b 40       		.uleb128 0x40
 3266 019c 06       		.uleb128 0x6
 3267 019d 01       		.uleb128 0x1
 3268 019e 13       		.uleb128 0x13
 3269 019f 00       		.byte	0x0
 3270 01a0 00       		.byte	0x0
 3271 01a1 1E       		.uleb128 0x1e
 3272 01a2 05       		.uleb128 0x5
 3273 01a3 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 79


 3274 01a4 03       		.uleb128 0x3
 3275 01a5 0E       		.uleb128 0xe
 3276 01a6 3A       		.uleb128 0x3a
 3277 01a7 0B       		.uleb128 0xb
 3278 01a8 3B       		.uleb128 0x3b
 3279 01a9 05       		.uleb128 0x5
 3280 01aa 49       		.uleb128 0x49
 3281 01ab 13       		.uleb128 0x13
 3282 01ac 02       		.uleb128 0x2
 3283 01ad 06       		.uleb128 0x6
 3284 01ae 00       		.byte	0x0
 3285 01af 00       		.byte	0x0
 3286 01b0 1F       		.uleb128 0x1f
 3287 01b1 2E       		.uleb128 0x2e
 3288 01b2 01       		.byte	0x1
 3289 01b3 3F       		.uleb128 0x3f
 3290 01b4 0C       		.uleb128 0xc
 3291 01b5 03       		.uleb128 0x3
 3292 01b6 0E       		.uleb128 0xe
 3293 01b7 3A       		.uleb128 0x3a
 3294 01b8 0B       		.uleb128 0xb
 3295 01b9 3B       		.uleb128 0x3b
 3296 01ba 05       		.uleb128 0x5
 3297 01bb 27       		.uleb128 0x27
 3298 01bc 0C       		.uleb128 0xc
 3299 01bd 11       		.uleb128 0x11
 3300 01be 01       		.uleb128 0x1
 3301 01bf 12       		.uleb128 0x12
 3302 01c0 01       		.uleb128 0x1
 3303 01c1 40       		.uleb128 0x40
 3304 01c2 0A       		.uleb128 0xa
 3305 01c3 01       		.uleb128 0x1
 3306 01c4 13       		.uleb128 0x13
 3307 01c5 00       		.byte	0x0
 3308 01c6 00       		.byte	0x0
 3309 01c7 20       		.uleb128 0x20
 3310 01c8 34       		.uleb128 0x34
 3311 01c9 00       		.byte	0x0
 3312 01ca 03       		.uleb128 0x3
 3313 01cb 0E       		.uleb128 0xe
 3314 01cc 3A       		.uleb128 0x3a
 3315 01cd 0B       		.uleb128 0xb
 3316 01ce 3B       		.uleb128 0x3b
 3317 01cf 05       		.uleb128 0x5
 3318 01d0 49       		.uleb128 0x49
 3319 01d1 13       		.uleb128 0x13
 3320 01d2 02       		.uleb128 0x2
 3321 01d3 0A       		.uleb128 0xa
 3322 01d4 00       		.byte	0x0
 3323 01d5 00       		.byte	0x0
 3324 01d6 21       		.uleb128 0x21
 3325 01d7 2E       		.uleb128 0x2e
 3326 01d8 01       		.byte	0x1
 3327 01d9 3F       		.uleb128 0x3f
 3328 01da 0C       		.uleb128 0xc
 3329 01db 03       		.uleb128 0x3
 3330 01dc 0E       		.uleb128 0xe
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 80


 3331 01dd 3A       		.uleb128 0x3a
 3332 01de 0B       		.uleb128 0xb
 3333 01df 3B       		.uleb128 0x3b
 3334 01e0 0B       		.uleb128 0xb
 3335 01e1 27       		.uleb128 0x27
 3336 01e2 0C       		.uleb128 0xc
 3337 01e3 49       		.uleb128 0x49
 3338 01e4 13       		.uleb128 0x13
 3339 01e5 11       		.uleb128 0x11
 3340 01e6 01       		.uleb128 0x1
 3341 01e7 12       		.uleb128 0x12
 3342 01e8 01       		.uleb128 0x1
 3343 01e9 40       		.uleb128 0x40
 3344 01ea 06       		.uleb128 0x6
 3345 01eb 01       		.uleb128 0x1
 3346 01ec 13       		.uleb128 0x13
 3347 01ed 00       		.byte	0x0
 3348 01ee 00       		.byte	0x0
 3349 01ef 22       		.uleb128 0x22
 3350 01f0 34       		.uleb128 0x34
 3351 01f1 00       		.byte	0x0
 3352 01f2 03       		.uleb128 0x3
 3353 01f3 0E       		.uleb128 0xe
 3354 01f4 3A       		.uleb128 0x3a
 3355 01f5 0B       		.uleb128 0xb
 3356 01f6 3B       		.uleb128 0x3b
 3357 01f7 0B       		.uleb128 0xb
 3358 01f8 49       		.uleb128 0x49
 3359 01f9 13       		.uleb128 0x13
 3360 01fa 00       		.byte	0x0
 3361 01fb 00       		.byte	0x0
 3362 01fc 23       		.uleb128 0x23
 3363 01fd 34       		.uleb128 0x34
 3364 01fe 00       		.byte	0x0
 3365 01ff 03       		.uleb128 0x3
 3366 0200 0E       		.uleb128 0xe
 3367 0201 3A       		.uleb128 0x3a
 3368 0202 0B       		.uleb128 0xb
 3369 0203 3B       		.uleb128 0x3b
 3370 0204 0B       		.uleb128 0xb
 3371 0205 49       		.uleb128 0x49
 3372 0206 13       		.uleb128 0x13
 3373 0207 02       		.uleb128 0x2
 3374 0208 06       		.uleb128 0x6
 3375 0209 00       		.byte	0x0
 3376 020a 00       		.byte	0x0
 3377 020b 24       		.uleb128 0x24
 3378 020c 1D       		.uleb128 0x1d
 3379 020d 00       		.byte	0x0
 3380 020e 31       		.uleb128 0x31
 3381 020f 13       		.uleb128 0x13
 3382 0210 11       		.uleb128 0x11
 3383 0211 01       		.uleb128 0x1
 3384 0212 12       		.uleb128 0x12
 3385 0213 01       		.uleb128 0x1
 3386 0214 58       		.uleb128 0x58
 3387 0215 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 81


 3388 0216 59       		.uleb128 0x59
 3389 0217 0B       		.uleb128 0xb
 3390 0218 00       		.byte	0x0
 3391 0219 00       		.byte	0x0
 3392 021a 25       		.uleb128 0x25
 3393 021b 21       		.uleb128 0x21
 3394 021c 00       		.byte	0x0
 3395 021d 00       		.byte	0x0
 3396 021e 00       		.byte	0x0
 3397 021f 26       		.uleb128 0x26
 3398 0220 34       		.uleb128 0x34
 3399 0221 00       		.byte	0x0
 3400 0222 03       		.uleb128 0x3
 3401 0223 0E       		.uleb128 0xe
 3402 0224 3A       		.uleb128 0x3a
 3403 0225 0B       		.uleb128 0xb
 3404 0226 3B       		.uleb128 0x3b
 3405 0227 0B       		.uleb128 0xb
 3406 0228 49       		.uleb128 0x49
 3407 0229 13       		.uleb128 0x13
 3408 022a 3F       		.uleb128 0x3f
 3409 022b 0C       		.uleb128 0xc
 3410 022c 3C       		.uleb128 0x3c
 3411 022d 0C       		.uleb128 0xc
 3412 022e 00       		.byte	0x0
 3413 022f 00       		.byte	0x0
 3414 0230 27       		.uleb128 0x27
 3415 0231 34       		.uleb128 0x34
 3416 0232 00       		.byte	0x0
 3417 0233 03       		.uleb128 0x3
 3418 0234 0E       		.uleb128 0xe
 3419 0235 3A       		.uleb128 0x3a
 3420 0236 0B       		.uleb128 0xb
 3421 0237 3B       		.uleb128 0x3b
 3422 0238 0B       		.uleb128 0xb
 3423 0239 49       		.uleb128 0x49
 3424 023a 13       		.uleb128 0x13
 3425 023b 3F       		.uleb128 0x3f
 3426 023c 0C       		.uleb128 0xc
 3427 023d 02       		.uleb128 0x2
 3428 023e 0A       		.uleb128 0xa
 3429 023f 00       		.byte	0x0
 3430 0240 00       		.byte	0x0
 3431 0241 00       		.byte	0x0
 3432              		.section	.debug_pubnames,"",%progbits
 3433 0000 E2010000 		.4byte	0x1e2
 3434 0004 0200     		.2byte	0x2
 3435 0006 00000000 		.4byte	.Ldebug_info0
 3436 000a 07080000 		.4byte	0x807
 3437 000e 7A020000 		.4byte	0x27a
 3438 0012 55534246 		.ascii	"USBFS_SerialNumString\000"
 3438      535F5365 
 3438      7269616C 
 3438      4E756D53 
 3438      7472696E 
 3439 0028 A5020000 		.4byte	0x2a5
 3440 002c 55534246 		.ascii	"USBFS_ReadDieID\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 82


 3440      535F5265 
 3440      61644469 
 3440      65494400 
 3441 003c 21030000 		.4byte	0x321
 3442 0040 55534246 		.ascii	"USBFS_ConfigReg\000"
 3442      535F436F 
 3442      6E666967 
 3442      52656700 
 3443 0050 59030000 		.4byte	0x359
 3444 0054 55534246 		.ascii	"USBFS_GetConfigTablePtr\000"
 3444      535F4765 
 3444      74436F6E 
 3444      66696754 
 3444      61626C65 
 3445 006c A0030000 		.4byte	0x3a0
 3446 0070 55534246 		.ascii	"USBFS_ConfigAltChanged\000"
 3446      535F436F 
 3446      6E666967 
 3446      416C7443 
 3446      68616E67 
 3447 0087 19040000 		.4byte	0x419
 3448 008b 55534246 		.ascii	"USBFS_GetDeviceTablePtr\000"
 3448      535F4765 
 3448      74446576 
 3448      69636554 
 3448      61626C65 
 3449 00a3 28040000 		.4byte	0x428
 3450 00a7 55534246 		.ascii	"USBFS_GetInterfaceClassTablePtr\000"
 3450      535F4765 
 3450      74496E74 
 3450      65726661 
 3450      6365436C 
 3451 00c7 63040000 		.4byte	0x463
 3452 00cb 55534246 		.ascii	"USBFS_Config\000"
 3452      535F436F 
 3452      6E666967 
 3452      00
 3453 00d8 F7040000 		.4byte	0x4f7
 3454 00dc 55534246 		.ascii	"USBFS_TerminateEP\000"
 3454      535F5465 
 3454      726D696E 
 3454      61746545 
 3454      5000
 3455 00ee 2C050000 		.4byte	0x52c
 3456 00f2 55534246 		.ascii	"USBFS_ValidateAlternateSetting\000"
 3456      535F5661 
 3456      6C696461 
 3456      7465416C 
 3456      7465726E 
 3457 0111 81050000 		.4byte	0x581
 3458 0115 55534246 		.ascii	"USBFS_ClearEndpointHalt\000"
 3458      535F436C 
 3458      65617245 
 3458      6E64706F 
 3458      696E7448 
 3459 012d C4050000 		.4byte	0x5c4
 3460 0131 55534246 		.ascii	"USBFS_SetEndpointHalt\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 83


 3460      535F5365 
 3460      74456E64 
 3460      706F696E 
 3460      7448616C 
 3461 0147 0B060000 		.4byte	0x60b
 3462 014b 55534246 		.ascii	"USBFS_HandleStandardRqst\000"
 3462      535F4861 
 3462      6E646C65 
 3462      5374616E 
 3462      64617264 
 3463 0164 A9070000 		.4byte	0x7a9
 3464 0168 55534246 		.ascii	"USBFS_idSerialNumberStringDescriptor\000"
 3464      535F6964 
 3464      53657269 
 3464      616C4E75 
 3464      6D626572 
 3465 018d CB070000 		.4byte	0x7cb
 3466 0191 55534246 		.ascii	"USBFS_tBuffer\000"
 3466      535F7442 
 3466      75666665 
 3466      7200
 3467 019f E2070000 		.4byte	0x7e2
 3468 01a3 55534246 		.ascii	"USBFS_fwSerialNumberStringDescriptor\000"
 3468      535F6677 
 3468      53657269 
 3468      616C4E75 
 3468      6D626572 
 3469 01c8 F4070000 		.4byte	0x7f4
 3470 01cc 55534246 		.ascii	"USBFS_snStringConfirm\000"
 3470      535F736E 
 3470      53747269 
 3470      6E67436F 
 3470      6E666972 
 3471 01e2 00000000 		.4byte	0x0
 3472              		.section	.debug_aranges,"",%progbits
 3473 0000 7C000000 		.4byte	0x7c
 3474 0004 0200     		.2byte	0x2
 3475 0006 00000000 		.4byte	.Ldebug_info0
 3476 000a 04       		.byte	0x4
 3477 000b 00       		.byte	0x0
 3478 000c 0000     		.2byte	0x0
 3479 000e 0000     		.2byte	0x0
 3480 0010 00000000 		.4byte	.LFB0
 3481 0014 02000000 		.4byte	.LFE0-.LFB0
 3482 0018 00000000 		.4byte	.LFB2
 3483 001c 4C000000 		.4byte	.LFE2-.LFB2
 3484 0020 00000000 		.4byte	.LFB3
 3485 0024 E0000000 		.4byte	.LFE3-.LFB3
 3486 0028 00000000 		.4byte	.LFB6
 3487 002c 1C000000 		.4byte	.LFE6-.LFB6
 3488 0030 00000000 		.4byte	.LFB5
 3489 0034 28010000 		.4byte	.LFE5-.LFB5
 3490 0038 00000000 		.4byte	.LFB7
 3491 003c 18000000 		.4byte	.LFE7-.LFB7
 3492 0040 00000000 		.4byte	.LFB8
 3493 0044 20000000 		.4byte	.LFE8-.LFB8
 3494 0048 00000000 		.4byte	.LFB4
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 84


 3495 004c 70010000 		.4byte	.LFE4-.LFB4
 3496 0050 00000000 		.4byte	.LFB9
 3497 0054 48000000 		.4byte	.LFE9-.LFB9
 3498 0058 00000000 		.4byte	.LFB12
 3499 005c 48000000 		.4byte	.LFE12-.LFB12
 3500 0060 00000000 		.4byte	.LFB11
 3501 0064 78000000 		.4byte	.LFE11-.LFB11
 3502 0068 00000000 		.4byte	.LFB10
 3503 006c 58000000 		.4byte	.LFE10-.LFB10
 3504 0070 00000000 		.4byte	.LFB1
 3505 0074 98020000 		.4byte	.LFE1-.LFB1
 3506 0078 00000000 		.4byte	0x0
 3507 007c 00000000 		.4byte	0x0
 3508              		.section	.debug_ranges,"",%progbits
 3509              	.Ldebug_ranges0:
 3510 0000 00000000 		.4byte	.Ltext0
 3511 0004 00000000 		.4byte	.Letext0
 3512 0008 00000000 		.4byte	.LFB0
 3513 000c 02000000 		.4byte	.LFE0
 3514 0010 00000000 		.4byte	.LFB2
 3515 0014 4C000000 		.4byte	.LFE2
 3516 0018 00000000 		.4byte	.LFB3
 3517 001c E0000000 		.4byte	.LFE3
 3518 0020 00000000 		.4byte	.LFB6
 3519 0024 1C000000 		.4byte	.LFE6
 3520 0028 00000000 		.4byte	.LFB5
 3521 002c 28010000 		.4byte	.LFE5
 3522 0030 00000000 		.4byte	.LFB7
 3523 0034 18000000 		.4byte	.LFE7
 3524 0038 00000000 		.4byte	.LFB8
 3525 003c 20000000 		.4byte	.LFE8
 3526 0040 00000000 		.4byte	.LFB4
 3527 0044 70010000 		.4byte	.LFE4
 3528 0048 00000000 		.4byte	.LFB9
 3529 004c 48000000 		.4byte	.LFE9
 3530 0050 00000000 		.4byte	.LFB12
 3531 0054 48000000 		.4byte	.LFE12
 3532 0058 00000000 		.4byte	.LFB11
 3533 005c 78000000 		.4byte	.LFE11
 3534 0060 00000000 		.4byte	.LFB10
 3535 0064 58000000 		.4byte	.LFE10
 3536 0068 00000000 		.4byte	.LFB1
 3537 006c 98020000 		.4byte	.LFE1
 3538 0070 00000000 		.4byte	0x0
 3539 0074 00000000 		.4byte	0x0
 3540              		.section	.debug_str,"MS",%progbits,1
 3541              	.LASF38:
 3542 0000 70537461 		.ascii	"pStatusBlock\000"
 3542      74757342 
 3542      6C6F636B 
 3542      00
 3543              	.LASF36:
 3544 000d 636F756E 		.ascii	"count\000"
 3544      7400
 3545              	.LASF10:
 3546 0013 75696E74 		.ascii	"uint16\000"
 3546      313600
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 85


 3547              	.LASF58:
 3548 001a 55534246 		.ascii	"USBFS_TerminateEP\000"
 3548      535F5465 
 3548      726D696E 
 3548      61746545 
 3548      5000
 3549              	.LASF82:
 3550 002c 55534246 		.ascii	"USBFS_currentTD\000"
 3550      535F6375 
 3550      7272656E 
 3550      74544400 
 3551              	.LASF7:
 3552 003c 6C6F6E67 		.ascii	"long long unsigned int\000"
 3552      206C6F6E 
 3552      6720756E 
 3552      7369676E 
 3552      65642069 
 3553              	.LASF19:
 3554 0053 61646472 		.ascii	"addr\000"
 3554      00
 3555              	.LASF87:
 3556 0058 474E5520 		.ascii	"GNU C 4.4.1\000"
 3556      4320342E 
 3556      342E3100 
 3557              	.LASF84:
 3558 0064 55534246 		.ascii	"USBFS_tBuffer\000"
 3558      535F7442 
 3558      75666665 
 3558      7200
 3559              	.LASF43:
 3560 0072 55534246 		.ascii	"USBFS_SerialNumString\000"
 3560      535F5365 
 3560      7269616C 
 3560      4E756D53 
 3560      7472696E 
 3561              	.LASF6:
 3562 0088 6C6F6E67 		.ascii	"long long int\000"
 3562      206C6F6E 
 3562      6720696E 
 3562      7400
 3563              	.LASF0:
 3564 0096 7369676E 		.ascii	"signed char\000"
 3564      65642063 
 3564      68617200 
 3565              	.LASF56:
 3566 00a2 636C6561 		.ascii	"clearAltSetting\000"
 3566      72416C74 
 3566      53657474 
 3566      696E6700 
 3567              	.LASF76:
 3568 00b2 55534246 		.ascii	"USBFS_deviceAddress\000"
 3568      535F6465 
 3568      76696365 
 3568      41646472 
 3568      65737300 
 3569              	.LASF62:
 3570 00c6 55534246 		.ascii	"USBFS_ClearEndpointHalt\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 86


 3570      535F436C 
 3570      65617245 
 3570      6E64706F 
 3570      696E7448 
 3571              	.LASF73:
 3572 00de 55534246 		.ascii	"USBFS_interfaceNumber\000"
 3572      535F696E 
 3572      74657266 
 3572      6163654E 
 3572      756D6265 
 3573              	.LASF55:
 3574 00f4 55534246 		.ascii	"USBFS_Config\000"
 3574      535F436F 
 3574      6E666967 
 3574      00
 3575              	.LASF48:
 3576 0101 55534246 		.ascii	"USBFS_ConfigReg\000"
 3576      535F436F 
 3576      6E666967 
 3576      52656700 
 3577              	.LASF4:
 3578 0111 6C6F6E67 		.ascii	"long int\000"
 3578      20696E74 
 3578      00
 3579              	.LASF9:
 3580 011a 75696E74 		.ascii	"uint8\000"
 3580      3800
 3581              	.LASF18:
 3582 0120 6570546F 		.ascii	"epToggle\000"
 3582      67676C65 
 3582      00
 3583              	.LASF12:
 3584 0129 646F7562 		.ascii	"double\000"
 3584      6C6500
 3585              	.LASF30:
 3586 0130 545F5553 		.ascii	"T_USBFS_EP_SETTINGS_BLOCK\000"
 3586      4246535F 
 3586      45505F53 
 3586      45545449 
 3586      4E47535F 
 3587              	.LASF63:
 3588 014a 55534246 		.ascii	"USBFS_SetEndpointHalt\000"
 3588      535F5365 
 3588      74456E64 
 3588      706F696E 
 3588      7448616C 
 3589              	.LASF37:
 3590 0160 70446174 		.ascii	"pData\000"
 3590      6100
 3591              	.LASF71:
 3592 0166 55534246 		.ascii	"USBFS_configuration\000"
 3592      535F636F 
 3592      6E666967 
 3592      75726174 
 3592      696F6E00 
 3593              	.LASF20:
 3594 017a 65704D6F 		.ascii	"epMode\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 87


 3594      646500
 3595              	.LASF47:
 3596 0181 76616C75 		.ascii	"value\000"
 3596      6500
 3597              	.LASF8:
 3598 0187 756E7369 		.ascii	"unsigned int\000"
 3598      676E6564 
 3598      20696E74 
 3598      00
 3599              	.LASF5:
 3600 0194 6C6F6E67 		.ascii	"long unsigned int\000"
 3600      20756E73 
 3600      69676E65 
 3600      6420696E 
 3600      7400
 3601              	.LASF53:
 3602 01a6 55534246 		.ascii	"USBFS_GetInterfaceClassTablePtr\000"
 3602      535F4765 
 3602      74496E74 
 3602      65726661 
 3602      6365436C 
 3603              	.LASF3:
 3604 01c6 73686F72 		.ascii	"short unsigned int\000"
 3604      7420756E 
 3604      7369676E 
 3604      65642069 
 3604      6E7400
 3605              	.LASF23:
 3606 01d9 696E7465 		.ascii	"interface\000"
 3606      72666163 
 3606      6500
 3607              	.LASF59:
 3608 01e3 55534246 		.ascii	"USBFS_ValidateAlternateSetting\000"
 3608      535F5661 
 3608      6C696461 
 3608      7465416C 
 3608      7465726E 
 3609              	.LASF72:
 3610 0202 55534246 		.ascii	"USBFS_configurationChanged\000"
 3610      535F636F 
 3610      6E666967 
 3610      75726174 
 3610      696F6E43 
 3611              	.LASF89:
 3612 021d 5C5C7073 		.ascii	"\\\\psf\\Home\\Desktop\\KitProg version 2_03\\KitPr"
 3612      665C486F 
 3612      6D655C44 
 3612      65736B74 
 3612      6F705C4B 
 3613 024a 6F675C4B 		.ascii	"og\\KitProg_Bootloader.cydsn\000"
 3613      69745072 
 3613      6F675F42 
 3613      6F6F746C 
 3613      6F616465 
 3614              	.LASF79:
 3615 0266 55534246 		.ascii	"USBFS_interfaceClass\000"
 3615      535F696E 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 88


 3615      74657266 
 3615      61636543 
 3615      6C617373 
 3616              	.LASF68:
 3617 027b 55534246 		.ascii	"USBFS_STRING_DESCRIPTORS\000"
 3617      535F5354 
 3617      52494E47 
 3617      5F444553 
 3617      43524950 
 3618              	.LASF85:
 3619 0294 55534246 		.ascii	"USBFS_fwSerialNumberStringDescriptor\000"
 3619      535F6677 
 3619      53657269 
 3619      616C4E75 
 3619      6D626572 
 3620              	.LASF17:
 3621 02b9 68774570 		.ascii	"hwEpState\000"
 3621      53746174 
 3621      6500
 3622              	.LASF50:
 3623 02c3 70546D70 		.ascii	"pTmp\000"
 3623      00
 3624              	.LASF41:
 3625 02c8 705F6C69 		.ascii	"p_list\000"
 3625      737400
 3626              	.LASF15:
 3627 02cf 61747472 		.ascii	"attrib\000"
 3627      696200
 3628              	.LASF80:
 3629 02d6 55534246 		.ascii	"USBFS_TABLE\000"
 3629      535F5441 
 3629      424C4500 
 3630              	.LASF69:
 3631 02e2 55534246 		.ascii	"USBFS_SN_STRING_DESCRIPTOR\000"
 3631      535F534E 
 3631      5F535452 
 3631      494E475F 
 3631      44455343 
 3632              	.LASF54:
 3633 02fd 63757272 		.ascii	"currentInterfacesNum\000"
 3633      656E7449 
 3633      6E746572 
 3633      66616365 
 3633      734E756D 
 3634              	.LASF49:
 3635 0312 55534246 		.ascii	"USBFS_ConfigAltChanged\000"
 3635      535F436F 
 3635      6E666967 
 3635      416C7443 
 3635      68616E67 
 3636              	.LASF34:
 3637 0329 545F5553 		.ascii	"T_USBFS_XFER_STATUS_BLOCK\000"
 3637      4246535F 
 3637      58464552 
 3637      5F535441 
 3637      5455535F 
 3638              	.LASF61:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 89


 3639 0343 696E7465 		.ascii	"interfaceNum\000"
 3639      72666163 
 3639      654E756D 
 3639      00
 3640              	.LASF67:
 3641 0350 55534246 		.ascii	"USBFS_DEVICE0_DESCR\000"
 3641      535F4445 
 3641      56494345 
 3641      305F4445 
 3641      53435200 
 3642              	.LASF11:
 3643 0364 666C6F61 		.ascii	"float\000"
 3643      7400
 3644              	.LASF52:
 3645 036a 55534246 		.ascii	"USBFS_GetConfigTablePtr\000"
 3645      535F4765 
 3645      74436F6E 
 3645      66696754 
 3645      61626C65 
 3646              	.LASF16:
 3647 0382 61706945 		.ascii	"apiEpState\000"
 3647      70537461 
 3647      746500
 3648              	.LASF81:
 3649 038d 55534246 		.ascii	"USBFS_EP\000"
 3649      535F4550 
 3649      00
 3650              	.LASF65:
 3651 0396 70537472 		.ascii	"pStr\000"
 3651      00
 3652              	.LASF46:
 3653 039b 64657363 		.ascii	"descr\000"
 3653      7200
 3654              	.LASF1:
 3655 03a1 756E7369 		.ascii	"unsigned char\000"
 3655      676E6564 
 3655      20636861 
 3655      7200
 3656              	.LASF26:
 3657 03af 5F555342 		.ascii	"_USBFS_EpSettingsBlock\000"
 3657      46535F45 
 3657      70536574 
 3657      74696E67 
 3657      73426C6F 
 3658              	.LASF2:
 3659 03c6 73686F72 		.ascii	"short int\000"
 3659      7420696E 
 3659      7400
 3660              	.LASF39:
 3661 03d0 545F5553 		.ascii	"T_USBFS_TD\000"
 3661      4246535F 
 3661      544400
 3662              	.LASF31:
 3663 03db 5F555342 		.ascii	"_USBFS_XferStatusBlock\000"
 3663      46535F58 
 3663      66657253 
 3663      74617475 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 90


 3663      73426C6F 
 3664              	.LASF88:
 3665 03f2 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBFS_std.c\000"
 3665      6E657261 
 3665      7465645F 
 3665      536F7572 
 3665      63655C50 
 3666              	.LASF74:
 3667 0417 55534246 		.ascii	"USBFS_interfaceSetting\000"
 3667      535F696E 
 3667      74657266 
 3667      61636553 
 3667      65747469 
 3668              	.LASF24:
 3669 042e 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 3669      4246535F 
 3669      45505F43 
 3669      544C5F42 
 3669      4C4F434B 
 3670              	.LASF70:
 3671 0443 55534246 		.ascii	"USBFS_device\000"
 3671      535F6465 
 3671      76696365 
 3671      00
 3672              	.LASF28:
 3673 0450 61747472 		.ascii	"attributes\000"
 3673      69627574 
 3673      657300
 3674              	.LASF90:
 3675 045b 55534246 		.ascii	"USBFS_GetDeviceTablePtr\000"
 3675      535F4765 
 3675      74446576 
 3675      69636554 
 3675      61626C65 
 3676              	.LASF27:
 3677 0473 616C7453 		.ascii	"altSetting\000"
 3677      65747469 
 3677      6E6700
 3678              	.LASF14:
 3679 047e 63686172 		.ascii	"char\000"
 3679      00
 3680              	.LASF22:
 3681 0483 62756666 		.ascii	"bufferSize\000"
 3681      65725369 
 3681      7A6500
 3682              	.LASF60:
 3683 048e 72657175 		.ascii	"requestHandled\000"
 3683      65737448 
 3683      616E646C 
 3683      656400
 3684              	.LASF21:
 3685 049d 62756666 		.ascii	"buffOffset\000"
 3685      4F666673 
 3685      657400
 3686              	.LASF13:
 3687 04a8 63686172 		.ascii	"char8\000"
 3687      3800
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 91


 3688              	.LASF57:
 3689 04ae 70446573 		.ascii	"pDescr\000"
 3689      637200
 3690              	.LASF25:
 3691 04b5 5F555342 		.ascii	"_USBFS_EpCtlBlock\000"
 3691      46535F45 
 3691      7043746C 
 3691      426C6F63 
 3691      6B00
 3692              	.LASF77:
 3693 04c7 55534246 		.ascii	"USBFS_deviceStatus\000"
 3693      535F6465 
 3693      76696365 
 3693      53746174 
 3693      757300
 3694              	.LASF75:
 3695 04da 55534246 		.ascii	"USBFS_interfaceSetting_last\000"
 3695      535F696E 
 3695      74657266 
 3695      61636553 
 3695      65747469 
 3696              	.LASF33:
 3697 04f6 6C656E67 		.ascii	"length\000"
 3697      746800
 3698              	.LASF66:
 3699 04fd 6E537472 		.ascii	"nStr\000"
 3699      00
 3700              	.LASF51:
 3701 0502 6375725F 		.ascii	"cur_ep\000"
 3701      657000
 3702              	.LASF83:
 3703 0509 55534246 		.ascii	"USBFS_idSerialNumberStringDescriptor\000"
 3703      535F6964 
 3703      53657269 
 3703      616C4E75 
 3703      6D626572 
 3704              	.LASF32:
 3705 052e 73746174 		.ascii	"status\000"
 3705      757300
 3706              	.LASF29:
 3707 0535 624D6973 		.ascii	"bMisc\000"
 3707      6300
 3708              	.LASF86:
 3709 053b 55534246 		.ascii	"USBFS_snStringConfirm\000"
 3709      535F736E 
 3709      53747269 
 3709      6E67436F 
 3709      6E666972 
 3710              	.LASF78:
 3711 0551 55534246 		.ascii	"USBFS_interfaceStatus\000"
 3711      535F696E 
 3711      74657266 
 3711      61636553 
 3711      74617475 
 3712              	.LASF44:
 3713 0567 55534246 		.ascii	"USBFS_ReadDieID\000"
 3713      535F5265 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccZNBGfn.s 			page 92


 3713      61644469 
 3713      65494400 
 3714              	.LASF35:
 3715 0577 5F555342 		.ascii	"_USBFS_Td\000"
 3715      46535F54 
 3715      6400
 3716              	.LASF64:
 3717 0581 55534246 		.ascii	"USBFS_HandleStandardRqst\000"
 3717      535F4861 
 3717      6E646C65 
 3717      5374616E 
 3717      64617264 
 3718              	.LASF45:
 3719 059a 736E5374 		.ascii	"snString\000"
 3719      72696E67 
 3719      00
 3720              	.LASF40:
 3721 05a3 5F555342 		.ascii	"_USBFS_Lut\000"
 3721      46535F4C 
 3721      757400
 3722              	.LASF42:
 3723 05ae 545F5553 		.ascii	"T_USBFS_LUT\000"
 3723      4246535F 
 3723      4C555400 
 3724              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
