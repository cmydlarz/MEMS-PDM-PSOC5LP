ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"PWM_PM.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 CC000000 		.text
  20      02006800 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.PWM_RestoreConfig,"ax",%progbits
  24              		.align	1
  25              		.global	PWM_RestoreConfig
  26              		.thumb
  27              		.thumb_func
  28              		.type	PWM_RestoreConfig, %function
  29              	PWM_RestoreConfig:
  30              	.LFB1:
  31              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_PM.c"
   1:.\Generated_Source\PSoC5/PWM_PM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_PM.c **** * File Name: PWM_PM.c
   3:.\Generated_Source\PSoC5/PWM_PM.c **** * Version 2.40
   4:.\Generated_Source\PSoC5/PWM_PM.c **** *
   5:.\Generated_Source\PSoC5/PWM_PM.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_PM.c **** *  This file provides the power management source code to API for the
   7:.\Generated_Source\PSoC5/PWM_PM.c **** *  PWM.
   8:.\Generated_Source\PSoC5/PWM_PM.c **** *
   9:.\Generated_Source\PSoC5/PWM_PM.c **** * Note:
  10:.\Generated_Source\PSoC5/PWM_PM.c **** *
  11:.\Generated_Source\PSoC5/PWM_PM.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/PWM_PM.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/PWM_PM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/PWM_PM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/PWM_PM.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/PWM_PM.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/PWM_PM.c **** #include "cytypes.h"
  18:.\Generated_Source\PSoC5/PWM_PM.c **** #include "PWM.h"
  19:.\Generated_Source\PSoC5/PWM_PM.c **** 
  20:.\Generated_Source\PSoC5/PWM_PM.c **** static PWM_backupStruct PWM_backup;
  21:.\Generated_Source\PSoC5/PWM_PM.c **** 
  22:.\Generated_Source\PSoC5/PWM_PM.c **** 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 2


  23:.\Generated_Source\PSoC5/PWM_PM.c **** /*******************************************************************************
  24:.\Generated_Source\PSoC5/PWM_PM.c **** * Function Name: PWM_SaveConfig
  25:.\Generated_Source\PSoC5/PWM_PM.c **** ********************************************************************************
  26:.\Generated_Source\PSoC5/PWM_PM.c **** *
  27:.\Generated_Source\PSoC5/PWM_PM.c **** * Summary:
  28:.\Generated_Source\PSoC5/PWM_PM.c **** *  Saves the current user configuration of the component.
  29:.\Generated_Source\PSoC5/PWM_PM.c **** *  
  30:.\Generated_Source\PSoC5/PWM_PM.c **** * Parameters:  
  31:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
  32:.\Generated_Source\PSoC5/PWM_PM.c **** *
  33:.\Generated_Source\PSoC5/PWM_PM.c **** * Return: 
  34:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
  35:.\Generated_Source\PSoC5/PWM_PM.c **** *
  36:.\Generated_Source\PSoC5/PWM_PM.c **** * Global variables:
  37:.\Generated_Source\PSoC5/PWM_PM.c **** *  PWM_backup:  Variables of this global structure are modified to 
  38:.\Generated_Source\PSoC5/PWM_PM.c **** *  store the values of non retention configuration registers when Sleep() API is 
  39:.\Generated_Source\PSoC5/PWM_PM.c **** *  called.
  40:.\Generated_Source\PSoC5/PWM_PM.c **** *
  41:.\Generated_Source\PSoC5/PWM_PM.c **** *******************************************************************************/
  42:.\Generated_Source\PSoC5/PWM_PM.c **** void PWM_SaveConfig(void) 
  43:.\Generated_Source\PSoC5/PWM_PM.c **** {
  44:.\Generated_Source\PSoC5/PWM_PM.c ****     
  45:.\Generated_Source\PSoC5/PWM_PM.c ****     #if(!PWM_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/PWM_PM.c ****         #if (CY_UDB_V0)
  47:.\Generated_Source\PSoC5/PWM_PM.c ****             PWM_backup.PWMUdb = PWM_ReadCounter();
  48:.\Generated_Source\PSoC5/PWM_PM.c ****             PWM_backup.PWMPeriod = PWM_ReadPeriod();
  49:.\Generated_Source\PSoC5/PWM_PM.c ****             #if (PWM_UseStatus)
  50:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.InterruptMaskValue = PWM_STATUS_MASK;
  51:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (PWM_UseStatus) */
  52:.\Generated_Source\PSoC5/PWM_PM.c ****             
  53:.\Generated_Source\PSoC5/PWM_PM.c ****             #if(PWM_UseOneCompareMode)
  54:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMCompareValue = PWM_ReadCompare();
  55:.\Generated_Source\PSoC5/PWM_PM.c ****             #else
  56:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMCompareValue1 = PWM_ReadCompare1();
  57:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMCompareValue2 = PWM_ReadCompare2();
  58:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (PWM_UseOneCompareMode) */
  59:.\Generated_Source\PSoC5/PWM_PM.c ****             
  60:.\Generated_Source\PSoC5/PWM_PM.c ****            #if(PWM_DeadBandUsed)
  61:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMdeadBandValue = PWM_ReadDeadTime();
  62:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (PWM_DeadBandUsed) */
  63:.\Generated_Source\PSoC5/PWM_PM.c ****           
  64:.\Generated_Source\PSoC5/PWM_PM.c ****             #if ( PWM_KillModeMinTime)
  65:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMKillCounterPeriod = PWM_ReadKillTime();
  66:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* ( PWM_KillModeMinTime) */
  67:.\Generated_Source\PSoC5/PWM_PM.c ****         #endif /* (CY_UDB_V0) */
  68:.\Generated_Source\PSoC5/PWM_PM.c ****         
  69:.\Generated_Source\PSoC5/PWM_PM.c ****         #if (CY_UDB_V1)
  70:.\Generated_Source\PSoC5/PWM_PM.c ****             #if(!PWM_PWMModeIsCenterAligned)
  71:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMPeriod = PWM_ReadPeriod();
  72:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (!PWM_PWMModeIsCenterAligned) */
  73:.\Generated_Source\PSoC5/PWM_PM.c ****             PWM_backup.PWMUdb = PWM_ReadCounter();
  74:.\Generated_Source\PSoC5/PWM_PM.c ****             #if (PWM_UseStatus)
  75:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.InterruptMaskValue = PWM_STATUS_MASK;
  76:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (PWM_UseStatus) */
  77:.\Generated_Source\PSoC5/PWM_PM.c ****             
  78:.\Generated_Source\PSoC5/PWM_PM.c ****             #if(PWM_DeadBandMode == PWM__B_PWM__DBM_256_CLOCKS || \
  79:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_DeadBandMode == PWM__B_PWM__DBM_2_4_CLOCKS)
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 3


  80:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_backup.PWMdeadBandValue = PWM_ReadDeadTime();
  81:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /*  deadband count is either 2-4 clocks or 256 clocks */
  82:.\Generated_Source\PSoC5/PWM_PM.c ****             
  83:.\Generated_Source\PSoC5/PWM_PM.c ****             #if(PWM_KillModeMinTime)
  84:.\Generated_Source\PSoC5/PWM_PM.c ****                  PWM_backup.PWMKillCounterPeriod = PWM_ReadKillTime();
  85:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (PWM_KillModeMinTime) */
  86:.\Generated_Source\PSoC5/PWM_PM.c ****         #endif /* (CY_UDB_V1) */
  87:.\Generated_Source\PSoC5/PWM_PM.c ****         
  88:.\Generated_Source\PSoC5/PWM_PM.c ****         #if(PWM_UseControl)
  89:.\Generated_Source\PSoC5/PWM_PM.c ****             PWM_backup.PWMControlRegister = PWM_ReadControlRegister();
  90:.\Generated_Source\PSoC5/PWM_PM.c ****         #endif /* (PWM_UseControl) */
  91:.\Generated_Source\PSoC5/PWM_PM.c ****     #endif  /* (!PWM_UsingFixedFunction) */
  92:.\Generated_Source\PSoC5/PWM_PM.c **** }
  93:.\Generated_Source\PSoC5/PWM_PM.c **** 
  94:.\Generated_Source\PSoC5/PWM_PM.c **** 
  95:.\Generated_Source\PSoC5/PWM_PM.c **** /*******************************************************************************
  96:.\Generated_Source\PSoC5/PWM_PM.c **** * Function Name: PWM_RestoreConfig
  97:.\Generated_Source\PSoC5/PWM_PM.c **** ********************************************************************************
  98:.\Generated_Source\PSoC5/PWM_PM.c **** * 
  99:.\Generated_Source\PSoC5/PWM_PM.c **** * Summary:
 100:.\Generated_Source\PSoC5/PWM_PM.c **** *  Restores the current user configuration of the component.
 101:.\Generated_Source\PSoC5/PWM_PM.c **** *
 102:.\Generated_Source\PSoC5/PWM_PM.c **** * Parameters:  
 103:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
 104:.\Generated_Source\PSoC5/PWM_PM.c **** *
 105:.\Generated_Source\PSoC5/PWM_PM.c **** * Return: 
 106:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
 107:.\Generated_Source\PSoC5/PWM_PM.c **** *
 108:.\Generated_Source\PSoC5/PWM_PM.c **** * Global variables:
 109:.\Generated_Source\PSoC5/PWM_PM.c **** *  PWM_backup:  Variables of this global structure are used to  
 110:.\Generated_Source\PSoC5/PWM_PM.c **** *  restore the values of non retention registers on wakeup from sleep mode.
 111:.\Generated_Source\PSoC5/PWM_PM.c **** *
 112:.\Generated_Source\PSoC5/PWM_PM.c **** *******************************************************************************/
 113:.\Generated_Source\PSoC5/PWM_PM.c **** void PWM_RestoreConfig(void) 
 114:.\Generated_Source\PSoC5/PWM_PM.c **** {
  32              		.loc 1 114 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36 0000 10B5     		push	{r4, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
 115:.\Generated_Source\PSoC5/PWM_PM.c ****         #if(!PWM_UsingFixedFunction)
 116:.\Generated_Source\PSoC5/PWM_PM.c ****             #if (CY_UDB_V0)
 117:.\Generated_Source\PSoC5/PWM_PM.c ****                 /* Interrupt State Backup for Critical Region*/
 118:.\Generated_Source\PSoC5/PWM_PM.c ****                 uint8 PWM_interruptState;
 119:.\Generated_Source\PSoC5/PWM_PM.c ****                 /* Enter Critical Region*/
 120:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_interruptState = CyEnterCriticalSection();
 121:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if (PWM_UseStatus)
 122:.\Generated_Source\PSoC5/PWM_PM.c ****                     /* Use the interrupt output of the status register for IRQ output */
 123:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_STATUS_AUX_CTRL |= PWM_STATUS_ACTL_INT_EN_MASK;
 124:.\Generated_Source\PSoC5/PWM_PM.c ****                     
 125:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_STATUS_MASK = PWM_backup.InterruptMaskValue;
 126:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* (PWM_UseStatus) */
 127:.\Generated_Source\PSoC5/PWM_PM.c ****                 
 128:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if (PWM_Resolution == 8)
 129:.\Generated_Source\PSoC5/PWM_PM.c ****                     /* Set FIFO 0 to 1 byte register for period*/
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 4


 130:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/PWM_PM.c ****                 #else /* (PWM_Resolution == 16)*/
 132:.\Generated_Source\PSoC5/PWM_PM.c ****                     /* Set FIFO 0 to 1 byte register for period */
 133:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 134:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 135:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* (PWM_Resolution == 8) */
 136:.\Generated_Source\PSoC5/PWM_PM.c ****                 /* Exit Critical Region*/
 137:.\Generated_Source\PSoC5/PWM_PM.c ****                 CyExitCriticalSection(PWM_interruptState);
 138:.\Generated_Source\PSoC5/PWM_PM.c ****                 
 139:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_WriteCounter(PWM_backup.PWMUdb);
 140:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_WritePeriod(PWM_backup.PWMPeriod);
 141:.\Generated_Source\PSoC5/PWM_PM.c ****                 
 142:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if(PWM_UseOneCompareMode)
 143:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteCompare(PWM_backup.PWMCompareValue);
 144:.\Generated_Source\PSoC5/PWM_PM.c ****                 #else
 145:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteCompare1(PWM_backup.PWMCompareValue1);
 146:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteCompare2(PWM_backup.PWMCompareValue2);
 147:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* (PWM_UseOneCompareMode) */
 148:.\Generated_Source\PSoC5/PWM_PM.c ****                 
 149:.\Generated_Source\PSoC5/PWM_PM.c ****                #if(PWM_DeadBandMode == PWM__B_PWM__DBM_256_CLOCKS || \
 150:.\Generated_Source\PSoC5/PWM_PM.c ****                    PWM_DeadBandMode == PWM__B_PWM__DBM_2_4_CLOCKS)
 151:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteDeadTime(PWM_backup.PWMdeadBandValue);
 152:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* deadband count is either 2-4 clocks or 256 clocks */
 153:.\Generated_Source\PSoC5/PWM_PM.c ****             
 154:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if ( PWM_KillModeMinTime)
 155:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteKillTime(PWM_backup.PWMKillCounterPeriod);
 156:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* ( PWM_KillModeMinTime) */
 157:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (CY_UDB_V0) */
 158:.\Generated_Source\PSoC5/PWM_PM.c ****             
 159:.\Generated_Source\PSoC5/PWM_PM.c ****             #if (CY_UDB_V1)
 160:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if(!PWM_PWMModeIsCenterAligned)
 161:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WritePeriod(PWM_backup.PWMPeriod);
  39              		.loc 1 161 0
  40 0002 074C     		ldr	r4, .L3
  41              		.cfi_offset 14, -4
  42              		.cfi_offset 4, -8
  43 0004 A088     		ldrh	r0, [r4, #4]
  44 0006 FFF7FEFF 		bl	PWM_WritePeriod
 162:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* (!PWM_PWMModeIsCenterAligned) */
 163:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_WriteCounter(PWM_backup.PWMUdb);
  45              		.loc 1 163 0
  46 000a 6088     		ldrh	r0, [r4, #2]
  47 000c FFF7FEFF 		bl	PWM_WriteCounter
 164:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if (PWM_UseStatus)
 165:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_STATUS_MASK = PWM_backup.InterruptMaskValue;
  48              		.loc 1 165 0
  49 0010 A279     		ldrb	r2, [r4, #6]	@ zero_extendqisi2
  50 0012 044B     		ldr	r3, .L3+4
  51 0014 1A70     		strb	r2, [r3, #0]
 166:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* (PWM_UseStatus) */
 167:.\Generated_Source\PSoC5/PWM_PM.c ****                 
 168:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if(PWM_DeadBandMode == PWM__B_PWM__DBM_256_CLOCKS || \
 169:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_DeadBandMode == PWM__B_PWM__DBM_2_4_CLOCKS)
 170:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteDeadTime(PWM_backup.PWMdeadBandValue);
 171:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* deadband count is either 2-4 clocks or 256 clocks */
 172:.\Generated_Source\PSoC5/PWM_PM.c ****                 
 173:.\Generated_Source\PSoC5/PWM_PM.c ****                 #if(PWM_KillModeMinTime)
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 5


 174:.\Generated_Source\PSoC5/PWM_PM.c ****                     PWM_WriteKillTime(PWM_backup.PWMKillCounterPeriod);
 175:.\Generated_Source\PSoC5/PWM_PM.c ****                 #endif /* (PWM_KillModeMinTime) */
 176:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (CY_UDB_V1) */
 177:.\Generated_Source\PSoC5/PWM_PM.c ****             
 178:.\Generated_Source\PSoC5/PWM_PM.c ****             #if(PWM_UseControl)
 179:.\Generated_Source\PSoC5/PWM_PM.c ****                 PWM_WriteControlRegister(PWM_backup.PWMControlRegister); 
  52              		.loc 1 179 0
  53 0016 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 180:.\Generated_Source\PSoC5/PWM_PM.c ****             #endif /* (PWM_UseControl) */
 181:.\Generated_Source\PSoC5/PWM_PM.c ****         #endif  /* (!PWM_UsingFixedFunction) */
 182:.\Generated_Source\PSoC5/PWM_PM.c ****     }
  54              		.loc 1 182 0
  55 0018 BDE81040 		pop	{r4, lr}
  56              		.loc 1 179 0
  57 001c FFF7FEBF 		b	PWM_WriteControlRegister
  58              	.L4:
  59              		.align	2
  60              	.L3:
  61 0020 00000000 		.word	.LANCHOR0
  62 0024 84650040 		.word	1073767812
  63              		.cfi_endproc
  64              	.LFE1:
  65              		.size	PWM_RestoreConfig, .-PWM_RestoreConfig
  66              		.section	.text.PWM_Wakeup,"ax",%progbits
  67              		.align	1
  68              		.global	PWM_Wakeup
  69              		.thumb
  70              		.thumb_func
  71              		.type	PWM_Wakeup, %function
  72              	PWM_Wakeup:
  73              	.LFB3:
 183:.\Generated_Source\PSoC5/PWM_PM.c **** 
 184:.\Generated_Source\PSoC5/PWM_PM.c **** 
 185:.\Generated_Source\PSoC5/PWM_PM.c **** /*******************************************************************************
 186:.\Generated_Source\PSoC5/PWM_PM.c **** * Function Name: PWM_Sleep
 187:.\Generated_Source\PSoC5/PWM_PM.c **** ********************************************************************************
 188:.\Generated_Source\PSoC5/PWM_PM.c **** * 
 189:.\Generated_Source\PSoC5/PWM_PM.c **** * Summary:
 190:.\Generated_Source\PSoC5/PWM_PM.c **** *  Disables block's operation and saves the user configuration. Should be called 
 191:.\Generated_Source\PSoC5/PWM_PM.c **** *  just prior to entering sleep.
 192:.\Generated_Source\PSoC5/PWM_PM.c **** *  
 193:.\Generated_Source\PSoC5/PWM_PM.c **** * Parameters:  
 194:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
 195:.\Generated_Source\PSoC5/PWM_PM.c **** *
 196:.\Generated_Source\PSoC5/PWM_PM.c **** * Return: 
 197:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
 198:.\Generated_Source\PSoC5/PWM_PM.c **** *
 199:.\Generated_Source\PSoC5/PWM_PM.c **** * Global variables:
 200:.\Generated_Source\PSoC5/PWM_PM.c **** *  PWM_backup.PWMEnableState:  Is modified depending on the enable 
 201:.\Generated_Source\PSoC5/PWM_PM.c **** *  state of the block before entering sleep mode.
 202:.\Generated_Source\PSoC5/PWM_PM.c **** *
 203:.\Generated_Source\PSoC5/PWM_PM.c **** *******************************************************************************/
 204:.\Generated_Source\PSoC5/PWM_PM.c **** void PWM_Sleep(void) 
 205:.\Generated_Source\PSoC5/PWM_PM.c **** {
 206:.\Generated_Source\PSoC5/PWM_PM.c ****     #if(PWM_UseControl)
 207:.\Generated_Source\PSoC5/PWM_PM.c ****         if(PWM_CTRL_ENABLE == (PWM_CONTROL & PWM_CTRL_ENABLE))
 208:.\Generated_Source\PSoC5/PWM_PM.c ****         {
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 6


 209:.\Generated_Source\PSoC5/PWM_PM.c ****             /*Component is enabled */
 210:.\Generated_Source\PSoC5/PWM_PM.c ****             PWM_backup.PWMEnableState = 1u;
 211:.\Generated_Source\PSoC5/PWM_PM.c ****         }
 212:.\Generated_Source\PSoC5/PWM_PM.c ****         else
 213:.\Generated_Source\PSoC5/PWM_PM.c ****         {
 214:.\Generated_Source\PSoC5/PWM_PM.c ****             /* Component is disabled */
 215:.\Generated_Source\PSoC5/PWM_PM.c ****             PWM_backup.PWMEnableState = 0u;
 216:.\Generated_Source\PSoC5/PWM_PM.c ****         }
 217:.\Generated_Source\PSoC5/PWM_PM.c ****     #endif /* (PWM_UseControl) */
 218:.\Generated_Source\PSoC5/PWM_PM.c **** 
 219:.\Generated_Source\PSoC5/PWM_PM.c ****     /* Stop component */
 220:.\Generated_Source\PSoC5/PWM_PM.c ****     PWM_Stop();
 221:.\Generated_Source\PSoC5/PWM_PM.c ****     
 222:.\Generated_Source\PSoC5/PWM_PM.c ****     /* Save registers configuration */
 223:.\Generated_Source\PSoC5/PWM_PM.c ****     PWM_SaveConfig();
 224:.\Generated_Source\PSoC5/PWM_PM.c **** }
 225:.\Generated_Source\PSoC5/PWM_PM.c **** 
 226:.\Generated_Source\PSoC5/PWM_PM.c **** 
 227:.\Generated_Source\PSoC5/PWM_PM.c **** /*******************************************************************************
 228:.\Generated_Source\PSoC5/PWM_PM.c **** * Function Name: PWM_Wakeup
 229:.\Generated_Source\PSoC5/PWM_PM.c **** ********************************************************************************
 230:.\Generated_Source\PSoC5/PWM_PM.c **** * 
 231:.\Generated_Source\PSoC5/PWM_PM.c **** * Summary:
 232:.\Generated_Source\PSoC5/PWM_PM.c **** *  Restores and enables the user configuration. Should be called just after 
 233:.\Generated_Source\PSoC5/PWM_PM.c **** *  awaking from sleep.
 234:.\Generated_Source\PSoC5/PWM_PM.c **** *  
 235:.\Generated_Source\PSoC5/PWM_PM.c **** * Parameters:  
 236:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
 237:.\Generated_Source\PSoC5/PWM_PM.c **** *
 238:.\Generated_Source\PSoC5/PWM_PM.c **** * Return: 
 239:.\Generated_Source\PSoC5/PWM_PM.c **** *  None
 240:.\Generated_Source\PSoC5/PWM_PM.c **** *
 241:.\Generated_Source\PSoC5/PWM_PM.c **** * Global variables:
 242:.\Generated_Source\PSoC5/PWM_PM.c **** *  PWM_backup.pwmEnable:  Is used to restore the enable state of 
 243:.\Generated_Source\PSoC5/PWM_PM.c **** *  block on wakeup from sleep mode.
 244:.\Generated_Source\PSoC5/PWM_PM.c **** *
 245:.\Generated_Source\PSoC5/PWM_PM.c **** *******************************************************************************/
 246:.\Generated_Source\PSoC5/PWM_PM.c **** void PWM_Wakeup(void) 
 247:.\Generated_Source\PSoC5/PWM_PM.c **** {
  74              		.loc 1 247 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 10B5     		push	{r4, lr}
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 8
 248:.\Generated_Source\PSoC5/PWM_PM.c ****      /* Restore registers values */
 249:.\Generated_Source\PSoC5/PWM_PM.c ****     PWM_RestoreConfig();
  81              		.loc 1 249 0
  82              		.cfi_offset 14, -4
  83              		.cfi_offset 4, -8
  84 0002 FFF7FEFF 		bl	PWM_RestoreConfig
 250:.\Generated_Source\PSoC5/PWM_PM.c ****     
 251:.\Generated_Source\PSoC5/PWM_PM.c ****     if(PWM_backup.PWMEnableState != 0u)
  85              		.loc 1 251 0
  86 0006 044B     		ldr	r3, .L9
  87 0008 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 7


  88 000a 1BB1     		cbz	r3, .L7
 252:.\Generated_Source\PSoC5/PWM_PM.c ****     {
 253:.\Generated_Source\PSoC5/PWM_PM.c ****         /* Enable component's operation */
 254:.\Generated_Source\PSoC5/PWM_PM.c ****         PWM_Enable();
 255:.\Generated_Source\PSoC5/PWM_PM.c ****     } /* Do nothing if component's block was disabled before */
 256:.\Generated_Source\PSoC5/PWM_PM.c ****     
 257:.\Generated_Source\PSoC5/PWM_PM.c **** }
  89              		.loc 1 257 0
  90 000c BDE81040 		pop	{r4, lr}
  91              		.loc 1 254 0
  92 0010 FFF7FEBF 		b	PWM_Enable
  93              	.L7:
  94 0014 10BD     		pop	{r4, pc}
  95              	.L10:
  96 0016 00BF     		.align	2
  97              	.L9:
  98 0018 00000000 		.word	.LANCHOR0
  99              		.cfi_endproc
 100              	.LFE3:
 101              		.size	PWM_Wakeup, .-PWM_Wakeup
 102              		.section	.text.PWM_SaveConfig,"ax",%progbits
 103              		.align	1
 104              		.global	PWM_SaveConfig
 105              		.thumb
 106              		.thumb_func
 107              		.type	PWM_SaveConfig, %function
 108              	PWM_SaveConfig:
 109              	.LFB0:
 110              		.loc 1 43 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI2:
 116              		.cfi_def_cfa_offset 8
 117              		.loc 1 71 0
 118              		.cfi_offset 14, -4
 119              		.cfi_offset 4, -8
 120 0002 FFF7FEFF 		bl	PWM_ReadPeriod
 121 0006 064C     		ldr	r4, .L13
 122 0008 A080     		strh	r0, [r4, #4]	@ movhi
 123              		.loc 1 73 0
 124 000a FFF7FEFF 		bl	PWM_ReadCounter
 125              		.loc 1 75 0
 126 000e 054B     		ldr	r3, .L13+4
 127              		.loc 1 73 0
 128 0010 6080     		strh	r0, [r4, #2]	@ movhi
 129              		.loc 1 75 0
 130 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 131 0014 A371     		strb	r3, [r4, #6]
 132              		.loc 1 89 0
 133 0016 FFF7FEFF 		bl	PWM_ReadControlRegister
 134 001a E071     		strb	r0, [r4, #7]
 135              		.loc 1 92 0
 136 001c 10BD     		pop	{r4, pc}
 137              	.L14:
 138 001e 00BF     		.align	2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 8


 139              	.L13:
 140 0020 00000000 		.word	.LANCHOR0
 141 0024 84650040 		.word	1073767812
 142              		.cfi_endproc
 143              	.LFE0:
 144              		.size	PWM_SaveConfig, .-PWM_SaveConfig
 145              		.section	.text.PWM_Sleep,"ax",%progbits
 146              		.align	1
 147              		.global	PWM_Sleep
 148              		.thumb
 149              		.thumb_func
 150              		.type	PWM_Sleep, %function
 151              	PWM_Sleep:
 152              	.LFB2:
 153              		.loc 1 205 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 10B5     		push	{r4, lr}
 158              	.LCFI3:
 159              		.cfi_def_cfa_offset 8
 160              		.loc 1 207 0
 161 0002 084B     		ldr	r3, .L20
 162 0004 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 163 0006 13F0800F 		tst	r3, #128
 164 000a 074B     		ldr	r3, .L20+4
 165 000c 01D0     		beq	.L16
 166              		.cfi_offset 14, -4
 167              		.cfi_offset 4, -8
 168              		.loc 1 210 0
 169 000e 0122     		movs	r2, #1
 170 0010 00E0     		b	.L19
 171              	.L16:
 172              		.loc 1 215 0
 173 0012 0022     		movs	r2, #0
 174              	.L19:
 175 0014 1A70     		strb	r2, [r3, #0]
 176              		.loc 1 220 0
 177 0016 FFF7FEFF 		bl	PWM_Stop
 178              		.loc 1 224 0
 179 001a BDE81040 		pop	{r4, lr}
 180              		.loc 1 223 0
 181 001e FFF7FEBF 		b	PWM_SaveConfig
 182              	.L21:
 183 0022 00BF     		.align	2
 184              	.L20:
 185 0024 75650040 		.word	1073767797
 186 0028 00000000 		.word	.LANCHOR0
 187              		.cfi_endproc
 188              	.LFE2:
 189              		.size	PWM_Sleep, .-PWM_Sleep
 190              		.bss
 191              		.align	2
 192              		.set	.LANCHOR0,. + 0
 193              		.type	PWM_backup, %object
 194              		.size	PWM_backup, 8
 195              	PWM_backup:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 9


 196 0000 00000000 		.space	8
 196      00000000 
 197              		.text
 198              	.Letext0:
 199              		.section	.debug_loc,"",%progbits
 200              	.Ldebug_loc0:
 201              	.LLST0:
 202 0000 00000000 		.4byte	.LFB1
 203 0004 02000000 		.4byte	.LCFI0
 204 0008 0100     		.2byte	0x1
 205 000a 5D       		.byte	0x5d
 206 000b 02000000 		.4byte	.LCFI0
 207 000f 28000000 		.4byte	.LFE1
 208 0013 0200     		.2byte	0x2
 209 0015 7D       		.byte	0x7d
 210 0016 08       		.sleb128 8
 211 0017 00000000 		.4byte	0x0
 212 001b 00000000 		.4byte	0x0
 213              	.LLST1:
 214 001f 00000000 		.4byte	.LFB3
 215 0023 02000000 		.4byte	.LCFI1
 216 0027 0100     		.2byte	0x1
 217 0029 5D       		.byte	0x5d
 218 002a 02000000 		.4byte	.LCFI1
 219 002e 1C000000 		.4byte	.LFE3
 220 0032 0200     		.2byte	0x2
 221 0034 7D       		.byte	0x7d
 222 0035 08       		.sleb128 8
 223 0036 00000000 		.4byte	0x0
 224 003a 00000000 		.4byte	0x0
 225              	.LLST2:
 226 003e 00000000 		.4byte	.LFB0
 227 0042 02000000 		.4byte	.LCFI2
 228 0046 0100     		.2byte	0x1
 229 0048 5D       		.byte	0x5d
 230 0049 02000000 		.4byte	.LCFI2
 231 004d 28000000 		.4byte	.LFE0
 232 0051 0200     		.2byte	0x2
 233 0053 7D       		.byte	0x7d
 234 0054 08       		.sleb128 8
 235 0055 00000000 		.4byte	0x0
 236 0059 00000000 		.4byte	0x0
 237              	.LLST3:
 238 005d 00000000 		.4byte	.LFB2
 239 0061 02000000 		.4byte	.LCFI3
 240 0065 0100     		.2byte	0x1
 241 0067 5D       		.byte	0x5d
 242 0068 02000000 		.4byte	.LCFI3
 243 006c 2C000000 		.4byte	.LFE2
 244 0070 0200     		.2byte	0x2
 245 0072 7D       		.byte	0x7d
 246 0073 08       		.sleb128 8
 247 0074 00000000 		.4byte	0x0
 248 0078 00000000 		.4byte	0x0
 249              		.file 2 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 250              		.file 3 ".\\Generated_Source\\PSoC5\\/PWM.h"
 251              		.section	.debug_info
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 10


 252 0000 59010000 		.4byte	0x159
 253 0004 0200     		.2byte	0x2
 254 0006 00000000 		.4byte	.Ldebug_abbrev0
 255 000a 04       		.byte	0x4
 256 000b 01       		.uleb128 0x1
 257 000c EA000000 		.4byte	.LASF24
 258 0010 01       		.byte	0x1
 259 0011 64000000 		.4byte	.LASF25
 260 0015 86000000 		.4byte	.LASF26
 261 0019 00000000 		.4byte	0x0
 262 001d 00000000 		.4byte	0x0
 263 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 264 0025 00000000 		.4byte	.Ldebug_line0
 265 0029 02       		.uleb128 0x2
 266 002a 01       		.byte	0x1
 267 002b 06       		.byte	0x6
 268 002c 6B010000 		.4byte	.LASF0
 269 0030 02       		.uleb128 0x2
 270 0031 01       		.byte	0x1
 271 0032 08       		.byte	0x8
 272 0033 F6000000 		.4byte	.LASF1
 273 0037 02       		.uleb128 0x2
 274 0038 02       		.byte	0x2
 275 0039 05       		.byte	0x5
 276 003a 9A010000 		.4byte	.LASF2
 277 003e 02       		.uleb128 0x2
 278 003f 02       		.byte	0x2
 279 0040 07       		.byte	0x7
 280 0041 58010000 		.4byte	.LASF3
 281 0045 02       		.uleb128 0x2
 282 0046 04       		.byte	0x4
 283 0047 05       		.byte	0x5
 284 0048 30010000 		.4byte	.LASF4
 285 004c 02       		.uleb128 0x2
 286 004d 04       		.byte	0x4
 287 004e 07       		.byte	0x7
 288 004f 3B000000 		.4byte	.LASF5
 289 0053 02       		.uleb128 0x2
 290 0054 08       		.byte	0x8
 291 0055 05       		.byte	0x5
 292 0056 00000000 		.4byte	.LASF6
 293 005a 02       		.uleb128 0x2
 294 005b 08       		.byte	0x8
 295 005c 07       		.byte	0x7
 296 005d 4D000000 		.4byte	.LASF7
 297 0061 03       		.uleb128 0x3
 298 0062 04       		.byte	0x4
 299 0063 05       		.byte	0x5
 300 0064 696E7400 		.ascii	"int\000"
 301 0068 02       		.uleb128 0x2
 302 0069 04       		.byte	0x4
 303 006a 07       		.byte	0x7
 304 006b 0E000000 		.4byte	.LASF8
 305 006f 04       		.uleb128 0x4
 306 0070 35000000 		.4byte	.LASF9
 307 0074 02       		.byte	0x2
 308 0075 4C       		.byte	0x4c
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 11


 309 0076 30000000 		.4byte	0x30
 310 007a 04       		.uleb128 0x4
 311 007b A4010000 		.4byte	.LASF10
 312 007f 02       		.byte	0x2
 313 0080 4D       		.byte	0x4d
 314 0081 3E000000 		.4byte	0x3e
 315 0085 02       		.uleb128 0x2
 316 0086 04       		.byte	0x4
 317 0087 04       		.byte	0x4
 318 0088 82010000 		.4byte	.LASF11
 319 008c 02       		.uleb128 0x2
 320 008d 08       		.byte	0x8
 321 008e 04       		.byte	0x4
 322 008f 39010000 		.4byte	.LASF12
 323 0093 02       		.uleb128 0x2
 324 0094 01       		.byte	0x1
 325 0095 08       		.byte	0x8
 326 0096 C8010000 		.4byte	.LASF13
 327 009a 05       		.uleb128 0x5
 328 009b 04       		.byte	0x4
 329 009c 07       		.byte	0x7
 330 009d 06       		.uleb128 0x6
 331 009e 08       		.byte	0x8
 332 009f 03       		.byte	0x3
 333 00a0 69       		.byte	0x69
 334 00a1 EC000000 		.4byte	0xec
 335 00a5 07       		.uleb128 0x7
 336 00a6 1B000000 		.4byte	.LASF14
 337 00aa 03       		.byte	0x3
 338 00ab 6B       		.byte	0x6b
 339 00ac 6F000000 		.4byte	0x6f
 340 00b0 02       		.byte	0x2
 341 00b1 23       		.byte	0x23
 342 00b2 00       		.uleb128 0x0
 343 00b3 07       		.uleb128 0x7
 344 00b4 51010000 		.4byte	.LASF15
 345 00b8 03       		.byte	0x3
 346 00b9 89       		.byte	0x89
 347 00ba 7A000000 		.4byte	0x7a
 348 00be 02       		.byte	0x2
 349 00bf 23       		.byte	0x23
 350 00c0 02       		.uleb128 0x2
 351 00c1 07       		.uleb128 0x7
 352 00c2 BE010000 		.4byte	.LASF16
 353 00c6 03       		.byte	0x3
 354 00c7 8B       		.byte	0x8b
 355 00c8 7A000000 		.4byte	0x7a
 356 00cc 02       		.byte	0x2
 357 00cd 23       		.byte	0x23
 358 00ce 04       		.uleb128 0x4
 359 00cf 07       		.uleb128 0x7
 360 00d0 AB010000 		.4byte	.LASF17
 361 00d4 03       		.byte	0x3
 362 00d5 8E       		.byte	0x8e
 363 00d6 6F000000 		.4byte	0x6f
 364 00da 02       		.byte	0x2
 365 00db 23       		.byte	0x23
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 12


 366 00dc 06       		.uleb128 0x6
 367 00dd 07       		.uleb128 0x7
 368 00de 1D010000 		.4byte	.LASF18
 369 00e2 03       		.byte	0x3
 370 00e3 9F       		.byte	0x9f
 371 00e4 6F000000 		.4byte	0x6f
 372 00e8 02       		.byte	0x2
 373 00e9 23       		.byte	0x23
 374 00ea 07       		.uleb128 0x7
 375 00eb 00       		.byte	0x0
 376 00ec 04       		.uleb128 0x4
 377 00ed 40010000 		.4byte	.LASF19
 378 00f1 03       		.byte	0x3
 379 00f2 A4       		.byte	0xa4
 380 00f3 9D000000 		.4byte	0x9d
 381 00f7 08       		.uleb128 0x8
 382 00f8 01       		.byte	0x1
 383 00f9 88010000 		.4byte	.LASF20
 384 00fd 01       		.byte	0x1
 385 00fe 71       		.byte	0x71
 386 00ff 01       		.byte	0x1
 387 0100 00000000 		.4byte	.LFB1
 388 0104 28000000 		.4byte	.LFE1
 389 0108 00000000 		.4byte	.LLST0
 390 010c 08       		.uleb128 0x8
 391 010d 01       		.byte	0x1
 392 010e 2A000000 		.4byte	.LASF21
 393 0112 01       		.byte	0x1
 394 0113 F6       		.byte	0xf6
 395 0114 01       		.byte	0x1
 396 0115 00000000 		.4byte	.LFB3
 397 0119 1C000000 		.4byte	.LFE3
 398 011d 1F000000 		.4byte	.LLST1
 399 0121 08       		.uleb128 0x8
 400 0122 01       		.byte	0x1
 401 0123 04010000 		.4byte	.LASF22
 402 0127 01       		.byte	0x1
 403 0128 2A       		.byte	0x2a
 404 0129 01       		.byte	0x1
 405 012a 00000000 		.4byte	.LFB0
 406 012e 28000000 		.4byte	.LFE0
 407 0132 3E000000 		.4byte	.LLST2
 408 0136 08       		.uleb128 0x8
 409 0137 01       		.byte	0x1
 410 0138 13010000 		.4byte	.LASF23
 411 013c 01       		.byte	0x1
 412 013d CC       		.byte	0xcc
 413 013e 01       		.byte	0x1
 414 013f 00000000 		.4byte	.LFB2
 415 0143 2C000000 		.4byte	.LFE2
 416 0147 5D000000 		.4byte	.LLST3
 417 014b 09       		.uleb128 0x9
 418 014c 77010000 		.4byte	.LASF27
 419 0150 01       		.byte	0x1
 420 0151 14       		.byte	0x14
 421 0152 EC000000 		.4byte	0xec
 422 0156 05       		.byte	0x5
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 13


 423 0157 03       		.byte	0x3
 424 0158 00000000 		.4byte	PWM_backup
 425 015c 00       		.byte	0x0
 426              		.section	.debug_abbrev
 427 0000 01       		.uleb128 0x1
 428 0001 11       		.uleb128 0x11
 429 0002 01       		.byte	0x1
 430 0003 25       		.uleb128 0x25
 431 0004 0E       		.uleb128 0xe
 432 0005 13       		.uleb128 0x13
 433 0006 0B       		.uleb128 0xb
 434 0007 03       		.uleb128 0x3
 435 0008 0E       		.uleb128 0xe
 436 0009 1B       		.uleb128 0x1b
 437 000a 0E       		.uleb128 0xe
 438 000b 11       		.uleb128 0x11
 439 000c 01       		.uleb128 0x1
 440 000d 52       		.uleb128 0x52
 441 000e 01       		.uleb128 0x1
 442 000f 55       		.uleb128 0x55
 443 0010 06       		.uleb128 0x6
 444 0011 10       		.uleb128 0x10
 445 0012 06       		.uleb128 0x6
 446 0013 00       		.byte	0x0
 447 0014 00       		.byte	0x0
 448 0015 02       		.uleb128 0x2
 449 0016 24       		.uleb128 0x24
 450 0017 00       		.byte	0x0
 451 0018 0B       		.uleb128 0xb
 452 0019 0B       		.uleb128 0xb
 453 001a 3E       		.uleb128 0x3e
 454 001b 0B       		.uleb128 0xb
 455 001c 03       		.uleb128 0x3
 456 001d 0E       		.uleb128 0xe
 457 001e 00       		.byte	0x0
 458 001f 00       		.byte	0x0
 459 0020 03       		.uleb128 0x3
 460 0021 24       		.uleb128 0x24
 461 0022 00       		.byte	0x0
 462 0023 0B       		.uleb128 0xb
 463 0024 0B       		.uleb128 0xb
 464 0025 3E       		.uleb128 0x3e
 465 0026 0B       		.uleb128 0xb
 466 0027 03       		.uleb128 0x3
 467 0028 08       		.uleb128 0x8
 468 0029 00       		.byte	0x0
 469 002a 00       		.byte	0x0
 470 002b 04       		.uleb128 0x4
 471 002c 16       		.uleb128 0x16
 472 002d 00       		.byte	0x0
 473 002e 03       		.uleb128 0x3
 474 002f 0E       		.uleb128 0xe
 475 0030 3A       		.uleb128 0x3a
 476 0031 0B       		.uleb128 0xb
 477 0032 3B       		.uleb128 0x3b
 478 0033 0B       		.uleb128 0xb
 479 0034 49       		.uleb128 0x49
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 14


 480 0035 13       		.uleb128 0x13
 481 0036 00       		.byte	0x0
 482 0037 00       		.byte	0x0
 483 0038 05       		.uleb128 0x5
 484 0039 24       		.uleb128 0x24
 485 003a 00       		.byte	0x0
 486 003b 0B       		.uleb128 0xb
 487 003c 0B       		.uleb128 0xb
 488 003d 3E       		.uleb128 0x3e
 489 003e 0B       		.uleb128 0xb
 490 003f 00       		.byte	0x0
 491 0040 00       		.byte	0x0
 492 0041 06       		.uleb128 0x6
 493 0042 13       		.uleb128 0x13
 494 0043 01       		.byte	0x1
 495 0044 0B       		.uleb128 0xb
 496 0045 0B       		.uleb128 0xb
 497 0046 3A       		.uleb128 0x3a
 498 0047 0B       		.uleb128 0xb
 499 0048 3B       		.uleb128 0x3b
 500 0049 0B       		.uleb128 0xb
 501 004a 01       		.uleb128 0x1
 502 004b 13       		.uleb128 0x13
 503 004c 00       		.byte	0x0
 504 004d 00       		.byte	0x0
 505 004e 07       		.uleb128 0x7
 506 004f 0D       		.uleb128 0xd
 507 0050 00       		.byte	0x0
 508 0051 03       		.uleb128 0x3
 509 0052 0E       		.uleb128 0xe
 510 0053 3A       		.uleb128 0x3a
 511 0054 0B       		.uleb128 0xb
 512 0055 3B       		.uleb128 0x3b
 513 0056 0B       		.uleb128 0xb
 514 0057 49       		.uleb128 0x49
 515 0058 13       		.uleb128 0x13
 516 0059 38       		.uleb128 0x38
 517 005a 0A       		.uleb128 0xa
 518 005b 00       		.byte	0x0
 519 005c 00       		.byte	0x0
 520 005d 08       		.uleb128 0x8
 521 005e 2E       		.uleb128 0x2e
 522 005f 00       		.byte	0x0
 523 0060 3F       		.uleb128 0x3f
 524 0061 0C       		.uleb128 0xc
 525 0062 03       		.uleb128 0x3
 526 0063 0E       		.uleb128 0xe
 527 0064 3A       		.uleb128 0x3a
 528 0065 0B       		.uleb128 0xb
 529 0066 3B       		.uleb128 0x3b
 530 0067 0B       		.uleb128 0xb
 531 0068 27       		.uleb128 0x27
 532 0069 0C       		.uleb128 0xc
 533 006a 11       		.uleb128 0x11
 534 006b 01       		.uleb128 0x1
 535 006c 12       		.uleb128 0x12
 536 006d 01       		.uleb128 0x1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 15


 537 006e 40       		.uleb128 0x40
 538 006f 06       		.uleb128 0x6
 539 0070 00       		.byte	0x0
 540 0071 00       		.byte	0x0
 541 0072 09       		.uleb128 0x9
 542 0073 34       		.uleb128 0x34
 543 0074 00       		.byte	0x0
 544 0075 03       		.uleb128 0x3
 545 0076 0E       		.uleb128 0xe
 546 0077 3A       		.uleb128 0x3a
 547 0078 0B       		.uleb128 0xb
 548 0079 3B       		.uleb128 0x3b
 549 007a 0B       		.uleb128 0xb
 550 007b 49       		.uleb128 0x49
 551 007c 13       		.uleb128 0x13
 552 007d 02       		.uleb128 0x2
 553 007e 0A       		.uleb128 0xa
 554 007f 00       		.byte	0x0
 555 0080 00       		.byte	0x0
 556 0081 00       		.byte	0x0
 557              		.section	.debug_pubnames,"",%progbits
 558 0000 54000000 		.4byte	0x54
 559 0004 0200     		.2byte	0x2
 560 0006 00000000 		.4byte	.Ldebug_info0
 561 000a 5D010000 		.4byte	0x15d
 562 000e F7000000 		.4byte	0xf7
 563 0012 50574D5F 		.ascii	"PWM_RestoreConfig\000"
 563      52657374 
 563      6F726543 
 563      6F6E6669 
 563      6700
 564 0024 0C010000 		.4byte	0x10c
 565 0028 50574D5F 		.ascii	"PWM_Wakeup\000"
 565      57616B65 
 565      757000
 566 0033 21010000 		.4byte	0x121
 567 0037 50574D5F 		.ascii	"PWM_SaveConfig\000"
 567      53617665 
 567      436F6E66 
 567      696700
 568 0046 36010000 		.4byte	0x136
 569 004a 50574D5F 		.ascii	"PWM_Sleep\000"
 569      536C6565 
 569      7000
 570 0054 00000000 		.4byte	0x0
 571              		.section	.debug_aranges,"",%progbits
 572 0000 34000000 		.4byte	0x34
 573 0004 0200     		.2byte	0x2
 574 0006 00000000 		.4byte	.Ldebug_info0
 575 000a 04       		.byte	0x4
 576 000b 00       		.byte	0x0
 577 000c 0000     		.2byte	0x0
 578 000e 0000     		.2byte	0x0
 579 0010 00000000 		.4byte	.LFB1
 580 0014 28000000 		.4byte	.LFE1-.LFB1
 581 0018 00000000 		.4byte	.LFB3
 582 001c 1C000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 16


 583 0020 00000000 		.4byte	.LFB0
 584 0024 28000000 		.4byte	.LFE0-.LFB0
 585 0028 00000000 		.4byte	.LFB2
 586 002c 2C000000 		.4byte	.LFE2-.LFB2
 587 0030 00000000 		.4byte	0x0
 588 0034 00000000 		.4byte	0x0
 589              		.section	.debug_ranges,"",%progbits
 590              	.Ldebug_ranges0:
 591 0000 00000000 		.4byte	.Ltext0
 592 0004 00000000 		.4byte	.Letext0
 593 0008 00000000 		.4byte	.LFB1
 594 000c 28000000 		.4byte	.LFE1
 595 0010 00000000 		.4byte	.LFB3
 596 0014 1C000000 		.4byte	.LFE3
 597 0018 00000000 		.4byte	.LFB0
 598 001c 28000000 		.4byte	.LFE0
 599 0020 00000000 		.4byte	.LFB2
 600 0024 2C000000 		.4byte	.LFE2
 601 0028 00000000 		.4byte	0x0
 602 002c 00000000 		.4byte	0x0
 603              		.section	.debug_str,"MS",%progbits,1
 604              	.LASF6:
 605 0000 6C6F6E67 		.ascii	"long long int\000"
 605      206C6F6E 
 605      6720696E 
 605      7400
 606              	.LASF8:
 607 000e 756E7369 		.ascii	"unsigned int\000"
 607      676E6564 
 607      20696E74 
 607      00
 608              	.LASF14:
 609 001b 50574D45 		.ascii	"PWMEnableState\000"
 609      6E61626C 
 609      65537461 
 609      746500
 610              	.LASF21:
 611 002a 50574D5F 		.ascii	"PWM_Wakeup\000"
 611      57616B65 
 611      757000
 612              	.LASF9:
 613 0035 75696E74 		.ascii	"uint8\000"
 613      3800
 614              	.LASF5:
 615 003b 6C6F6E67 		.ascii	"long unsigned int\000"
 615      20756E73 
 615      69676E65 
 615      6420696E 
 615      7400
 616              	.LASF7:
 617 004d 6C6F6E67 		.ascii	"long long unsigned int\000"
 617      206C6F6E 
 617      6720756E 
 617      7369676E 
 617      65642069 
 618              	.LASF25:
 619 0064 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_PM.c\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 17


 619      6E657261 
 619      7465645F 
 619      536F7572 
 619      63655C50 
 620              	.LASF26:
 621 0086 5C5C7073 		.ascii	"\\\\psf\\Home\\Desktop\\USB-Audio-PSOC5LP\\Firmware"
 621      665C486F 
 621      6D655C44 
 621      65736B74 
 621      6F705C55 
 622 00b3 5C4B6974 		.ascii	"\\KitProg version 2_03\\KitProg\\KitProg_Bootloader"
 622      50726F67 
 622      20766572 
 622      73696F6E 
 622      20325F30 
 623 00e3 2E637964 		.ascii	".cydsn\000"
 623      736E00
 624              	.LASF24:
 625 00ea 474E5520 		.ascii	"GNU C 4.4.1\000"
 625      4320342E 
 625      342E3100 
 626              	.LASF1:
 627 00f6 756E7369 		.ascii	"unsigned char\000"
 627      676E6564 
 627      20636861 
 627      7200
 628              	.LASF22:
 629 0104 50574D5F 		.ascii	"PWM_SaveConfig\000"
 629      53617665 
 629      436F6E66 
 629      696700
 630              	.LASF23:
 631 0113 50574D5F 		.ascii	"PWM_Sleep\000"
 631      536C6565 
 631      7000
 632              	.LASF18:
 633 011d 50574D43 		.ascii	"PWMControlRegister\000"
 633      6F6E7472 
 633      6F6C5265 
 633      67697374 
 633      657200
 634              	.LASF4:
 635 0130 6C6F6E67 		.ascii	"long int\000"
 635      20696E74 
 635      00
 636              	.LASF12:
 637 0139 646F7562 		.ascii	"double\000"
 637      6C6500
 638              	.LASF19:
 639 0140 50574D5F 		.ascii	"PWM_backupStruct\000"
 639      6261636B 
 639      75705374 
 639      72756374 
 639      00
 640              	.LASF15:
 641 0151 50574D55 		.ascii	"PWMUdb\000"
 641      646200
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc5aLqRr.s 			page 18


 642              	.LASF3:
 643 0158 73686F72 		.ascii	"short unsigned int\000"
 643      7420756E 
 643      7369676E 
 643      65642069 
 643      6E7400
 644              	.LASF0:
 645 016b 7369676E 		.ascii	"signed char\000"
 645      65642063 
 645      68617200 
 646              	.LASF27:
 647 0177 50574D5F 		.ascii	"PWM_backup\000"
 647      6261636B 
 647      757000
 648              	.LASF11:
 649 0182 666C6F61 		.ascii	"float\000"
 649      7400
 650              	.LASF20:
 651 0188 50574D5F 		.ascii	"PWM_RestoreConfig\000"
 651      52657374 
 651      6F726543 
 651      6F6E6669 
 651      6700
 652              	.LASF2:
 653 019a 73686F72 		.ascii	"short int\000"
 653      7420696E 
 653      7400
 654              	.LASF10:
 655 01a4 75696E74 		.ascii	"uint16\000"
 655      313600
 656              	.LASF17:
 657 01ab 496E7465 		.ascii	"InterruptMaskValue\000"
 657      72727570 
 657      744D6173 
 657      6B56616C 
 657      756500
 658              	.LASF16:
 659 01be 50574D50 		.ascii	"PWMPeriod\000"
 659      6572696F 
 659      6400
 660              	.LASF13:
 661 01c8 63686172 		.ascii	"char\000"
 661      00
 662              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
