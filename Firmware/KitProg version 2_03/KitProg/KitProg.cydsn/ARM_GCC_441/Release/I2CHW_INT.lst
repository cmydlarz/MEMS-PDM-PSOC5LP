ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"I2CHW_INT.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 D3000000 		.text
  20      02007100 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.I2CHW_ISR,"ax",%progbits
  24              		.align	1
  25              		.global	I2CHW_ISR
  26              		.thumb
  27              		.thumb_func
  28              		.type	I2CHW_ISR, %function
  29              	I2CHW_ISR:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC5\\I2CHW_INT.c"
   1:.\Generated_Source\PSoC5/I2CHW_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/I2CHW_INT.c **** * File Name: I2CHW_INT.c
   3:.\Generated_Source\PSoC5/I2CHW_INT.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/I2CHW_INT.c **** *
   5:.\Generated_Source\PSoC5/I2CHW_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/I2CHW_INT.c **** *  This file provides the source code of Interrupt Service Routine (ISR)
   7:.\Generated_Source\PSoC5/I2CHW_INT.c **** *  for I2C component.
   8:.\Generated_Source\PSoC5/I2CHW_INT.c **** *
   9:.\Generated_Source\PSoC5/I2CHW_INT.c **** *  Note:
  10:.\Generated_Source\PSoC5/I2CHW_INT.c **** *
  11:.\Generated_Source\PSoC5/I2CHW_INT.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/I2CHW_INT.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/I2CHW_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/I2CHW_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/I2CHW_INT.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/I2CHW_INT.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  18:.\Generated_Source\PSoC5/I2CHW_INT.c **** #include "I2CHW_PVT.h"
  19:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  20:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  21:.\Generated_Source\PSoC5/I2CHW_INT.c **** /*******************************************************************************
  22:.\Generated_Source\PSoC5/I2CHW_INT.c **** *  Place your includes, defines and code here
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 2


  23:.\Generated_Source\PSoC5/I2CHW_INT.c **** ********************************************************************************/
  24:.\Generated_Source\PSoC5/I2CHW_INT.c **** /* `#START I2CHW_ISR_intc` */
  25:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  26:.\Generated_Source\PSoC5/I2CHW_INT.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  28:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  29:.\Generated_Source\PSoC5/I2CHW_INT.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/I2CHW_INT.c **** * Function Name: I2CHW_ISR
  31:.\Generated_Source\PSoC5/I2CHW_INT.c **** ********************************************************************************
  32:.\Generated_Source\PSoC5/I2CHW_INT.c **** *
  33:.\Generated_Source\PSoC5/I2CHW_INT.c **** * Summary:
  34:.\Generated_Source\PSoC5/I2CHW_INT.c **** *  Handler for I2C interrupt. The Slave and Master operations are handled here.
  35:.\Generated_Source\PSoC5/I2CHW_INT.c **** *
  36:.\Generated_Source\PSoC5/I2CHW_INT.c **** * Parameters:
  37:.\Generated_Source\PSoC5/I2CHW_INT.c **** *  void
  38:.\Generated_Source\PSoC5/I2CHW_INT.c **** *
  39:.\Generated_Source\PSoC5/I2CHW_INT.c **** * Return:
  40:.\Generated_Source\PSoC5/I2CHW_INT.c **** *  void
  41:.\Generated_Source\PSoC5/I2CHW_INT.c **** *
  42:.\Generated_Source\PSoC5/I2CHW_INT.c **** * Reentrant:
  43:.\Generated_Source\PSoC5/I2CHW_INT.c **** *  No
  44:.\Generated_Source\PSoC5/I2CHW_INT.c **** *
  45:.\Generated_Source\PSoC5/I2CHW_INT.c **** *******************************************************************************/
  46:.\Generated_Source\PSoC5/I2CHW_INT.c **** CY_ISR(I2CHW_ISR)
  47:.\Generated_Source\PSoC5/I2CHW_INT.c **** {
  32              		.loc 1 47 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36 0000 38B5     		push	{r3, r4, r5, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 16
  48:.\Generated_Source\PSoC5/I2CHW_INT.c ****     #if(I2CHW_MODE_SLAVE_ENABLED)
  49:.\Generated_Source\PSoC5/I2CHW_INT.c ****        uint8  tmp8;
  50:.\Generated_Source\PSoC5/I2CHW_INT.c ****     #endif  /* (I2CHW_MODE_SLAVE_ENABLED) */
  51:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  52:.\Generated_Source\PSoC5/I2CHW_INT.c ****     uint8  tmpCsr;
  53:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  54:.\Generated_Source\PSoC5/I2CHW_INT.c ****     #if(I2CHW_TIMEOUT_FF_ENABLED)
  55:.\Generated_Source\PSoC5/I2CHW_INT.c ****         if(0u != I2CHW_TimeoutGetStatus())
  56:.\Generated_Source\PSoC5/I2CHW_INT.c ****         {
  57:.\Generated_Source\PSoC5/I2CHW_INT.c ****             I2CHW_TimeoutReset();
  58:.\Generated_Source\PSoC5/I2CHW_INT.c ****             I2CHW_state = I2CHW_SM_EXIT_IDLE;
  59:.\Generated_Source\PSoC5/I2CHW_INT.c ****             /* I2CHW_CSR_REG should be cleared after reset */
  60:.\Generated_Source\PSoC5/I2CHW_INT.c ****         }
  61:.\Generated_Source\PSoC5/I2CHW_INT.c ****     #endif /* (I2CHW_TIMEOUT_FF_ENABLED) */
  62:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  63:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  64:.\Generated_Source\PSoC5/I2CHW_INT.c ****     tmpCsr = I2CHW_CSR_REG;      /* Make copy as interrupts clear */
  39              		.loc 1 64 0
  40 0002 834B     		ldr	r3, .L31
  41              		.cfi_offset 14, -4
  42              		.cfi_offset 5, -8
  43              		.cfi_offset 4, -12
  44              		.cfi_offset 3, -16
  45 0004 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
  65:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 3


  66:.\Generated_Source\PSoC5/I2CHW_INT.c ****     #if(I2CHW_MODE_MULTI_MASTER_SLAVE_ENABLED)
  67:.\Generated_Source\PSoC5/I2CHW_INT.c ****         if(I2CHW_CHECK_START_GEN(I2CHW_MCSR_REG))
  68:.\Generated_Source\PSoC5/I2CHW_INT.c ****         {
  69:.\Generated_Source\PSoC5/I2CHW_INT.c ****             I2CHW_CLEAR_START_GEN;
  70:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  71:.\Generated_Source\PSoC5/I2CHW_INT.c ****             /* Set READ complete, but was aborted */
  72:.\Generated_Source\PSoC5/I2CHW_INT.c ****             I2CHW_mstrStatus |= (I2CHW_MSTAT_ERR_XFER |
  73:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                             I2CHW_GET_MSTAT_CMPLT);
  74:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  75:.\Generated_Source\PSoC5/I2CHW_INT.c ****             /* The slave was addressed */
  76:.\Generated_Source\PSoC5/I2CHW_INT.c ****             I2CHW_state = I2CHW_SM_SLAVE;
  77:.\Generated_Source\PSoC5/I2CHW_INT.c ****         }
  78:.\Generated_Source\PSoC5/I2CHW_INT.c ****     #endif /* (I2CHW_MODE_MULTI_MASTER_SLAVE_ENABLED) */
  79:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  80:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  81:.\Generated_Source\PSoC5/I2CHW_INT.c ****     #if(I2CHW_MODE_MULTI_MASTER_ENABLED)
  82:.\Generated_Source\PSoC5/I2CHW_INT.c ****         if(I2CHW_CHECK_LOST_ARB(tmpCsr))
  83:.\Generated_Source\PSoC5/I2CHW_INT.c ****         {
  84:.\Generated_Source\PSoC5/I2CHW_INT.c ****             /* Set errors */
  85:.\Generated_Source\PSoC5/I2CHW_INT.c ****             I2CHW_mstrStatus |= (I2CHW_MSTAT_ERR_XFER     |
  86:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                             I2CHW_MSTAT_ERR_ARB_LOST |
  87:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                             I2CHW_GET_MSTAT_CMPLT);
  88:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  89:.\Generated_Source\PSoC5/I2CHW_INT.c ****             I2CHW_DISABLE_INT_ON_STOP; /* Interrupt on Stop is enabled by write */
  90:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
  91:.\Generated_Source\PSoC5/I2CHW_INT.c ****             #if(I2CHW_MODE_MULTI_MASTER_SLAVE_ENABLED)
  92:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 if(I2CHW_CHECK_ADDRESS_STS(tmpCsr))
  93:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 {
  94:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     /* The slave was addressed */
  95:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     I2CHW_state = I2CHW_SM_SLAVE;
  96:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 }
  97:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 else
  98:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 {
  99:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     I2CHW_BUS_RELEASE;
 100:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 101:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     I2CHW_state = I2CHW_SM_EXIT_IDLE;
 102:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 }
 103:.\Generated_Source\PSoC5/I2CHW_INT.c ****             #else
 104:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 I2CHW_BUS_RELEASE;
 105:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 106:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 I2CHW_state = I2CHW_SM_EXIT_IDLE;
 107:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 108:.\Generated_Source\PSoC5/I2CHW_INT.c ****             #endif /* (I2CHW_MODE_MULTI_MASTER_SLAVE_ENABLED) */
 109:.\Generated_Source\PSoC5/I2CHW_INT.c ****         }
 110:.\Generated_Source\PSoC5/I2CHW_INT.c ****     #endif /* (I2CHW_MODE_MULTI_MASTER_ENABLED) */
 111:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 112:.\Generated_Source\PSoC5/I2CHW_INT.c ****     /* Check for Master operation mode */
 113:.\Generated_Source\PSoC5/I2CHW_INT.c ****     if(I2CHW_CHECK_SM_MASTER)
  46              		.loc 1 113 0
  47 0006 834B     		ldr	r3, .L31+4
  48 0008 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  49 000a 12F0400F 		tst	r2, #64
  50 000e 00F0F780 		beq	.L2
 114:.\Generated_Source\PSoC5/I2CHW_INT.c ****     {
 115:.\Generated_Source\PSoC5/I2CHW_INT.c ****         #if(I2CHW_MODE_MASTER_ENABLED)
 116:.\Generated_Source\PSoC5/I2CHW_INT.c ****             if(I2CHW_CHECK_BYTE_COMPLETE(tmpCsr))
  51              		.loc 1 116 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 4


  52 0012 14F0010F 		tst	r4, #1
  53              	.LVL0:
  54 0016 00F0DC80 		beq	.L3
 117:.\Generated_Source\PSoC5/I2CHW_INT.c ****             {
 118:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 switch (I2CHW_state)
  55              		.loc 1 118 0
  56 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  57 001c 453B     		subs	r3, r3, #69
  58 001e 052B     		cmp	r3, #5
  59 0020 00F2D780 		bhi	.L3
  60 0024 DFE813F0 		tbh	[pc, r3, lsl #1]
  61              	.L7:
  62 0028 0600     		.2byte	(.L4-.L7)/2
  63 002a 5C00     		.2byte	(.L5-.L7)/2
  64 002c D500     		.2byte	(.L3-.L7)/2
  65 002e D500     		.2byte	(.L3-.L7)/2
  66 0030 0600     		.2byte	(.L4-.L7)/2
  67 0032 A300     		.2byte	(.L6-.L7)/2
  68              	.L4:
 119:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 {
 120:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 case I2CHW_SM_MSTR_WR_ADDR:  /* After address is sent, WRITE data */
 121:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 case I2CHW_SM_MSTR_RD_ADDR:  /* After address is sent, READ  data */
 122:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 123:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     tmpCsr &= ((uint8) ~I2CHW_CSR_STOP_STATUS); /* Clear STOP bit history on addres
  69              		.loc 1 123 0
  70 0034 04F0DF04 		and	r4, r4, #223
  71              	.LVL1:
 124:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     
 125:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     if(I2CHW_CHECK_ADDR_ACK(tmpCsr))
  72              		.loc 1 125 0
  73 0038 04F00A03 		and	r3, r4, #10
  74 003c 082B     		cmp	r3, #8
  75 003e 2AD1     		bne	.L8
 126:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {
 127:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* Setup for transmit or receive of data */
 128:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         if(I2CHW_state == I2CHW_SM_MSTR_WR_ADDR)   /* TRANSMIT data */
  76              		.loc 1 128 0
  77 0040 744B     		ldr	r3, .L31+4
  78 0042 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  79 0044 452A     		cmp	r2, #69
  80 0046 1ED1     		bne	.L9
 129:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 130:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* Check if at least one byte to transfer */
 131:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             if(I2CHW_mstrWrBufSize > 0u)
  81              		.loc 1 131 0
  82 0048 734A     		ldr	r2, .L31+8
  83 004a 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
  84 004c 7AB1     		cbz	r2, .L10
 132:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             {
 133:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 /* Load the 1st data byte */
 134:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_DATA_REG = I2CHW_mstrWrBufPtr[0u];
  85              		.loc 1 134 0
  86 004e 734A     		ldr	r2, .L31+12
  87 0050 1268     		ldr	r2, [r2, #0]
  88 0052 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
  89 0054 724A     		ldr	r2, .L31+16
  90 0056 1170     		strb	r1, [r2, #0]
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 5


 135:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_TRANSMIT_DATA;
  91              		.loc 1 135 0
  92 0058 0621     		movs	r1, #6
  93 005a 963A     		subs	r2, r2, #150
  94 005c 1170     		strb	r1, [r2, #0]
  95 005e 0639     		subs	r1, r1, #6
  96 0060 E632     		adds	r2, r2, #230
  97 0062 1170     		strb	r1, [r2, #0]
 136:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_mstrWrBufIndex = 1u;   /* Set index to 2nd element */
  98              		.loc 1 136 0
  99 0064 6F4A     		ldr	r2, .L31+20
 100 0066 0131     		adds	r1, r1, #1
 101 0068 1170     		strb	r1, [r2, #0]
 137:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 138:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 /* Set transmit state until done */
 139:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_state = I2CHW_SM_MSTR_WR_DATA;
 102              		.loc 1 139 0
 103 006a 4622     		movs	r2, #70
 104 006c 94E0     		b	.L25
 105              	.L10:
 140:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             }
 141:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* End of buffer: complete writing */
 142:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             else if(I2CHW_CHECK_NO_STOP(I2CHW_mstrControl))
 106              		.loc 1 142 0
 107 006e 6E4A     		ldr	r2, .L31+24
 108 0070 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 109 0072 12F00202 		ands	r2, r2, #2
 110 0076 2AD0     		beq	.L12
 143:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             {
 144:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 #if(CY_PSOC5A)
 145:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     /* Do not handles 0 bytes transfer - HALT is NOT allowed */
 146:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     I2CHW_ENABLE_INT_ON_STOP;
 147:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     I2CHW_GENERATE_STOP;
 148:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 
 149:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 #else
 150:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     /* Set WRITE complete and Master HALTED */
 151:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     I2CHW_mstrStatus |= (I2CHW_MSTAT_XFER_HALT |
 111              		.loc 1 151 0
 112 0078 6C4A     		ldr	r2, .L31+28
 113 007a 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 114 007c 41F00A01 		orr	r1, r1, #10
 115              	.LVL2:
 116 0080 1170     		strb	r1, [r2, #0]
 152:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                                     I2CHW_MSTAT_WR_CMPLT);
 153:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 154:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     I2CHW_state = I2CHW_SM_MSTR_HALT; /* Expect RESTART */
 117              		.loc 1 154 0
 118 0082 6022     		movs	r2, #96
 119 0084 96E0     		b	.L29
 120              	.LVL3:
 121              	.L9:
 155:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     I2CHW_DisableInt();
 156:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 
 157:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 #endif /* (CY_PSOC5A) */
 158:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             }
 159:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             else
 160:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             {
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 6


 161:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_ENABLE_INT_ON_STOP; /* Enable interrupt on STOP, to catch it 
 162:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_GENERATE_STOP;
 163:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             }
 164:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }
 165:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         else  /* Master Receive data */
 166:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 167:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_READY_TO_READ; /* Release bus to read data */
 122              		.loc 1 167 0
 123 0086 6A4A     		ldr	r2, .L31+32
 124 0088 0221     		movs	r1, #2
 125 008a 1170     		strb	r1, [r2, #0]
 126 008c E632     		adds	r2, r2, #230
 127 008e 0239     		subs	r1, r1, #2
 128 0090 1170     		strb	r1, [r2, #0]
 168:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 169:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_state  = I2CHW_SM_MSTR_RD_DATA;
 129              		.loc 1 169 0
 130 0092 4A22     		movs	r2, #74
 131 0094 80E0     		b	.L25
 132              	.L8:
 170:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }
 171:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 172:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     /* Address is NACKed */
 173:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     else if(I2CHW_CHECK_ADDR_NAK(tmpCsr))
 133              		.loc 1 173 0
 134 0096 0A2B     		cmp	r3, #10
 135 0098 40F09B80 		bne	.L3
 174:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {
 175:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* Set Address NAK error */
 176:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_mstrStatus |= (I2CHW_MSTAT_ERR_XFER |
 136              		.loc 1 176 0
 137 009c 634B     		ldr	r3, .L31+28
 138 009e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 139 00a0 42F0A002 		orr	r2, r2, #160
 140              	.LVL4:
 141 00a4 1A70     		strb	r2, [r3, #0]
 177:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                         I2CHW_MSTAT_ERR_ADDR_NAK);
 178:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                         
 179:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         if(I2CHW_CHECK_NO_STOP(I2CHW_mstrControl))
 142              		.loc 1 179 0
 143 00a6 604A     		ldr	r2, .L31+24
 144              	.LVL5:
 145 00a8 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 146 00aa 12F00202 		ands	r2, r2, #2
 147 00ae 0ED0     		beq	.L12
 180:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 181:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_mstrStatus |= (I2CHW_MSTAT_XFER_HALT | 
 182:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                             I2CHW_GET_MSTAT_CMPLT);
 148              		.loc 1 182 0
 149 00b0 584A     		ldr	r2, .L31+4
 150              		.loc 1 181 0
 151 00b2 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 152              		.loc 1 182 0
 153 00b4 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 154              		.loc 1 181 0
 155 00b6 01F00801 		and	r1, r1, #8
 156 00ba 0029     		cmp	r1, #0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 7


 157 00bc 14BF     		ite	ne
 158 00be 0921     		movne	r1, #9
 159 00c0 0A21     		moveq	r1, #10
 160 00c2 0143     		orrs	r1, r1, r0
 161              	.LVL6:
 162 00c4 1970     		strb	r1, [r3, #0]
 183:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 184:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_state = I2CHW_SM_MSTR_HALT; /* Expect RESTART */
 163              		.loc 1 184 0
 164 00c6 6023     		movs	r3, #96
 165 00c8 1370     		strb	r3, [r2, #0]
 185:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_DisableInt();
 166              		.loc 1 185 0
 167 00ca 0122     		movs	r2, #1
 168 00cc 74E0     		b	.L27
 169              	.LVL7:
 170              	.L12:
 186:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }
 187:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         else  /* Do normal Stop */
 188:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 189:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_ENABLE_INT_ON_STOP; /* Enable interrupt on STOP, to catch it */
 171              		.loc 1 189 0
 172 00ce 594B     		ldr	r3, .L31+36
 173 00d0 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 174 00d2 41F02001 		orr	r1, r1, #32
 175 00d6 1970     		strb	r1, [r3, #0]
 190:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_GENERATE_STOP;
 176              		.loc 1 190 0
 177 00d8 5221     		movs	r1, #82
 178 00da 183B     		subs	r3, r3, #24
 179 00dc 1970     		strb	r1, [r3, #0]
 180 00de 5AE0     		b	.L28
 181              	.L5:
 191:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }
 192:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 193:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     else
 194:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {
 195:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* Address phase is not set for some reason: error */
 196:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         #if(I2CHW_TIMEOUT_ENABLED)
 197:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* Exit from interrupt to take a chance for timeout timer handle this c
 198:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_DisableInt();
 199:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_ClearPendingInt();
 200:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         #else
 201:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* Block execution flow: unexpected condition */
 202:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             CYASSERT(0u != 0u);
 203:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         #endif /* (I2CHW_TIMEOUT_ENABLED) */
 204:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 205:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     break;
 206:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 207:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 case I2CHW_SM_MSTR_WR_DATA:
 208:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 209:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     if(I2CHW_CHECK_DATA_ACK(tmpCsr))
 182              		.loc 1 209 0
 183 00e0 14F00201 		ands	r1, r4, #2
 184 00e4 2BD1     		bne	.L15
 210:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {
 211:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* Check if end of buffer */
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 8


 212:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         if(I2CHW_mstrWrBufIndex  < I2CHW_mstrWrBufSize)
 185              		.loc 1 212 0
 186 00e6 4F4B     		ldr	r3, .L31+20
 187 00e8 4B4A     		ldr	r2, .L31+8
 188 00ea 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 189 00ec 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 190 00ee 9042     		cmp	r0, r2
 191 00f0 0ED2     		bcs	.L16
 213:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 214:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_DATA_REG =
 215:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                      I2CHW_mstrWrBufPtr[I2CHW_mstrWrBufIndex];
 192              		.loc 1 215 0
 193 00f2 4A4A     		ldr	r2, .L31+12
 194 00f4 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 195 00f6 1268     		ldr	r2, [r2, #0]
 196 00f8 805C     		ldrb	r0, [r0, r2]	@ zero_extendqisi2
 197              		.loc 1 214 0
 198 00fa 494A     		ldr	r2, .L31+16
 199 00fc 1070     		strb	r0, [r2, #0]
 216:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_TRANSMIT_DATA;
 200              		.loc 1 216 0
 201 00fe 963A     		subs	r2, r2, #150
 202 0100 0620     		movs	r0, #6
 203 0102 1070     		strb	r0, [r2, #0]
 204 0104 E632     		adds	r2, r2, #230
 205 0106 1170     		strb	r1, [r2, #0]
 217:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_mstrWrBufIndex++;
 206              		.loc 1 217 0
 207 0108 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 208 010a 0132     		adds	r2, r2, #1
 209 010c D2B2     		uxtb	r2, r2
 210              	.LVL8:
 211 010e 43E0     		b	.L25
 212              	.LVL9:
 213              	.L16:
 218:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }
 219:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* End of buffer: complete writing */
 220:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         else if(I2CHW_CHECK_NO_STOP(I2CHW_mstrControl))
 214              		.loc 1 220 0
 215 0110 454B     		ldr	r3, .L31+24
 216 0112 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 217 0114 13F00205 		ands	r5, r3, #2
 218 0118 04D0     		beq	.L17
 221:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 222:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* Set WRITE complete and Master HALTED */
 223:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_mstrStatus |= (I2CHW_MSTAT_XFER_HALT |
 219              		.loc 1 223 0
 220 011a 444B     		ldr	r3, .L31+28
 221 011c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 222 011e 42F00A02 		orr	r2, r2, #10
 223              	.LVL10:
 224 0122 44E0     		b	.L26
 225              	.LVL11:
 226              	.L17:
 224:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                             I2CHW_MSTAT_WR_CMPLT);
 225:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 226:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_state = I2CHW_SM_MSTR_HALT;    /* Expect RESTART */
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 9


 227:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_DisableInt();
 228:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }
 229:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         else  /* Do normal STOP */
 230:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 231:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_Workaround();          /* Workaround: empty function */
 227              		.loc 1 231 0
 228 0124 FFF7FEFF 		bl	I2CHW_Workaround
 232:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_ENABLE_INT_ON_STOP;    /* Enable interrupt on STOP, to catch it *
 229              		.loc 1 232 0
 230 0128 424B     		ldr	r3, .L31+36
 231 012a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 232 012c 42F02002 		orr	r2, r2, #32
 233 0130 1A70     		strb	r2, [r3, #0]
 233:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_GENERATE_STOP;
 234              		.loc 1 233 0
 235 0132 5222     		movs	r2, #82
 236 0134 183B     		subs	r3, r3, #24
 237 0136 1A70     		strb	r2, [r3, #0]
 238 0138 3F4A     		ldr	r2, .L31+40
 239 013a 1570     		strb	r5, [r2, #0]
 240 013c 49E0     		b	.L3
 241              	.L15:
 234:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }
 235:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 236:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     /* Last byte NAKed: end writing */
 237:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     else if(I2CHW_CHECK_NO_STOP(I2CHW_mstrControl))
 242              		.loc 1 237 0
 243 013e 3A4B     		ldr	r3, .L31+24
 244 0140 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 245 0142 13F00201 		ands	r1, r3, #2
 246 0146 394B     		ldr	r3, .L31+28
 247 0148 03D0     		beq	.L18
 238:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {
 239:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* Set WRITE complete, SHORT transfer and Master HALTED */
 240:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_mstrStatus |= (I2CHW_MSTAT_ERR_XFER       |
 248              		.loc 1 240 0
 249 014a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 250 014c 42F09A02 		orr	r2, r2, #154
 251              	.LVL12:
 252 0150 2DE0     		b	.L26
 253              	.LVL13:
 254              	.L18:
 241:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                         I2CHW_MSTAT_ERR_SHORT_XFER |
 242:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                         I2CHW_MSTAT_XFER_HALT      |
 243:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                         I2CHW_MSTAT_WR_CMPLT);
 244:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 245:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_state = I2CHW_SM_MSTR_HALT;    /* Expect RESTART */
 246:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_DisableInt();
 247:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 248:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     else  /* Do normal STOP */
 249:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {
 250:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_ENABLE_INT_ON_STOP;    /* Enable interrupt on STOP, to catch it */
 255              		.loc 1 250 0
 256 0152 384A     		ldr	r2, .L31+36
 257 0154 1078     		ldrb	r0, [r2, #0]	@ zero_extendqisi2
 258 0156 40F02000 		orr	r0, r0, #32
 259 015a 1070     		strb	r0, [r2, #0]
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 10


 251:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_GENERATE_STOP;
 260              		.loc 1 251 0
 261 015c 183A     		subs	r2, r2, #24
 262 015e 5220     		movs	r0, #82
 263 0160 1070     		strb	r0, [r2, #0]
 264 0162 E632     		adds	r2, r2, #230
 265 0164 1170     		strb	r1, [r2, #0]
 252:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 253:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* Set SHORT and ERR transfer */
 254:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_mstrStatus |= (I2CHW_MSTAT_ERR_SHORT_XFER |
 266              		.loc 1 254 0
 267 0166 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 268 0168 42F09002 		orr	r2, r2, #144
 269              	.LVL14:
 270 016c 14E0     		b	.L25
 271              	.LVL15:
 272              	.L6:
 255:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                         I2CHW_MSTAT_ERR_XFER);
 256:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 257:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     
 258:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     break;
 259:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 260:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 case I2CHW_SM_MSTR_RD_DATA:
 261:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 262:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     I2CHW_mstrRdBufPtr[I2CHW_mstrRdBufIndex] = I2CHW_DATA_REG;
 273              		.loc 1 262 0
 274 016e 334B     		ldr	r3, .L31+44
 275 0170 334A     		ldr	r2, .L31+48
 276 0172 2B48     		ldr	r0, .L31+16
 277 0174 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 278 0176 1268     		ldr	r2, [r2, #0]
 279 0178 0078     		ldrb	r0, [r0, #0]	@ zero_extendqisi2
 280 017a 8854     		strb	r0, [r1, r2]
 263:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     I2CHW_mstrRdBufIndex++;
 281              		.loc 1 263 0
 282 017c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 283 017e 0132     		adds	r2, r2, #1
 284 0180 D2B2     		uxtb	r2, r2
 285              	.LVL16:
 286 0182 1A70     		strb	r2, [r3, #0]
 264:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 265:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     /* Check if end of buffer */
 266:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     if(I2CHW_mstrRdBufIndex < I2CHW_mstrRdBufSize)
 287              		.loc 1 266 0
 288 0184 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 289              	.LVL17:
 290 0186 2F4B     		ldr	r3, .L31+52
 291 0188 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 292 018a 9A42     		cmp	r2, r3
 293 018c 06D2     		bcs	.L19
 267:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {
 268:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_ACK_AND_RECEIVE;       /* ACK and receive byte */
 294              		.loc 1 268 0
 295 018e 284B     		ldr	r3, .L31+32
 296 0190 0222     		movs	r2, #2
 297 0192 1A70     		strb	r2, [r3, #0]
 298 0194 023A     		subs	r2, r2, #2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 11


 299              	.L28:
 300 0196 E633     		adds	r3, r3, #230
 301              	.LVL18:
 302              	.L25:
 303 0198 1A70     		strb	r2, [r3, #0]
 304              	.LVL19:
 305 019a 1AE0     		b	.L3
 306              	.L19:
 269:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 270:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     /* End of buffer: complete reading */
 271:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     else if(I2CHW_CHECK_NO_STOP(I2CHW_mstrControl))
 307              		.loc 1 271 0
 308 019c 224B     		ldr	r3, .L31+24
 309 019e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 310 01a0 13F00201 		ands	r1, r3, #2
 311 01a4 0BD0     		beq	.L20
 272:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {                        
 273:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* Set READ complete and Master HALTED */
 274:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_mstrStatus |= (I2CHW_MSTAT_XFER_HALT |
 312              		.loc 1 274 0
 313 01a6 214B     		ldr	r3, .L31+28
 314 01a8 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 315 01aa 42F00902 		orr	r2, r2, #9
 316              	.LVL20:
 317              	.L26:
 318 01ae 1A70     		strb	r2, [r3, #0]
 275:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                         I2CHW_MSTAT_RD_CMPLT);
 276:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         
 277:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_state = I2CHW_SM_MSTR_HALT;    /* Expect RESTART */
 319              		.loc 1 277 0
 320 01b0 184B     		ldr	r3, .L31+4
 321 01b2 6022     		movs	r2, #96
 322              	.LVL21:
 323              	.L29:
 324 01b4 1A70     		strb	r2, [r3, #0]
 278:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_DisableInt();
 325              		.loc 1 278 0
 326 01b6 5F3A     		subs	r2, r2, #95
 327              	.L27:
 328 01b8 234B     		ldr	r3, .L31+56
 329 01ba 1A60     		str	r2, [r3, #0]
 330 01bc 09E0     		b	.L3
 331              	.LVL22:
 332              	.L20:
 279:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 280:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     else
 281:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {
 282:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_ENABLE_INT_ON_STOP;
 333              		.loc 1 282 0
 334 01be 1D4B     		ldr	r3, .L31+36
 335 01c0 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 336 01c2 42F02002 		orr	r2, r2, #32
 337 01c6 1A70     		strb	r2, [r3, #0]
 283:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_NAK_AND_RECEIVE;       /* NACK and TRY to generate STOP */
 338              		.loc 1 283 0
 339 01c8 1222     		movs	r2, #18
 340 01ca 183B     		subs	r3, r3, #24
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 12


 341 01cc 1A70     		strb	r2, [r3, #0]
 342 01ce 1A4A     		ldr	r2, .L31+40
 343 01d0 1170     		strb	r1, [r2, #0]
 344              	.LVL23:
 345              	.L3:
 284:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 285:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     break;
 286:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 287:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 default: /* This is an invalid state and should not occur */
 288:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 289:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     #if(I2CHW_TIMEOUT_ENABLED)
 290:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* Exit from interrupt to take a chance for timeout timer handle this case 
 291:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_DisableInt();
 292:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_ClearPendingInt();
 293:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     #else
 294:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* Block execution flow: unexpected condition */
 295:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         CYASSERT(0u != 0u);
 296:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     #endif /* (I2CHW_TIMEOUT_ENABLED) */
 297:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 298:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     break;
 299:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 }
 300:.\Generated_Source\PSoC5/I2CHW_INT.c ****             }
 301:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 302:.\Generated_Source\PSoC5/I2CHW_INT.c ****             /* Catches the Stop: end of transaction */
 303:.\Generated_Source\PSoC5/I2CHW_INT.c ****             if(I2CHW_CHECK_STOP_STS(tmpCsr))
 346              		.loc 1 303 0
 347 01d2 14F0200F 		tst	r4, #32
 348 01d6 19D0     		beq	.L24
 304:.\Generated_Source\PSoC5/I2CHW_INT.c ****             {
 305:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 I2CHW_mstrStatus |= I2CHW_GET_MSTAT_CMPLT;
 349              		.loc 1 305 0
 350 01d8 144A     		ldr	r2, .L31+28
 351 01da 0E4B     		ldr	r3, .L31+4
 352 01dc 1078     		ldrb	r0, [r2, #0]	@ zero_extendqisi2
 353              	.LVL24:
 354 01de 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 355 01e0 01F00801 		and	r1, r1, #8
 356 01e4 0029     		cmp	r1, #0
 357 01e6 14BF     		ite	ne
 358 01e8 0121     		movne	r1, #1
 359 01ea 0221     		moveq	r1, #2
 360 01ec 0143     		orrs	r1, r1, r0
 361              	.LVL25:
 362 01ee 1170     		strb	r1, [r2, #0]
 306:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 307:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 I2CHW_DISABLE_INT_ON_STOP;
 363              		.loc 1 307 0
 364 01f0 104A     		ldr	r2, .L31+36
 365 01f2 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 366              	.LVL26:
 367 01f4 01F0DF01 		and	r1, r1, #223
 368 01f8 1170     		strb	r1, [r2, #0]
 308:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 I2CHW_state = I2CHW_SM_IDLE;
 369              		.loc 1 308 0
 370 01fa 1022     		movs	r2, #16
 371 01fc 1A70     		strb	r2, [r3, #0]
 372 01fe 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 13


 373              	.LVL27:
 374              	.L2:
 309:.\Generated_Source\PSoC5/I2CHW_INT.c ****             }
 310:.\Generated_Source\PSoC5/I2CHW_INT.c ****         #endif /* (I2CHW_MODE_MASTER_ENABLED) */
 311:.\Generated_Source\PSoC5/I2CHW_INT.c ****     }
 312:.\Generated_Source\PSoC5/I2CHW_INT.c ****     else if(I2CHW_CHECK_SM_SLAVE)
 375              		.loc 1 312 0
 376 0200 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 377 0202 12F0100F 		tst	r2, #16
 378 0206 01D1     		bne	.L24
 313:.\Generated_Source\PSoC5/I2CHW_INT.c ****     {
 314:.\Generated_Source\PSoC5/I2CHW_INT.c ****         #if(I2CHW_MODE_SLAVE_ENABLED)
 315:.\Generated_Source\PSoC5/I2CHW_INT.c ****             
 316:.\Generated_Source\PSoC5/I2CHW_INT.c ****             if((I2CHW_CHECK_STOP_STS(tmpCsr)) || /* Stop || Restart */
 317:.\Generated_Source\PSoC5/I2CHW_INT.c ****                (I2CHW_CHECK_BYTE_COMPLETE(tmpCsr) && I2CHW_CHECK_ADDRESS_STS(tmpCsr)))
 318:.\Generated_Source\PSoC5/I2CHW_INT.c ****             {
 319:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 /* Catch end of master write transcation: use interrupt on Stop */
 320:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 /* The STOP bit history on address phase does not have correct state */
 321:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 if(I2CHW_SM_SL_WR_DATA == I2CHW_state)
 322:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 {
 323:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     I2CHW_DISABLE_INT_ON_STOP;
 324:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 325:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     I2CHW_slStatus &= ((uint8) ~I2CHW_SSTAT_WR_BUSY);
 326:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     I2CHW_slStatus |= ((uint8)  I2CHW_SSTAT_WR_CMPLT);
 327:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 328:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     I2CHW_state = I2CHW_SM_IDLE;
 329:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 }
 330:.\Generated_Source\PSoC5/I2CHW_INT.c ****             }
 331:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 332:.\Generated_Source\PSoC5/I2CHW_INT.c ****             if(I2CHW_CHECK_BYTE_COMPLETE(tmpCsr))
 333:.\Generated_Source\PSoC5/I2CHW_INT.c ****             {
 334:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 /* The address only issued after Start or ReStart: so check address
 335:.\Generated_Source\PSoC5/I2CHW_INT.c ****                    to catch this events:
 336:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     FF : sets Addr phase with byte_complete interrupt trigger.
 337:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     UDB: sets Addr phase immediately after Start or ReStart. */
 338:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 if(I2CHW_CHECK_ADDRESS_STS(tmpCsr))
 339:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 {
 340:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     /* Check for software address detection */
 341:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     #if(I2CHW_SW_ADRR_DECODE)
 342:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         tmp8 = I2CHW_GET_SLAVE_ADDR(I2CHW_DATA_REG);
 343:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 344:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         if(tmp8 == I2CHW_slAddress)   /* Check for address match */
 345:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 346:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             if(0u != (I2CHW_DATA_REG & I2CHW_READ_FLAG))
 347:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             {
 348:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 /* Place code to prepare read buffer here                  */
 349:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 /* `#START I2CHW_SW_PREPARE_READ_BUF_interrupt` */
 350:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 351:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 /* `#END` */
 352:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 353:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 /* Prepare next opeation to read, get data and place in data regist
 354:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 if(I2CHW_slRdBufIndex < I2CHW_slRdBufSize)
 355:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 {
 356:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     /* Load first data byte from array */
 357:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     I2CHW_DATA_REG = I2CHW_slRdBufPtr[I2CHW_slRdBufIndex];
 358:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     I2CHW_ACK_AND_TRANSMIT;
 359:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     I2CHW_slRdBufIndex++;
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 14


 360:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 361:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     I2CHW_slStatus |= I2CHW_SSTAT_RD_BUSY;
 362:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 }
 363:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 else    /* Overflow: provide 0xFF on the bus */
 364:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 {
 365:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     I2CHW_DATA_REG = I2CHW_OVERFLOW_RETURN;
 366:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     I2CHW_ACK_AND_TRANSMIT;
 367:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 368:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                     I2CHW_slStatus  |= (I2CHW_SSTAT_RD_BUSY |
 369:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                                    I2CHW_SSTAT_RD_ERR_OVFL);
 370:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 }
 371:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 372:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_state = I2CHW_SM_SL_RD_DATA;
 373:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             }
 374:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             else  /* Write transaction: receive 1st byte */
 375:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             {
 376:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_ACK_AND_RECEIVE;
 377:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_state = I2CHW_SM_SL_WR_DATA;
 378:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 379:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_slStatus |= I2CHW_SSTAT_WR_BUSY;
 380:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_ENABLE_INT_ON_STOP;
 381:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             }
 382:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }    
 383:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         else
 384:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 385:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /*     Place code to compare for additional address here    */
 386:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* `#START I2CHW_SW_ADDR_COMPARE_interruptStart` */
 387:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 388:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* `#END` */
 389:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             
 390:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_NAK_AND_RECEIVE;   /* NACK address */
 391:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 392:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* Place code to end of condition for NACK generation here */
 393:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* `#START I2CHW_SW_ADDR_COMPARE_interruptEnd`  */
 394:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 395:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* `#END` */
 396:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }
 397:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         
 398:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     #else /* (I2CHW_HW_ADRR_DECODE) */
 399:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         
 400:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         if(0u != (I2CHW_DATA_REG & I2CHW_READ_FLAG))
 401:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 402:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* Place code to prepare read buffer here                  */
 403:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* `#START I2CHW_HW_PREPARE_READ_BUF_interrupt` */
 404:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 405:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* `#END` */
 406:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 407:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             /* Prepare next opeation to read, get data and place in data register *
 408:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             if(I2CHW_slRdBufIndex < I2CHW_slRdBufSize)
 409:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             {
 410:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 /* Load first data byte from array */
 411:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_DATA_REG = I2CHW_slRdBufPtr[I2CHW_slRdBufIndex];
 412:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_ACK_AND_TRANSMIT;
 413:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_slRdBufIndex++;
 414:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 415:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_slStatus |= I2CHW_SSTAT_RD_BUSY;
 416:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             }
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 15


 417:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             else    /* Overflow: provide 0xFF on the bus */
 418:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             {
 419:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_DATA_REG = I2CHW_OVERFLOW_RETURN;
 420:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_ACK_AND_TRANSMIT;
 421:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 422:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                 I2CHW_slStatus  |= (I2CHW_SSTAT_RD_BUSY |
 423:.\Generated_Source\PSoC5/I2CHW_INT.c ****                                                                I2CHW_SSTAT_RD_ERR_OVFL);
 424:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             }
 425:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 426:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_state = I2CHW_SM_SL_RD_DATA;
 427:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }
 428:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         else  /* Write transaction: receive 1st byte */
 429:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 430:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_ACK_AND_RECEIVE;
 431:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_state = I2CHW_SM_SL_WR_DATA;
 432:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 433:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_slStatus |= I2CHW_SSTAT_WR_BUSY;
 434:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_ENABLE_INT_ON_STOP;
 435:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }
 436:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         
 437:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     #endif /* (I2CHW_SW_ADRR_DECODE) */
 438:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 }
 439:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 /* Data states */
 440:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 /* Data master writes into slave */
 441:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 else if(I2CHW_state == I2CHW_SM_SL_WR_DATA)
 442:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 {
 443:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     if(I2CHW_slWrBufIndex < I2CHW_slWrBufSize)
 444:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {
 445:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         tmp8 = I2CHW_DATA_REG;
 446:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_ACK_AND_RECEIVE;
 447:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_slWrBufPtr[I2CHW_slWrBufIndex] = tmp8;
 448:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_slWrBufIndex++;
 449:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 450:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     else  /* of array: complete write, send NACK */
 451:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {
 452:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_NAK_AND_RECEIVE;
 453:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 454:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_slStatus |= I2CHW_SSTAT_WR_ERR_OVFL;
 455:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 456:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 }
 457:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 /* Data master reads from slave */
 458:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 else if(I2CHW_state == I2CHW_SM_SL_RD_DATA)
 459:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 {
 460:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     if(I2CHW_CHECK_DATA_ACK(tmpCsr))
 461:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {
 462:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         if(I2CHW_slRdBufIndex < I2CHW_slRdBufSize)
 463:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 464:.\Generated_Source\PSoC5/I2CHW_INT.c ****                              /* Get data from array */
 465:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_DATA_REG = I2CHW_slRdBufPtr[I2CHW_slRdBufIndex];
 466:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_TRANSMIT_DATA;
 467:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_slRdBufIndex++;
 468:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }
 469:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         else   /* Overflow: provide 0xFF on the bus */
 470:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         {
 471:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_DATA_REG = I2CHW_OVERFLOW_RETURN;
 472:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_TRANSMIT_DATA;
 473:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 16


 474:.\Generated_Source\PSoC5/I2CHW_INT.c ****                             I2CHW_slStatus |= I2CHW_SSTAT_RD_ERR_OVFL;
 475:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         }
 476:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 477:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     else  /* Last byte was NACKed: read complete */
 478:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     {
 479:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* Only NACK appears on the bus */
 480:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_DATA_REG = I2CHW_OVERFLOW_RETURN;
 481:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_NAK_AND_TRANSMIT;
 482:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 483:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_slStatus &= ((uint8) ~I2CHW_SSTAT_RD_BUSY);
 484:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_slStatus |= ((uint8)  I2CHW_SSTAT_RD_CMPLT);
 485:.\Generated_Source\PSoC5/I2CHW_INT.c **** 
 486:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_state = I2CHW_SM_IDLE;
 487:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     }
 488:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 }
 489:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 else
 490:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 {
 491:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     #if(I2CHW_TIMEOUT_ENABLED)
 492:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* Exit from interrupt to take a chance for timeout timer handle this case 
 493:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_DisableInt();
 494:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         I2CHW_ClearPendingInt();
 495:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     #else
 496:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         /* Block execution flow: unexpected condition */
 497:.\Generated_Source\PSoC5/I2CHW_INT.c ****                         CYASSERT(0u != 0u);
 498:.\Generated_Source\PSoC5/I2CHW_INT.c ****                     #endif /* (I2CHW_TIMEOUT_ENABLED) */
 499:.\Generated_Source\PSoC5/I2CHW_INT.c ****                 }
 500:.\Generated_Source\PSoC5/I2CHW_INT.c ****             }
 501:.\Generated_Source\PSoC5/I2CHW_INT.c ****         #endif /* (I2CHW_MODE_SLAVE_ENABLED) */
 502:.\Generated_Source\PSoC5/I2CHW_INT.c ****     }
 503:.\Generated_Source\PSoC5/I2CHW_INT.c ****     else
 504:.\Generated_Source\PSoC5/I2CHW_INT.c ****     {
 505:.\Generated_Source\PSoC5/I2CHW_INT.c ****         /* The FSM skips master and slave processing: return to IDLE */
 506:.\Generated_Source\PSoC5/I2CHW_INT.c ****         I2CHW_state = I2CHW_SM_IDLE;
 379              		.loc 1 506 0
 380 0208 1022     		movs	r2, #16
 381 020a 1A70     		strb	r2, [r3, #0]
 382              	.LVL28:
 383              	.L24:
 384 020c 38BD     		pop	{r3, r4, r5, pc}
 385              	.L32:
 386 020e 00BF     		.align	2
 387              	.L31:
 388 0210 68640040 		.word	1073767528
 389 0214 00000000 		.word	I2CHW_state
 390 0218 00000000 		.word	I2CHW_mstrWrBufSize
 391 021c 00000000 		.word	I2CHW_mstrWrBufPtr
 392 0220 06650040 		.word	1073767686
 393 0224 00000000 		.word	I2CHW_mstrWrBufIndex
 394 0228 00000000 		.word	I2CHW_mstrControl
 395 022c 00000000 		.word	I2CHW_mstrStatus
 396 0230 70640040 		.word	1073767536
 397 0234 88640040 		.word	1073767560
 398 0238 56650040 		.word	1073767766
 399 023c 00000000 		.word	I2CHW_mstrRdBufIndex
 400 0240 00000000 		.word	I2CHW_mstrRdBufPtr
 401 0244 00000000 		.word	I2CHW_mstrRdBufSize
 402 0248 80E100E0 		.word	-536813184
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 17


 403              		.cfi_endproc
 404              	.LFE0:
 405              		.size	I2CHW_ISR, .-I2CHW_ISR
 406              		.text
 407              	.Letext0:
 408              		.section	.debug_loc,"",%progbits
 409              	.Ldebug_loc0:
 410              	.LLST0:
 411 0000 00000000 		.4byte	.LFB0
 412 0004 02000000 		.4byte	.LCFI0
 413 0008 0100     		.2byte	0x1
 414 000a 5D       		.byte	0x5d
 415 000b 02000000 		.4byte	.LCFI0
 416 000f 4C020000 		.4byte	.LFE0
 417 0013 0200     		.2byte	0x2
 418 0015 7D       		.byte	0x7d
 419 0016 10       		.sleb128 16
 420 0017 00000000 		.4byte	0x0
 421 001b 00000000 		.4byte	0x0
 422              	.LLST1:
 423 001f 16000000 		.4byte	.LVL0
 424 0023 00020000 		.4byte	.LVL27
 425 0027 0100     		.2byte	0x1
 426 0029 54       		.byte	0x54
 427 002a 0C020000 		.4byte	.LVL28
 428 002e 4C020000 		.4byte	.LFE0
 429 0032 0100     		.2byte	0x1
 430 0034 54       		.byte	0x54
 431 0035 00000000 		.4byte	0x0
 432 0039 00000000 		.4byte	0x0
 433              		.file 2 ".\\Generated_Source\\PSoC5\\/I2CHW_PVT.h"
 434              		.file 3 ".\\Generated_Source\\PSoC5\\/cytypes.h"
 435              		.section	.debug_info
 436 0000 38010000 		.4byte	0x138
 437 0004 0200     		.2byte	0x2
 438 0006 00000000 		.4byte	.Ldebug_abbrev0
 439 000a 04       		.byte	0x4
 440 000b 01       		.uleb128 0x1
 441 000c 43010000 		.4byte	.LASF21
 442 0010 01       		.byte	0x1
 443 0011 C8000000 		.4byte	.LASF22
 444 0015 76000000 		.4byte	.LASF23
 445 0019 00000000 		.4byte	0x0
 446 001d 00000000 		.4byte	0x0
 447 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 448 0025 00000000 		.4byte	.Ldebug_line0
 449 0029 02       		.uleb128 0x2
 450 002a 01       		.byte	0x1
 451 002b 06       		.byte	0x6
 452 002c 62010000 		.4byte	.LASF0
 453 0030 02       		.uleb128 0x2
 454 0031 01       		.byte	0x1
 455 0032 08       		.byte	0x8
 456 0033 04010000 		.4byte	.LASF1
 457 0037 02       		.uleb128 0x2
 458 0038 02       		.byte	0x2
 459 0039 05       		.byte	0x5
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 18


 460 003a 89010000 		.4byte	.LASF2
 461 003e 02       		.uleb128 0x2
 462 003f 02       		.byte	0x2
 463 0040 07       		.byte	0x7
 464 0041 0E000000 		.4byte	.LASF3
 465 0045 02       		.uleb128 0x2
 466 0046 04       		.byte	0x4
 467 0047 05       		.byte	0x5
 468 0048 3A010000 		.4byte	.LASF4
 469 004c 02       		.uleb128 0x2
 470 004d 04       		.byte	0x4
 471 004e 07       		.byte	0x7
 472 004f 64000000 		.4byte	.LASF5
 473 0053 02       		.uleb128 0x2
 474 0054 08       		.byte	0x8
 475 0055 05       		.byte	0x5
 476 0056 00000000 		.4byte	.LASF6
 477 005a 02       		.uleb128 0x2
 478 005b 08       		.byte	0x8
 479 005c 07       		.byte	0x7
 480 005d ED000000 		.4byte	.LASF7
 481 0061 03       		.uleb128 0x3
 482 0062 04       		.byte	0x4
 483 0063 05       		.byte	0x5
 484 0064 696E7400 		.ascii	"int\000"
 485 0068 02       		.uleb128 0x2
 486 0069 04       		.byte	0x4
 487 006a 07       		.byte	0x7
 488 006b 21000000 		.4byte	.LASF8
 489 006f 04       		.uleb128 0x4
 490 0070 5E000000 		.4byte	.LASF24
 491 0074 03       		.byte	0x3
 492 0075 4C       		.byte	0x4c
 493 0076 30000000 		.4byte	0x30
 494 007a 02       		.uleb128 0x2
 495 007b 04       		.byte	0x4
 496 007c 04       		.byte	0x4
 497 007d 83010000 		.4byte	.LASF9
 498 0081 02       		.uleb128 0x2
 499 0082 08       		.byte	0x8
 500 0083 04       		.byte	0x4
 501 0084 33010000 		.4byte	.LASF10
 502 0088 02       		.uleb128 0x2
 503 0089 01       		.byte	0x1
 504 008a 08       		.byte	0x8
 505 008b 1C010000 		.4byte	.LASF11
 506 008f 05       		.uleb128 0x5
 507 0090 6F000000 		.4byte	0x6f
 508 0094 06       		.uleb128 0x6
 509 0095 04       		.byte	0x4
 510 0096 07       		.byte	0x7
 511 0097 07       		.uleb128 0x7
 512 0098 01       		.byte	0x1
 513 0099 12010000 		.4byte	.LASF25
 514 009d 01       		.byte	0x1
 515 009e 2E       		.byte	0x2e
 516 009f 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 19


 517 00a0 00000000 		.4byte	.LFB0
 518 00a4 4C020000 		.4byte	.LFE0
 519 00a8 00000000 		.4byte	.LLST0
 520 00ac C0000000 		.4byte	0xc0
 521 00b0 08       		.uleb128 0x8
 522 00b1 BC010000 		.4byte	.LASF26
 523 00b5 01       		.byte	0x1
 524 00b6 34       		.byte	0x34
 525 00b7 6F000000 		.4byte	0x6f
 526 00bb 1F000000 		.4byte	.LLST1
 527 00bf 00       		.byte	0x0
 528 00c0 09       		.uleb128 0x9
 529 00c1 3F000000 		.4byte	.LASF12
 530 00c5 02       		.byte	0x2
 531 00c6 23       		.byte	0x23
 532 00c7 8F000000 		.4byte	0x8f
 533 00cb 01       		.byte	0x1
 534 00cc 01       		.byte	0x1
 535 00cd 09       		.uleb128 0x9
 536 00ce 2E000000 		.4byte	.LASF13
 537 00d2 02       		.byte	0x2
 538 00d3 27       		.byte	0x27
 539 00d4 8F000000 		.4byte	0x8f
 540 00d8 01       		.byte	0x1
 541 00d9 01       		.byte	0x1
 542 00da 09       		.uleb128 0x9
 543 00db 21010000 		.4byte	.LASF14
 544 00df 02       		.byte	0x2
 545 00e0 28       		.byte	0x28
 546 00e1 8F000000 		.4byte	0x8f
 547 00e5 01       		.byte	0x1
 548 00e6 01       		.byte	0x1
 549 00e7 09       		.uleb128 0x9
 550 00e8 4B000000 		.4byte	.LASF15
 551 00ec 02       		.byte	0x2
 552 00ed 2B       		.byte	0x2b
 553 00ee F4000000 		.4byte	0xf4
 554 00f2 01       		.byte	0x1
 555 00f3 01       		.byte	0x1
 556 00f4 0A       		.uleb128 0xa
 557 00f5 04       		.byte	0x4
 558 00f6 8F000000 		.4byte	0x8f
 559 00fa 09       		.uleb128 0x9
 560 00fb 93010000 		.4byte	.LASF16
 561 00ff 02       		.byte	0x2
 562 0100 2C       		.byte	0x2c
 563 0101 8F000000 		.4byte	0x8f
 564 0105 01       		.byte	0x1
 565 0106 01       		.byte	0x1
 566 0107 09       		.uleb128 0x9
 567 0108 A7010000 		.4byte	.LASF17
 568 010c 02       		.byte	0x2
 569 010d 2D       		.byte	0x2d
 570 010e 8F000000 		.4byte	0x8f
 571 0112 01       		.byte	0x1
 572 0113 01       		.byte	0x1
 573 0114 09       		.uleb128 0x9
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 20


 574 0115 4F010000 		.4byte	.LASF18
 575 0119 02       		.byte	0x2
 576 011a 30       		.byte	0x30
 577 011b F4000000 		.4byte	0xf4
 578 011f 01       		.byte	0x1
 579 0120 01       		.byte	0x1
 580 0121 09       		.uleb128 0x9
 581 0122 B4000000 		.4byte	.LASF19
 582 0126 02       		.byte	0x2
 583 0127 31       		.byte	0x31
 584 0128 8F000000 		.4byte	0x8f
 585 012c 01       		.byte	0x1
 586 012d 01       		.byte	0x1
 587 012e 09       		.uleb128 0x9
 588 012f 6E010000 		.4byte	.LASF20
 589 0133 02       		.byte	0x2
 590 0134 32       		.byte	0x32
 591 0135 8F000000 		.4byte	0x8f
 592 0139 01       		.byte	0x1
 593 013a 01       		.byte	0x1
 594 013b 00       		.byte	0x0
 595              		.section	.debug_abbrev
 596 0000 01       		.uleb128 0x1
 597 0001 11       		.uleb128 0x11
 598 0002 01       		.byte	0x1
 599 0003 25       		.uleb128 0x25
 600 0004 0E       		.uleb128 0xe
 601 0005 13       		.uleb128 0x13
 602 0006 0B       		.uleb128 0xb
 603 0007 03       		.uleb128 0x3
 604 0008 0E       		.uleb128 0xe
 605 0009 1B       		.uleb128 0x1b
 606 000a 0E       		.uleb128 0xe
 607 000b 11       		.uleb128 0x11
 608 000c 01       		.uleb128 0x1
 609 000d 52       		.uleb128 0x52
 610 000e 01       		.uleb128 0x1
 611 000f 55       		.uleb128 0x55
 612 0010 06       		.uleb128 0x6
 613 0011 10       		.uleb128 0x10
 614 0012 06       		.uleb128 0x6
 615 0013 00       		.byte	0x0
 616 0014 00       		.byte	0x0
 617 0015 02       		.uleb128 0x2
 618 0016 24       		.uleb128 0x24
 619 0017 00       		.byte	0x0
 620 0018 0B       		.uleb128 0xb
 621 0019 0B       		.uleb128 0xb
 622 001a 3E       		.uleb128 0x3e
 623 001b 0B       		.uleb128 0xb
 624 001c 03       		.uleb128 0x3
 625 001d 0E       		.uleb128 0xe
 626 001e 00       		.byte	0x0
 627 001f 00       		.byte	0x0
 628 0020 03       		.uleb128 0x3
 629 0021 24       		.uleb128 0x24
 630 0022 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 21


 631 0023 0B       		.uleb128 0xb
 632 0024 0B       		.uleb128 0xb
 633 0025 3E       		.uleb128 0x3e
 634 0026 0B       		.uleb128 0xb
 635 0027 03       		.uleb128 0x3
 636 0028 08       		.uleb128 0x8
 637 0029 00       		.byte	0x0
 638 002a 00       		.byte	0x0
 639 002b 04       		.uleb128 0x4
 640 002c 16       		.uleb128 0x16
 641 002d 00       		.byte	0x0
 642 002e 03       		.uleb128 0x3
 643 002f 0E       		.uleb128 0xe
 644 0030 3A       		.uleb128 0x3a
 645 0031 0B       		.uleb128 0xb
 646 0032 3B       		.uleb128 0x3b
 647 0033 0B       		.uleb128 0xb
 648 0034 49       		.uleb128 0x49
 649 0035 13       		.uleb128 0x13
 650 0036 00       		.byte	0x0
 651 0037 00       		.byte	0x0
 652 0038 05       		.uleb128 0x5
 653 0039 35       		.uleb128 0x35
 654 003a 00       		.byte	0x0
 655 003b 49       		.uleb128 0x49
 656 003c 13       		.uleb128 0x13
 657 003d 00       		.byte	0x0
 658 003e 00       		.byte	0x0
 659 003f 06       		.uleb128 0x6
 660 0040 24       		.uleb128 0x24
 661 0041 00       		.byte	0x0
 662 0042 0B       		.uleb128 0xb
 663 0043 0B       		.uleb128 0xb
 664 0044 3E       		.uleb128 0x3e
 665 0045 0B       		.uleb128 0xb
 666 0046 00       		.byte	0x0
 667 0047 00       		.byte	0x0
 668 0048 07       		.uleb128 0x7
 669 0049 2E       		.uleb128 0x2e
 670 004a 01       		.byte	0x1
 671 004b 3F       		.uleb128 0x3f
 672 004c 0C       		.uleb128 0xc
 673 004d 03       		.uleb128 0x3
 674 004e 0E       		.uleb128 0xe
 675 004f 3A       		.uleb128 0x3a
 676 0050 0B       		.uleb128 0xb
 677 0051 3B       		.uleb128 0x3b
 678 0052 0B       		.uleb128 0xb
 679 0053 27       		.uleb128 0x27
 680 0054 0C       		.uleb128 0xc
 681 0055 11       		.uleb128 0x11
 682 0056 01       		.uleb128 0x1
 683 0057 12       		.uleb128 0x12
 684 0058 01       		.uleb128 0x1
 685 0059 40       		.uleb128 0x40
 686 005a 06       		.uleb128 0x6
 687 005b 01       		.uleb128 0x1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 22


 688 005c 13       		.uleb128 0x13
 689 005d 00       		.byte	0x0
 690 005e 00       		.byte	0x0
 691 005f 08       		.uleb128 0x8
 692 0060 34       		.uleb128 0x34
 693 0061 00       		.byte	0x0
 694 0062 03       		.uleb128 0x3
 695 0063 0E       		.uleb128 0xe
 696 0064 3A       		.uleb128 0x3a
 697 0065 0B       		.uleb128 0xb
 698 0066 3B       		.uleb128 0x3b
 699 0067 0B       		.uleb128 0xb
 700 0068 49       		.uleb128 0x49
 701 0069 13       		.uleb128 0x13
 702 006a 02       		.uleb128 0x2
 703 006b 06       		.uleb128 0x6
 704 006c 00       		.byte	0x0
 705 006d 00       		.byte	0x0
 706 006e 09       		.uleb128 0x9
 707 006f 34       		.uleb128 0x34
 708 0070 00       		.byte	0x0
 709 0071 03       		.uleb128 0x3
 710 0072 0E       		.uleb128 0xe
 711 0073 3A       		.uleb128 0x3a
 712 0074 0B       		.uleb128 0xb
 713 0075 3B       		.uleb128 0x3b
 714 0076 0B       		.uleb128 0xb
 715 0077 49       		.uleb128 0x49
 716 0078 13       		.uleb128 0x13
 717 0079 3F       		.uleb128 0x3f
 718 007a 0C       		.uleb128 0xc
 719 007b 3C       		.uleb128 0x3c
 720 007c 0C       		.uleb128 0xc
 721 007d 00       		.byte	0x0
 722 007e 00       		.byte	0x0
 723 007f 0A       		.uleb128 0xa
 724 0080 0F       		.uleb128 0xf
 725 0081 00       		.byte	0x0
 726 0082 0B       		.uleb128 0xb
 727 0083 0B       		.uleb128 0xb
 728 0084 49       		.uleb128 0x49
 729 0085 13       		.uleb128 0x13
 730 0086 00       		.byte	0x0
 731 0087 00       		.byte	0x0
 732 0088 00       		.byte	0x0
 733              		.section	.debug_pubnames,"",%progbits
 734 0000 1C000000 		.4byte	0x1c
 735 0004 0200     		.2byte	0x2
 736 0006 00000000 		.4byte	.Ldebug_info0
 737 000a 3C010000 		.4byte	0x13c
 738 000e 97000000 		.4byte	0x97
 739 0012 49324348 		.ascii	"I2CHW_ISR\000"
 739      575F4953 
 739      5200
 740 001c 00000000 		.4byte	0x0
 741              		.section	.debug_aranges,"",%progbits
 742 0000 1C000000 		.4byte	0x1c
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 23


 743 0004 0200     		.2byte	0x2
 744 0006 00000000 		.4byte	.Ldebug_info0
 745 000a 04       		.byte	0x4
 746 000b 00       		.byte	0x0
 747 000c 0000     		.2byte	0x0
 748 000e 0000     		.2byte	0x0
 749 0010 00000000 		.4byte	.LFB0
 750 0014 4C020000 		.4byte	.LFE0-.LFB0
 751 0018 00000000 		.4byte	0x0
 752 001c 00000000 		.4byte	0x0
 753              		.section	.debug_ranges,"",%progbits
 754              	.Ldebug_ranges0:
 755 0000 00000000 		.4byte	.Ltext0
 756 0004 00000000 		.4byte	.Letext0
 757 0008 00000000 		.4byte	.LFB0
 758 000c 4C020000 		.4byte	.LFE0
 759 0010 00000000 		.4byte	0x0
 760 0014 00000000 		.4byte	0x0
 761              		.section	.debug_str,"MS",%progbits,1
 762              	.LASF6:
 763 0000 6C6F6E67 		.ascii	"long long int\000"
 763      206C6F6E 
 763      6720696E 
 763      7400
 764              	.LASF3:
 765 000e 73686F72 		.ascii	"short unsigned int\000"
 765      7420756E 
 765      7369676E 
 765      65642069 
 765      6E7400
 766              	.LASF8:
 767 0021 756E7369 		.ascii	"unsigned int\000"
 767      676E6564 
 767      20696E74 
 767      00
 768              	.LASF13:
 769 002e 49324348 		.ascii	"I2CHW_mstrStatus\000"
 769      575F6D73 
 769      74725374 
 769      61747573 
 769      00
 770              	.LASF12:
 771 003f 49324348 		.ascii	"I2CHW_state\000"
 771      575F7374 
 771      61746500 
 772              	.LASF15:
 773 004b 49324348 		.ascii	"I2CHW_mstrRdBufPtr\000"
 773      575F6D73 
 773      74725264 
 773      42756650 
 773      747200
 774              	.LASF24:
 775 005e 75696E74 		.ascii	"uint8\000"
 775      3800
 776              	.LASF5:
 777 0064 6C6F6E67 		.ascii	"long unsigned int\000"
 777      20756E73 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 24


 777      69676E65 
 777      6420696E 
 777      7400
 778              	.LASF23:
 779 0076 5C5C7073 		.ascii	"\\\\psf\\Home\\Desktop\\KitProg version 2_03\\KitPr"
 779      665C486F 
 779      6D655C44 
 779      65736B74 
 779      6F705C4B 
 780 00a3 6F675C4B 		.ascii	"og\\KitProg.cydsn\000"
 780      69745072 
 780      6F672E63 
 780      7964736E 
 780      00
 781              	.LASF19:
 782 00b4 49324348 		.ascii	"I2CHW_mstrWrBufSize\000"
 782      575F6D73 
 782      74725772 
 782      42756653 
 782      697A6500 
 783              	.LASF22:
 784 00c8 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\I2CHW_INT.c\000"
 784      6E657261 
 784      7465645F 
 784      536F7572 
 784      63655C50 
 785              	.LASF7:
 786 00ed 6C6F6E67 		.ascii	"long long unsigned int\000"
 786      206C6F6E 
 786      6720756E 
 786      7369676E 
 786      65642069 
 787              	.LASF1:
 788 0104 756E7369 		.ascii	"unsigned char\000"
 788      676E6564 
 788      20636861 
 788      7200
 789              	.LASF25:
 790 0112 49324348 		.ascii	"I2CHW_ISR\000"
 790      575F4953 
 790      5200
 791              	.LASF11:
 792 011c 63686172 		.ascii	"char\000"
 792      00
 793              	.LASF14:
 794 0121 49324348 		.ascii	"I2CHW_mstrControl\000"
 794      575F6D73 
 794      7472436F 
 794      6E74726F 
 794      6C00
 795              	.LASF10:
 796 0133 646F7562 		.ascii	"double\000"
 796      6C6500
 797              	.LASF4:
 798 013a 6C6F6E67 		.ascii	"long int\000"
 798      20696E74 
 798      00
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cch3Lwyk.s 			page 25


 799              	.LASF21:
 800 0143 474E5520 		.ascii	"GNU C 4.4.1\000"
 800      4320342E 
 800      342E3100 
 801              	.LASF18:
 802 014f 49324348 		.ascii	"I2CHW_mstrWrBufPtr\000"
 802      575F6D73 
 802      74725772 
 802      42756650 
 802      747200
 803              	.LASF0:
 804 0162 7369676E 		.ascii	"signed char\000"
 804      65642063 
 804      68617200 
 805              	.LASF20:
 806 016e 49324348 		.ascii	"I2CHW_mstrWrBufIndex\000"
 806      575F6D73 
 806      74725772 
 806      42756649 
 806      6E646578 
 807              	.LASF9:
 808 0183 666C6F61 		.ascii	"float\000"
 808      7400
 809              	.LASF2:
 810 0189 73686F72 		.ascii	"short int\000"
 810      7420696E 
 810      7400
 811              	.LASF16:
 812 0193 49324348 		.ascii	"I2CHW_mstrRdBufSize\000"
 812      575F6D73 
 812      74725264 
 812      42756653 
 812      697A6500 
 813              	.LASF17:
 814 01a7 49324348 		.ascii	"I2CHW_mstrRdBufIndex\000"
 814      575F6D73 
 814      74725264 
 814      42756649 
 814      6E646578 
 815              	.LASF26:
 816 01bc 746D7043 		.ascii	"tmpCsr\000"
 816      737200
 817              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
