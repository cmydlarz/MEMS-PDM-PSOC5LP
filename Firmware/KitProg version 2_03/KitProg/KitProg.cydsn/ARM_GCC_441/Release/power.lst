ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"power.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 21010000 		.text
  20      02006200 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.Convert_To_milliVolts,"ax",%progbits
  24              		.align	1
  25              		.global	Convert_To_milliVolts
  26              		.thumb
  27              		.thumb_func
  28              		.type	Convert_To_milliVolts, %function
  29              	Convert_To_milliVolts:
  30              	.LFB32:
  31              		.file 1 ".\\power.c"
   1:.\power.c     **** /*****************************************************************************
   2:.\power.c     **** * File Name: power.c
   3:.\power.c     **** * 
   4:.\power.c     **** * Version 2.03
   5:.\power.c     **** *
   6:.\power.c     **** * Description:
   7:.\power.c     **** *  This file provides the source code to handle the power routines for PSoC 5LP.
   8:.\power.c     **** *
   9:.\power.c     **** * Owner:
  10:.\power.c     **** *	Ranjith M, Applications Engineer (rnjt@cypress.com)
  11:.\power.c     **** *
  12:.\power.c     **** * Related Document:
  13:.\power.c     **** * 	001-85925 - CY8CKIT-042 PSoC 4 Pioneer Kit IROS
  14:.\power.c     **** *
  15:.\power.c     **** * Hardware Dependency:
  16:.\power.c     **** * 	CY8CKIT-042 (KitProg) 
  17:.\power.c     **** *
  18:.\power.c     **** * Code Tested With:
  19:.\power.c     **** * 	Creator 2.2
  20:.\power.c     **** *	GCC1 4.4.1
  21:.\power.c     **** *	CY8CKIT-042 Rev 1
  22:.\power.c     **** *
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 2


  23:.\power.c     **** ******************************************************************************
  24:.\power.c     **** * Copyright (2013), Cypress Semiconductor Corporation.
  25:.\power.c     **** ******************************************************************************
  26:.\power.c     **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  27:.\power.c     **** * protected by and subject to worldwide patent protection (United States and
  28:.\power.c     **** * foreign), United States copyright laws and international treaty provisions.
  29:.\power.c     **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  30:.\power.c     **** * license to copy, use, modify, create derivative works of, and compile the
  31:.\power.c     **** * Cypress Source Code and derivative works for the sole purpose of creating
  32:.\power.c     **** * custom software in support of licensee product to be used only in conjunction
  33:.\power.c     **** * with a Cypress integrated circuit as specified in the applicable agreement.
  34:.\power.c     **** * Any reproduction, modification, translation, compilation, or representation of
  35:.\power.c     **** * this software except as specified above is prohibited without the express
  36:.\power.c     **** * written permission of Cypress.
  37:.\power.c     **** *
  38:.\power.c     **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  39:.\power.c     **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  40:.\power.c     **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  41:.\power.c     **** * Cypress reserves the right to make changes without further notice to the
  42:.\power.c     **** * materials described herein. Cypress does not assume any liability arising out
  43:.\power.c     **** * of the application or use of any product or circuit described herein. Cypress
  44:.\power.c     **** * does not authorize its products for use as critical components in life-support
  45:.\power.c     **** * systems where a malfunction or failure may reasonably be expected to result in
  46:.\power.c     **** * significant injury to the user. The inclusion of Cypress' product in a life-
  47:.\power.c     **** * support systems application implies that the manufacturer assumes all risk of
  48:.\power.c     **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  49:.\power.c     **** * limited by and subject to the applicable Cypress software license agreement.
  50:.\power.c     **** *****************************************************************************/
  51:.\power.c     **** 
  52:.\power.c     **** #include "KitProg.h"
  53:.\power.c     **** 
  54:.\power.c     **** /*****************************************************************************
  55:.\power.c     **** * Local Function Prototypes
  56:.\power.c     **** *****************************************************************************/
  57:.\power.c     **** void VoltageMonitorInit(void);
  58:.\power.c     **** uint16 GetVoltage(void);
  59:.\power.c     **** void GetRange(void);
  60:.\power.c     **** uint16 Convert_To_milliVolts(uint16 counts);
  61:.\power.c     **** void SendPSoCToSleep(void);
  62:.\power.c     **** void ResumeFromSleep(void);
  63:.\power.c     **** void HandleUSBSuspend(void);
  64:.\power.c     **** 
  65:.\power.c     **** /*****************************************************************************
  66:.\power.c     **** * Global Variable Declarations
  67:.\power.c     **** *****************************************************************************/
  68:.\power.c     **** uint8 checkActivityFlag = FALSE;
  69:.\power.c     **** 
  70:.\power.c     **** /*****************************************************************************
  71:.\power.c     **** * Local Global Variable Declarations
  72:.\power.c     **** *****************************************************************************/
  73:.\power.c     **** uint8 range = RANGE_5V0;
  74:.\power.c     **** uint16 result = 0;
  75:.\power.c     **** /*******************************************************************************
  76:.\power.c     **** * Function Name: VoltageMonitorInit()
  77:.\power.c     **** ********************************************************************************
  78:.\power.c     **** * Summary:
  79:.\power.c     **** * Initialize the ADC for voltage monitoring.
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 3


  80:.\power.c     **** *
  81:.\power.c     **** * Parameters:
  82:.\power.c     **** *  void
  83:.\power.c     **** *
  84:.\power.c     **** * Return:
  85:.\power.c     **** *  void
  86:.\power.c     **** *
  87:.\power.c     **** *******************************************************************************/
  88:.\power.c     **** void VoltageMonitorInit(void)
  89:.\power.c     **** {
  90:.\power.c     **** 	ADC_Voltage_Target_Start();
  91:.\power.c     **** 	ADC_Voltage_Target_StartConvert();
  92:.\power.c     **** 	GetRange();
  93:.\power.c     **** }
  94:.\power.c     **** 
  95:.\power.c     **** /*******************************************************************************
  96:.\power.c     **** * Function Name: CalADC()
  97:.\power.c     **** ********************************************************************************
  98:.\power.c     **** * Summary:
  99:.\power.c     **** * Get the VDD Range.
 100:.\power.c     **** *
 101:.\power.c     **** * Parameters:
 102:.\power.c     **** *  void
 103:.\power.c     **** *
 104:.\power.c     **** * Return:
 105:.\power.c     **** *  void
 106:.\power.c     **** *
 107:.\power.c     **** *******************************************************************************/
 108:.\power.c     **** void GetRange(void)
 109:.\power.c     **** {
 110:.\power.c     **** 	/* Select the known voltage source VRef for the ADC */
 111:.\power.c     **** 	AMux_Select(0);
 112:.\power.c     **** 	
 113:.\power.c     **** 	/* Calculate the counts for the known voltage source */
 114:.\power.c     **** 	ADC_Voltage_Target_IsEndConversion(ADC_Voltage_Target_WAIT_FOR_RESULT);
 115:.\power.c     **** 	result = ADC_Voltage_Target_GetResult16();
 116:.\power.c     **** 	
 117:.\power.c     **** 	/* Determine the VDD range based on the count value for known input source */
 118:.\power.c     **** 	if(result < THRESHOLD)
 119:.\power.c     **** 	{
 120:.\power.c     **** 		range = RANGE_5V0;
 121:.\power.c     **** 	}
 122:.\power.c     **** 	else
 123:.\power.c     **** 	{
 124:.\power.c     **** 		range = RANGE_3V3;
 125:.\power.c     **** 	}
 126:.\power.c     **** }
 127:.\power.c     **** /*******************************************************************************
 128:.\power.c     **** * Function Name: GetVoltage()
 129:.\power.c     **** ********************************************************************************
 130:.\power.c     **** * Summary:
 131:.\power.c     **** * Calculates the VDD of the PSoC 4
 132:.\power.c     **** *
 133:.\power.c     **** * Parameters:
 134:.\power.c     **** *  void
 135:.\power.c     **** *
 136:.\power.c     **** * Return:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 4


 137:.\power.c     **** *  Voltage in millivolts.
 138:.\power.c     **** *
 139:.\power.c     **** *******************************************************************************/
 140:.\power.c     **** uint16 GetVoltage(void)
 141:.\power.c     **** {
 142:.\power.c     **** 	uint16 targetVoltage = ZERO;
 143:.\power.c     **** 	uint16 targetValue;	
 144:.\power.c     **** 	
 145:.\power.c     **** 	/* Seelct the Vtarget input */
 146:.\power.c     **** 	AMux_Select(1);
 147:.\power.c     **** 	
 148:.\power.c     **** 	/* Calculate the ADC input value */
 149:.\power.c     **** 	ADC_Voltage_Target_IsEndConversion(ADC_Voltage_Target_WAIT_FOR_RESULT);
 150:.\power.c     **** 	targetValue = ADC_Voltage_Target_GetResult16();
 151:.\power.c     **** 	
 152:.\power.c     **** 	/* Convert to milliVolts */
 153:.\power.c     **** 	targetVoltage = Convert_To_milliVolts(targetValue);
 154:.\power.c     **** 	
 155:.\power.c     **** 	/* Account for the resistive divider in the hardware used to sample 
 156:.\power.c     **** 	* the input voltage (1.5K + 3K) */
 157:.\power.c     **** 	targetVoltage = targetVoltage * 3;
 158:.\power.c     **** 	targetVoltage = targetVoltage/2;
 159:.\power.c     **** 	
 160:.\power.c     **** 	return(targetVoltage);
 161:.\power.c     **** }
 162:.\power.c     **** /*******************************************************************************
 163:.\power.c     **** * Function Name: Convert_To_milliVolts()
 164:.\power.c     **** ********************************************************************************
 165:.\power.c     **** * Summary:
 166:.\power.c     **** * Converts the ADC output counts to millivolts. Calcultaion is: 
 167:.\power.c     **** * mV = (counts*5000)/(2^12) or (counts*3300)/(2^12) depending on the voltage range.
 168:.\power.c     **** *
 169:.\power.c     **** * Parameters:
 170:.\power.c     **** *  counts: ADC 12-bit count value
 171:.\power.c     **** *
 172:.\power.c     **** * Return:
 173:.\power.c     **** *  Voltage in millivolts.
 174:.\power.c     **** *
 175:.\power.c     **** *******************************************************************************/
 176:.\power.c     **** uint16 Convert_To_milliVolts(uint16 counts)
 177:.\power.c     **** {
  32              		.loc 1 177 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37              	.LVL0:
 178:.\power.c     **** 	uint16 voltage = ZERO;
 179:.\power.c     **** 	uint32 intermediate = ZERO;
 180:.\power.c     **** 	
 181:.\power.c     **** 	/*Convert to millivolts based on the input voltage range */
 182:.\power.c     **** 	if(range == RANGE_5V0)
  38              		.loc 1 182 0
  39 0000 054B     		ldr	r3, .L6
  40 0002 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  41 0004 012B     		cmp	r3, #1
 183:.\power.c     **** 	{
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 5


 184:.\power.c     **** 		intermediate = counts * FIVE_VOLT_MULTIPLIER;
  42              		.loc 1 184 0
  43 0006 0CBF     		ite	eq
  44 0008 41F28833 		movweq	r3, #5000
 185:.\power.c     **** 	}
 186:.\power.c     **** 	else
 187:.\power.c     **** 	{
 188:.\power.c     **** 		intermediate = counts * THREE_VOLT_MULTIPLIER;
  45              		.loc 1 188 0
  46 000c 40F6E443 		movwne	r3, #3300
  47 0010 5843     		muls	r0, r3, r0
  48              	.LVL1:
  49 0012 000B     		lsrs	r0, r0, #12
  50              	.LVL2:
 189:.\power.c     **** 	}
 190:.\power.c     **** 	intermediate = intermediate/TWELVE_BIT_DIVIDER;
 191:.\power.c     **** 	
 192:.\power.c     **** 	/* Convert to 16-bit value */
 193:.\power.c     **** 	voltage = (uint16)intermediate;	
 194:.\power.c     **** 	
 195:.\power.c     **** 	return(voltage);
 196:.\power.c     **** }
  51              		.loc 1 196 0
  52 0014 80B2     		uxth	r0, r0
  53 0016 7047     		bx	lr
  54              	.L7:
  55              		.align	2
  56              	.L6:
  57 0018 00000000 		.word	.LANCHOR0
  58              		.cfi_endproc
  59              	.LFE32:
  60              		.size	Convert_To_milliVolts, .-Convert_To_milliVolts
  61              		.section	.text.ResumeFromSleep,"ax",%progbits
  62              		.align	1
  63              		.global	ResumeFromSleep
  64              		.thumb
  65              		.thumb_func
  66              		.type	ResumeFromSleep, %function
  67              	ResumeFromSleep:
  68              	.LFB35:
 197:.\power.c     **** /*******************************************************************************
 198:.\power.c     **** * Function Name: VoltageMonitorStop()
 199:.\power.c     **** ********************************************************************************
 200:.\power.c     **** * Summary:
 201:.\power.c     **** *  Stops the ADC component used for target voltage monitoring.
 202:.\power.c     **** *
 203:.\power.c     **** * Parameters:
 204:.\power.c     **** *  None
 205:.\power.c     **** *
 206:.\power.c     **** * Return:
 207:.\power.c     **** *  None
 208:.\power.c     **** *
 209:.\power.c     **** *******************************************************************************/
 210:.\power.c     **** void VoltageMonitorStop(void)
 211:.\power.c     **** {
 212:.\power.c     **** 	ADC_Voltage_Target_Sleep();
 213:.\power.c     **** }
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 6


 214:.\power.c     **** /*******************************************************************************
 215:.\power.c     **** * Function Name: SendPSoCToSleep()
 216:.\power.c     **** ********************************************************************************
 217:.\power.c     **** * Summary:
 218:.\power.c     **** *  Prepares the PSoC 5LP device for sleep and puts the device in low power mode.
 219:.\power.c     **** *
 220:.\power.c     **** * Parameters:
 221:.\power.c     **** *  None
 222:.\power.c     **** *
 223:.\power.c     **** * Return:
 224:.\power.c     **** *  None
 225:.\power.c     **** *
 226:.\power.c     **** *******************************************************************************/
 227:.\power.c     **** void SendPSoCToSleep(void)
 228:.\power.c     **** {
 229:.\power.c     **** 	Pin_StatusLED_Write(1);
 230:.\power.c     **** 	Timer_UsbSuspend_Stop();	
 231:.\power.c     **** 	UART_Bridge_Stop();
 232:.\power.c     ****     VoltageMonitorStop();
 233:.\power.c     **** 	SWDHalt();
 234:.\power.c     **** 	HostCommStop();
 235:.\power.c     **** 	I2CPullUpDisable();		
 236:.\power.c     **** 	CyPmSaveClocks();
 237:.\power.c     **** 	CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_PICU);	
 238:.\power.c     **** }
 239:.\power.c     **** /*******************************************************************************
 240:.\power.c     **** * Function Name: ResumeFromSleep()
 241:.\power.c     **** ********************************************************************************
 242:.\power.c     **** * Summary:
 243:.\power.c     **** *  Restores the configurations of PSoC 5LP after resuming from sleep.
 244:.\power.c     **** *
 245:.\power.c     **** * Parameters:
 246:.\power.c     **** *  None
 247:.\power.c     **** *
 248:.\power.c     **** * Return:
 249:.\power.c     **** *  None
 250:.\power.c     **** *
 251:.\power.c     **** *******************************************************************************/
 252:.\power.c     **** void ResumeFromSleep(void)
 253:.\power.c     **** {
  69              		.loc 1 253 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
 254:.\power.c     **** 	CyPmRestoreClocks();
  76              		.loc 1 254 0
  77              		.cfi_offset 14, -4
  78              		.cfi_offset 4, -8
  79 0002 FFF7FEFF 		bl	CyPmRestoreClocks
 255:.\power.c     **** 	ProgramInit();
  80              		.loc 1 255 0
  81 0006 FFF7FEFF 		bl	ProgramInit
 256:.\power.c     **** 	HostCommInit();
  82              		.loc 1 256 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 7


  83 000a FFF7FEFF 		bl	HostCommInit
 257:.\power.c     **** 	SWDInit();
  84              		.loc 1 257 0
  85 000e FFF7FEFF 		bl	SWDInit
 258:.\power.c     **** 	ADC_Voltage_Target_Wakeup();
  86              		.loc 1 258 0
  87 0012 FFF7FEFF 		bl	ADC_Voltage_Target_Wakeup
 259:.\power.c     **** 	ADC_Voltage_Target_StartConvert();
  88              		.loc 1 259 0
  89 0016 FFF7FEFF 		bl	ADC_Voltage_Target_StartConvert
 260:.\power.c     **** 	
 261:.\power.c     **** 	/* Initializes USB-UART interface */
 262:.\power.c     ****     USBUARTInit();
  90              		.loc 1 262 0
  91 001a FFF7FEFF 		bl	USBUARTInit
 263:.\power.c     **** 	
 264:.\power.c     **** 	/* Initializes the timer for handling the USBFS Suspend Activity */
 265:.\power.c     **** 	Timer_UsbSuspend_Start();
  92              		.loc 1 265 0
  93 001e FFF7FEFF 		bl	Timer_UsbSuspend_Start
 266:.\power.c     **** 	bUSBResetDetected = TRUE;
  94              		.loc 1 266 0
  95 0022 044B     		ldr	r3, .L10
  96 0024 0122     		movs	r2, #1
 267:.\power.c     **** 	Pin_StatusLED_Write(0);
  97              		.loc 1 267 0
  98 0026 0020     		movs	r0, #0
  99              		.loc 1 266 0
 100 0028 1A70     		strb	r2, [r3, #0]
 268:.\power.c     **** }
 101              		.loc 1 268 0
 102 002a BDE81040 		pop	{r4, lr}
 103              		.loc 1 267 0
 104 002e FFF7FEBF 		b	Pin_StatusLED_Write
 105              	.L11:
 106 0032 00BF     		.align	2
 107              	.L10:
 108 0034 00000000 		.word	bUSBResetDetected
 109              		.cfi_endproc
 110              	.LFE35:
 111              		.size	ResumeFromSleep, .-ResumeFromSleep
 112              		.section	.text.VoltageMonitorStop,"ax",%progbits
 113              		.align	1
 114              		.global	VoltageMonitorStop
 115              		.thumb
 116              		.thumb_func
 117              		.type	VoltageMonitorStop, %function
 118              	VoltageMonitorStop:
 119              	.LFB33:
 120              		.loc 1 211 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              		.loc 1 213 0
 126              		.loc 1 212 0
 127 0000 FFF7FEBF 		b	ADC_Voltage_Target_Sleep
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 8


 128              		.cfi_endproc
 129              	.LFE33:
 130              		.size	VoltageMonitorStop, .-VoltageMonitorStop
 131              		.section	.text.SendPSoCToSleep,"ax",%progbits
 132              		.align	1
 133              		.global	SendPSoCToSleep
 134              		.thumb
 135              		.thumb_func
 136              		.type	SendPSoCToSleep, %function
 137              	SendPSoCToSleep:
 138              	.LFB34:
 139              		.loc 1 228 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		.loc 1 229 0
 144 0000 0120     		movs	r0, #1
 145              		.loc 1 228 0
 146 0002 10B5     		push	{r4, lr}
 147              	.LCFI1:
 148              		.cfi_def_cfa_offset 8
 149              		.loc 1 229 0
 150              		.cfi_offset 14, -4
 151              		.cfi_offset 4, -8
 152 0004 FFF7FEFF 		bl	Pin_StatusLED_Write
 153              		.loc 1 230 0
 154 0008 FFF7FEFF 		bl	Timer_UsbSuspend_Stop
 155              		.loc 1 231 0
 156 000c FFF7FEFF 		bl	UART_Bridge_Stop
 157              		.loc 1 232 0
 158 0010 FFF7FEFF 		bl	VoltageMonitorStop
 159              		.loc 1 233 0
 160 0014 FFF7FEFF 		bl	SWDHalt
 161              		.loc 1 234 0
 162 0018 FFF7FEFF 		bl	HostCommStop
 163              		.loc 1 235 0
 164 001c FFF7FEFF 		bl	I2CPullUpDisable
 165              		.loc 1 236 0
 166 0020 FFF7FEFF 		bl	CyPmSaveClocks
 167              		.loc 1 237 0
 168 0024 0020     		movs	r0, #0
 169 0026 4021     		movs	r1, #64
 170              		.loc 1 238 0
 171 0028 BDE81040 		pop	{r4, lr}
 172              		.loc 1 237 0
 173 002c FFF7FEBF 		b	CyPmSleep
 174              		.cfi_endproc
 175              	.LFE34:
 176              		.size	SendPSoCToSleep, .-SendPSoCToSleep
 177              		.section	.text.HandleUSBSuspend,"ax",%progbits
 178              		.align	1
 179              		.global	HandleUSBSuspend
 180              		.thumb
 181              		.thumb_func
 182              		.type	HandleUSBSuspend, %function
 183              	HandleUSBSuspend:
 184              	.LFB36:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 9


 269:.\power.c     **** /*******************************************************************************
 270:.\power.c     **** * Function Name: HandleUSBSuspend()
 271:.\power.c     **** ********************************************************************************
 272:.\power.c     **** * Summary:
 273:.\power.c     **** * 	Handles the USB suspend Event
 274:.\power.c     **** *
 275:.\power.c     **** * Parameters:
 276:.\power.c     **** *  None
 277:.\power.c     **** *
 278:.\power.c     **** * Return:
 279:.\power.c     **** *  None
 280:.\power.c     **** *
 281:.\power.c     **** *******************************************************************************/
 282:.\power.c     **** void HandleUSBSuspend(void)
 283:.\power.c     **** {
 185              		.loc 1 283 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 08B5     		push	{r3, lr}
 190              	.LCFI2:
 191              		.cfi_def_cfa_offset 8
 284:.\power.c     **** 	if(checkActivityFlag == TRUE)
 192              		.loc 1 284 0
 193 0002 094B     		ldr	r3, .L21
 194              		.cfi_offset 14, -4
 195              		.cfi_offset 3, -8
 196 0004 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 197 0006 012B     		cmp	r3, #1
 198 0008 0DD1     		bne	.L19
 285:.\power.c     **** 	{	
 286:.\power.c     **** 		if(USBFS_CheckActivity() == 0)
 199              		.loc 1 286 0
 200 000a FFF7FEFF 		bl	USBFS_CheckActivity
 201 000e 38B9     		cbnz	r0, .L18
 287:.\power.c     **** 		{
 288:.\power.c     **** 
 289:.\power.c     **** 			USBFS_Suspend();
 202              		.loc 1 289 0
 203 0010 FFF7FEFF 		bl	USBFS_Suspend
 290:.\power.c     **** 			SendPSoCToSleep();
 204              		.loc 1 290 0
 205 0014 FFF7FEFF 		bl	SendPSoCToSleep
 291:.\power.c     **** 			ResumeFromSleep();
 206              		.loc 1 291 0
 207 0018 FFF7FEFF 		bl	ResumeFromSleep
 292:.\power.c     **** 			USBFS_Resume();
 208              		.loc 1 292 0
 209 001c FFF7FEFF 		bl	USBFS_Resume
 210              	.L18:
 293:.\power.c     **** 		}
 294:.\power.c     **** 		else
 295:.\power.c     **** 		{
 296:.\power.c     **** 			/* Do nothing */
 297:.\power.c     **** 		}
 298:.\power.c     **** 		checkActivityFlag = FALSE;
 211              		.loc 1 298 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 10


 212 0020 014B     		ldr	r3, .L21
 213 0022 0022     		movs	r2, #0
 214 0024 1A70     		strb	r2, [r3, #0]
 215              	.L19:
 216 0026 08BD     		pop	{r3, pc}
 217              	.L22:
 218              		.align	2
 219              	.L21:
 220 0028 00000000 		.word	.LANCHOR1
 221              		.cfi_endproc
 222              	.LFE36:
 223              		.size	HandleUSBSuspend, .-HandleUSBSuspend
 224              		.section	.text.GetVoltage,"ax",%progbits
 225              		.align	1
 226              		.global	GetVoltage
 227              		.thumb
 228              		.thumb_func
 229              		.type	GetVoltage, %function
 230              	GetVoltage:
 231              	.LFB31:
 232              		.loc 1 141 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI3:
 238              		.cfi_def_cfa_offset 8
 239              		.loc 1 146 0
 240 0002 0120     		movs	r0, #1
 241              		.cfi_offset 14, -4
 242              		.cfi_offset 3, -8
 243 0004 FFF7FEFF 		bl	AMux_Select
 244              		.loc 1 149 0
 245 0008 0020     		movs	r0, #0
 246 000a FFF7FEFF 		bl	ADC_Voltage_Target_IsEndConversion
 247              		.loc 1 150 0
 248 000e FFF7FEFF 		bl	ADC_Voltage_Target_GetResult16
 249              		.loc 1 153 0
 250 0012 80B2     		uxth	r0, r0
 251 0014 FFF7FEFF 		bl	Convert_To_milliVolts
 252              		.loc 1 157 0
 253 0018 00EB4000 		add	r0, r0, r0, lsl #1
 254 001c 80B2     		uxth	r0, r0
 255              	.LVL3:
 256              		.loc 1 161 0
 257 001e 4008     		lsrs	r0, r0, #1
 258              	.LVL4:
 259 0020 08BD     		pop	{r3, pc}
 260              		.cfi_endproc
 261              	.LFE31:
 262              		.size	GetVoltage, .-GetVoltage
 263              		.section	.text.GetRange,"ax",%progbits
 264              		.align	1
 265              		.global	GetRange
 266              		.thumb
 267              		.thumb_func
 268              		.type	GetRange, %function
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 11


 269              	GetRange:
 270              	.LFB30:
 271              		.loc 1 109 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275 0000 08B5     		push	{r3, lr}
 276              	.LCFI4:
 277              		.cfi_def_cfa_offset 8
 278              		.loc 1 111 0
 279 0002 0020     		movs	r0, #0
 280              		.cfi_offset 14, -4
 281              		.cfi_offset 3, -8
 282 0004 FFF7FEFF 		bl	AMux_Select
 283              		.loc 1 114 0
 284 0008 0020     		movs	r0, #0
 285 000a FFF7FEFF 		bl	ADC_Voltage_Target_IsEndConversion
 286              		.loc 1 115 0
 287 000e FFF7FEFF 		bl	ADC_Voltage_Target_GetResult16
 288 0012 064B     		ldr	r3, .L30
 289 0014 80B2     		uxth	r0, r0
 290              		.loc 1 118 0
 291 0016 B0F57A7F 		cmp	r0, #1000
 292              		.loc 1 115 0
 293 001a 5880     		strh	r0, [r3, #2]	@ movhi
 294 001c 044B     		ldr	r3, .L30+4
 295              		.loc 1 118 0
 296 001e 01D2     		bcs	.L26
 297              		.loc 1 120 0
 298 0020 0122     		movs	r2, #1
 299 0022 00E0     		b	.L29
 300              	.L26:
 301              		.loc 1 124 0
 302 0024 0022     		movs	r2, #0
 303              	.L29:
 304 0026 1A70     		strb	r2, [r3, #0]
 305 0028 08BD     		pop	{r3, pc}
 306              	.L31:
 307 002a 00BF     		.align	2
 308              	.L30:
 309 002c 00000000 		.word	.LANCHOR1
 310 0030 00000000 		.word	.LANCHOR0
 311              		.cfi_endproc
 312              	.LFE30:
 313              		.size	GetRange, .-GetRange
 314              		.section	.text.VoltageMonitorInit,"ax",%progbits
 315              		.align	1
 316              		.global	VoltageMonitorInit
 317              		.thumb
 318              		.thumb_func
 319              		.type	VoltageMonitorInit, %function
 320              	VoltageMonitorInit:
 321              	.LFB29:
 322              		.loc 1 89 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 12


 326 0000 10B5     		push	{r4, lr}
 327              	.LCFI5:
 328              		.cfi_def_cfa_offset 8
 329              		.loc 1 90 0
 330              		.cfi_offset 14, -4
 331              		.cfi_offset 4, -8
 332 0002 FFF7FEFF 		bl	ADC_Voltage_Target_Start
 333              		.loc 1 91 0
 334 0006 FFF7FEFF 		bl	ADC_Voltage_Target_StartConvert
 335              		.loc 1 93 0
 336 000a BDE81040 		pop	{r4, lr}
 337              		.loc 1 92 0
 338 000e FFF7FEBF 		b	GetRange
 339              		.cfi_endproc
 340              	.LFE29:
 341              		.size	VoltageMonitorInit, .-VoltageMonitorInit
 342              		.global	checkActivityFlag
 343              		.global	range
 344              		.global	result
 345              		.data
 346              		.set	.LANCHOR0,. + 0
 347              		.type	range, %object
 348              		.size	range, 1
 349              	range:
 350 0000 01       		.byte	1
 351              		.bss
 352              		.align	1
 353              		.set	.LANCHOR1,. + 0
 354              		.type	checkActivityFlag, %object
 355              		.size	checkActivityFlag, 1
 356              	checkActivityFlag:
 357 0000 00       		.space	1
 358 0001 00       		.space	1
 359              		.type	result, %object
 360              		.size	result, 2
 361              	result:
 362 0002 0000     		.space	2
 363              		.text
 364              	.Letext0:
 365              		.section	.debug_loc,"",%progbits
 366              	.Ldebug_loc0:
 367              	.LLST1:
 368 0000 00000000 		.4byte	.LVL0
 369 0004 12000000 		.4byte	.LVL1
 370 0008 0100     		.2byte	0x1
 371 000a 50       		.byte	0x50
 372 000b 00000000 		.4byte	0x0
 373 000f 00000000 		.4byte	0x0
 374              	.LLST2:
 375 0013 12000000 		.4byte	.LVL1
 376 0017 14000000 		.4byte	.LVL2
 377 001b 0100     		.2byte	0x1
 378 001d 50       		.byte	0x50
 379 001e 00000000 		.4byte	0x0
 380 0022 00000000 		.4byte	0x0
 381              	.LLST3:
 382 0026 00000000 		.4byte	.LFB35
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 13


 383 002a 02000000 		.4byte	.LCFI0
 384 002e 0100     		.2byte	0x1
 385 0030 5D       		.byte	0x5d
 386 0031 02000000 		.4byte	.LCFI0
 387 0035 38000000 		.4byte	.LFE35
 388 0039 0200     		.2byte	0x2
 389 003b 7D       		.byte	0x7d
 390 003c 08       		.sleb128 8
 391 003d 00000000 		.4byte	0x0
 392 0041 00000000 		.4byte	0x0
 393              	.LLST5:
 394 0045 00000000 		.4byte	.LFB34
 395 0049 04000000 		.4byte	.LCFI1
 396 004d 0100     		.2byte	0x1
 397 004f 5D       		.byte	0x5d
 398 0050 04000000 		.4byte	.LCFI1
 399 0054 30000000 		.4byte	.LFE34
 400 0058 0200     		.2byte	0x2
 401 005a 7D       		.byte	0x7d
 402 005b 08       		.sleb128 8
 403 005c 00000000 		.4byte	0x0
 404 0060 00000000 		.4byte	0x0
 405              	.LLST6:
 406 0064 00000000 		.4byte	.LFB36
 407 0068 02000000 		.4byte	.LCFI2
 408 006c 0100     		.2byte	0x1
 409 006e 5D       		.byte	0x5d
 410 006f 02000000 		.4byte	.LCFI2
 411 0073 2C000000 		.4byte	.LFE36
 412 0077 0200     		.2byte	0x2
 413 0079 7D       		.byte	0x7d
 414 007a 08       		.sleb128 8
 415 007b 00000000 		.4byte	0x0
 416 007f 00000000 		.4byte	0x0
 417              	.LLST7:
 418 0083 00000000 		.4byte	.LFB31
 419 0087 02000000 		.4byte	.LCFI3
 420 008b 0100     		.2byte	0x1
 421 008d 5D       		.byte	0x5d
 422 008e 02000000 		.4byte	.LCFI3
 423 0092 22000000 		.4byte	.LFE31
 424 0096 0200     		.2byte	0x2
 425 0098 7D       		.byte	0x7d
 426 0099 08       		.sleb128 8
 427 009a 00000000 		.4byte	0x0
 428 009e 00000000 		.4byte	0x0
 429              	.LLST8:
 430 00a2 1E000000 		.4byte	.LVL3
 431 00a6 20000000 		.4byte	.LVL4
 432 00aa 0100     		.2byte	0x1
 433 00ac 50       		.byte	0x50
 434 00ad 00000000 		.4byte	0x0
 435 00b1 00000000 		.4byte	0x0
 436              	.LLST9:
 437 00b5 00000000 		.4byte	.LFB30
 438 00b9 02000000 		.4byte	.LCFI4
 439 00bd 0100     		.2byte	0x1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 14


 440 00bf 5D       		.byte	0x5d
 441 00c0 02000000 		.4byte	.LCFI4
 442 00c4 34000000 		.4byte	.LFE30
 443 00c8 0200     		.2byte	0x2
 444 00ca 7D       		.byte	0x7d
 445 00cb 08       		.sleb128 8
 446 00cc 00000000 		.4byte	0x0
 447 00d0 00000000 		.4byte	0x0
 448              	.LLST10:
 449 00d4 00000000 		.4byte	.LFB29
 450 00d8 02000000 		.4byte	.LCFI5
 451 00dc 0100     		.2byte	0x1
 452 00de 5D       		.byte	0x5d
 453 00df 02000000 		.4byte	.LCFI5
 454 00e3 12000000 		.4byte	.LFE29
 455 00e7 0200     		.2byte	0x2
 456 00e9 7D       		.byte	0x7d
 457 00ea 08       		.sleb128 8
 458 00eb 00000000 		.4byte	0x0
 459 00ef 00000000 		.4byte	0x0
 460              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 461              		.file 3 "./Generated_Source/PSoC5/core_cm3.h"
 462              		.file 4 ".\\/power.h"
 463              		.section	.debug_info
 464 0000 FA010000 		.4byte	0x1fa
 465 0004 0200     		.2byte	0x2
 466 0006 00000000 		.4byte	.Ldebug_abbrev0
 467 000a 04       		.byte	0x4
 468 000b 01       		.uleb128 0x1
 469 000c 50010000 		.4byte	.LASF32
 470 0010 01       		.byte	0x1
 471 0011 55000000 		.4byte	.LASF33
 472 0015 86010000 		.4byte	.LASF34
 473 0019 00000000 		.4byte	0x0
 474 001d 00000000 		.4byte	0x0
 475 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 476 0025 00000000 		.4byte	.Ldebug_line0
 477 0029 02       		.uleb128 0x2
 478 002a 01       		.byte	0x1
 479 002b 06       		.byte	0x6
 480 002c 7A010000 		.4byte	.LASF0
 481 0030 02       		.uleb128 0x2
 482 0031 01       		.byte	0x1
 483 0032 08       		.byte	0x8
 484 0033 5F000000 		.4byte	.LASF1
 485 0037 02       		.uleb128 0x2
 486 0038 02       		.byte	0x2
 487 0039 05       		.byte	0x5
 488 003a 61010000 		.4byte	.LASF2
 489 003e 02       		.uleb128 0x2
 490 003f 02       		.byte	0x2
 491 0040 07       		.byte	0x7
 492 0041 7F000000 		.4byte	.LASF3
 493 0045 02       		.uleb128 0x2
 494 0046 04       		.byte	0x4
 495 0047 05       		.byte	0x5
 496 0048 71010000 		.4byte	.LASF4
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 15


 497 004c 02       		.uleb128 0x2
 498 004d 04       		.byte	0x4
 499 004e 07       		.byte	0x7
 500 004f 6D000000 		.4byte	.LASF5
 501 0053 02       		.uleb128 0x2
 502 0054 08       		.byte	0x8
 503 0055 05       		.byte	0x5
 504 0056 00000000 		.4byte	.LASF6
 505 005a 02       		.uleb128 0x2
 506 005b 08       		.byte	0x8
 507 005c 07       		.byte	0x7
 508 005d 0F010000 		.4byte	.LASF7
 509 0061 03       		.uleb128 0x3
 510 0062 04       		.byte	0x4
 511 0063 05       		.byte	0x5
 512 0064 696E7400 		.ascii	"int\000"
 513 0068 02       		.uleb128 0x2
 514 0069 04       		.byte	0x4
 515 006a 07       		.byte	0x7
 516 006b FB000000 		.4byte	.LASF8
 517 006f 04       		.uleb128 0x4
 518 0070 6B010000 		.4byte	.LASF9
 519 0074 02       		.byte	0x2
 520 0075 4C       		.byte	0x4c
 521 0076 30000000 		.4byte	0x30
 522 007a 04       		.uleb128 0x4
 523 007b ED000000 		.4byte	.LASF10
 524 007f 02       		.byte	0x2
 525 0080 4D       		.byte	0x4d
 526 0081 3E000000 		.4byte	0x3e
 527 0085 04       		.uleb128 0x4
 528 0086 F4000000 		.4byte	.LASF11
 529 008a 02       		.byte	0x2
 530 008b 4E       		.byte	0x4e
 531 008c 4C000000 		.4byte	0x4c
 532 0090 02       		.uleb128 0x2
 533 0091 04       		.byte	0x4
 534 0092 04       		.byte	0x4
 535 0093 4F000000 		.4byte	.LASF12
 536 0097 02       		.uleb128 0x2
 537 0098 08       		.byte	0x8
 538 0099 04       		.byte	0x4
 539 009a 2B000000 		.4byte	.LASF13
 540 009e 02       		.uleb128 0x2
 541 009f 01       		.byte	0x1
 542 00a0 08       		.byte	0x8
 543 00a1 5C010000 		.4byte	.LASF14
 544 00a5 05       		.uleb128 0x5
 545 00a6 6F000000 		.4byte	0x6f
 546 00aa 06       		.uleb128 0x6
 547 00ab 04       		.byte	0x4
 548 00ac 07       		.byte	0x7
 549 00ad 07       		.uleb128 0x7
 550 00ae 01       		.byte	0x1
 551 00af BB000000 		.4byte	.LASF19
 552 00b3 01       		.byte	0x1
 553 00b4 B0       		.byte	0xb0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 16


 554 00b5 01       		.byte	0x1
 555 00b6 7A000000 		.4byte	0x7a
 556 00ba 00000000 		.4byte	.LFB32
 557 00be 1C000000 		.4byte	.LFE32
 558 00c2 01       		.byte	0x1
 559 00c3 5D       		.byte	0x5d
 560 00c4 F2000000 		.4byte	0xf2
 561 00c8 08       		.uleb128 0x8
 562 00c9 08010000 		.4byte	.LASF35
 563 00cd 01       		.byte	0x1
 564 00ce B0       		.byte	0xb0
 565 00cf 7A000000 		.4byte	0x7a
 566 00d3 00000000 		.4byte	.LLST1
 567 00d7 09       		.uleb128 0x9
 568 00d8 92000000 		.4byte	.LASF23
 569 00dc 01       		.byte	0x1
 570 00dd B2       		.byte	0xb2
 571 00de 7A000000 		.4byte	0x7a
 572 00e2 0A       		.uleb128 0xa
 573 00e3 1E000000 		.4byte	.LASF21
 574 00e7 01       		.byte	0x1
 575 00e8 B3       		.byte	0xb3
 576 00e9 85000000 		.4byte	0x85
 577 00ed 13000000 		.4byte	.LLST2
 578 00f1 00       		.byte	0x0
 579 00f2 0B       		.uleb128 0xb
 580 00f3 01       		.byte	0x1
 581 00f4 0E000000 		.4byte	.LASF15
 582 00f8 01       		.byte	0x1
 583 00f9 FC       		.byte	0xfc
 584 00fa 01       		.byte	0x1
 585 00fb 00000000 		.4byte	.LFB35
 586 00ff 38000000 		.4byte	.LFE35
 587 0103 26000000 		.4byte	.LLST3
 588 0107 0C       		.uleb128 0xc
 589 0108 01       		.byte	0x1
 590 0109 DA000000 		.4byte	.LASF16
 591 010d 01       		.byte	0x1
 592 010e D2       		.byte	0xd2
 593 010f 01       		.byte	0x1
 594 0110 00000000 		.4byte	.LFB33
 595 0114 04000000 		.4byte	.LFE33
 596 0118 01       		.byte	0x1
 597 0119 5D       		.byte	0x5d
 598 011a 0B       		.uleb128 0xb
 599 011b 01       		.byte	0x1
 600 011c C4010000 		.4byte	.LASF17
 601 0120 01       		.byte	0x1
 602 0121 E3       		.byte	0xe3
 603 0122 01       		.byte	0x1
 604 0123 00000000 		.4byte	.LFB34
 605 0127 30000000 		.4byte	.LFE34
 606 012b 45000000 		.4byte	.LLST5
 607 012f 0D       		.uleb128 0xd
 608 0130 01       		.byte	0x1
 609 0131 2D010000 		.4byte	.LASF18
 610 0135 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 17


 611 0136 1A01     		.2byte	0x11a
 612 0138 01       		.byte	0x1
 613 0139 00000000 		.4byte	.LFB36
 614 013d 2C000000 		.4byte	.LFE36
 615 0141 64000000 		.4byte	.LLST6
 616 0145 0E       		.uleb128 0xe
 617 0146 01       		.byte	0x1
 618 0147 44000000 		.4byte	.LASF20
 619 014b 01       		.byte	0x1
 620 014c 8C       		.byte	0x8c
 621 014d 01       		.byte	0x1
 622 014e 7A000000 		.4byte	0x7a
 623 0152 00000000 		.4byte	.LFB31
 624 0156 22000000 		.4byte	.LFE31
 625 015a 83000000 		.4byte	.LLST7
 626 015e 7D010000 		.4byte	0x17d
 627 0162 0A       		.uleb128 0xa
 628 0163 AD000000 		.4byte	.LASF22
 629 0167 01       		.byte	0x1
 630 0168 8E       		.byte	0x8e
 631 0169 7A000000 		.4byte	0x7a
 632 016d A2000000 		.4byte	.LLST8
 633 0171 09       		.uleb128 0x9
 634 0172 E7010000 		.4byte	.LASF24
 635 0176 01       		.byte	0x1
 636 0177 8F       		.byte	0x8f
 637 0178 7A000000 		.4byte	0x7a
 638 017c 00       		.byte	0x0
 639 017d 0B       		.uleb128 0xb
 640 017e 01       		.byte	0x1
 641 017f D1000000 		.4byte	.LASF25
 642 0183 01       		.byte	0x1
 643 0184 6C       		.byte	0x6c
 644 0185 01       		.byte	0x1
 645 0186 00000000 		.4byte	.LFB30
 646 018a 34000000 		.4byte	.LFE30
 647 018e B5000000 		.4byte	.LLST9
 648 0192 0B       		.uleb128 0xb
 649 0193 01       		.byte	0x1
 650 0194 D4010000 		.4byte	.LASF26
 651 0198 01       		.byte	0x1
 652 0199 58       		.byte	0x58
 653 019a 01       		.byte	0x1
 654 019b 00000000 		.4byte	.LFB29
 655 019f 12000000 		.4byte	.LFE29
 656 01a3 D4000000 		.4byte	.LLST10
 657 01a7 0F       		.uleb128 0xf
 658 01a8 9A000000 		.4byte	.LASF27
 659 01ac 03       		.byte	0x3
 660 01ad CE06     		.2byte	0x6ce
 661 01af B5010000 		.4byte	0x1b5
 662 01b3 01       		.byte	0x1
 663 01b4 01       		.byte	0x1
 664 01b5 05       		.uleb128 0x5
 665 01b6 61000000 		.4byte	0x61
 666 01ba 10       		.uleb128 0x10
 667 01bb 3E010000 		.4byte	.LASF28
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 18


 668 01bf 01       		.byte	0x1
 669 01c0 44       		.byte	0x44
 670 01c1 6F000000 		.4byte	0x6f
 671 01c5 01       		.byte	0x1
 672 01c6 05       		.byte	0x5
 673 01c7 03       		.byte	0x3
 674 01c8 00000000 		.4byte	checkActivityFlag
 675 01cc 11       		.uleb128 0x11
 676 01cd 32000000 		.4byte	.LASF29
 677 01d1 04       		.byte	0x4
 678 01d2 4A       		.byte	0x4a
 679 01d3 A5000000 		.4byte	0xa5
 680 01d7 01       		.byte	0x1
 681 01d8 01       		.byte	0x1
 682 01d9 10       		.uleb128 0x10
 683 01da A7000000 		.4byte	.LASF30
 684 01de 01       		.byte	0x1
 685 01df 49       		.byte	0x49
 686 01e0 6F000000 		.4byte	0x6f
 687 01e4 01       		.byte	0x1
 688 01e5 05       		.byte	0x5
 689 01e6 03       		.byte	0x3
 690 01e7 00000000 		.4byte	range
 691 01eb 10       		.uleb128 0x10
 692 01ec 26010000 		.4byte	.LASF31
 693 01f0 01       		.byte	0x1
 694 01f1 4A       		.byte	0x4a
 695 01f2 7A000000 		.4byte	0x7a
 696 01f6 01       		.byte	0x1
 697 01f7 05       		.byte	0x5
 698 01f8 03       		.byte	0x3
 699 01f9 00000000 		.4byte	result
 700 01fd 00       		.byte	0x0
 701              		.section	.debug_abbrev
 702 0000 01       		.uleb128 0x1
 703 0001 11       		.uleb128 0x11
 704 0002 01       		.byte	0x1
 705 0003 25       		.uleb128 0x25
 706 0004 0E       		.uleb128 0xe
 707 0005 13       		.uleb128 0x13
 708 0006 0B       		.uleb128 0xb
 709 0007 03       		.uleb128 0x3
 710 0008 0E       		.uleb128 0xe
 711 0009 1B       		.uleb128 0x1b
 712 000a 0E       		.uleb128 0xe
 713 000b 11       		.uleb128 0x11
 714 000c 01       		.uleb128 0x1
 715 000d 52       		.uleb128 0x52
 716 000e 01       		.uleb128 0x1
 717 000f 55       		.uleb128 0x55
 718 0010 06       		.uleb128 0x6
 719 0011 10       		.uleb128 0x10
 720 0012 06       		.uleb128 0x6
 721 0013 00       		.byte	0x0
 722 0014 00       		.byte	0x0
 723 0015 02       		.uleb128 0x2
 724 0016 24       		.uleb128 0x24
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 19


 725 0017 00       		.byte	0x0
 726 0018 0B       		.uleb128 0xb
 727 0019 0B       		.uleb128 0xb
 728 001a 3E       		.uleb128 0x3e
 729 001b 0B       		.uleb128 0xb
 730 001c 03       		.uleb128 0x3
 731 001d 0E       		.uleb128 0xe
 732 001e 00       		.byte	0x0
 733 001f 00       		.byte	0x0
 734 0020 03       		.uleb128 0x3
 735 0021 24       		.uleb128 0x24
 736 0022 00       		.byte	0x0
 737 0023 0B       		.uleb128 0xb
 738 0024 0B       		.uleb128 0xb
 739 0025 3E       		.uleb128 0x3e
 740 0026 0B       		.uleb128 0xb
 741 0027 03       		.uleb128 0x3
 742 0028 08       		.uleb128 0x8
 743 0029 00       		.byte	0x0
 744 002a 00       		.byte	0x0
 745 002b 04       		.uleb128 0x4
 746 002c 16       		.uleb128 0x16
 747 002d 00       		.byte	0x0
 748 002e 03       		.uleb128 0x3
 749 002f 0E       		.uleb128 0xe
 750 0030 3A       		.uleb128 0x3a
 751 0031 0B       		.uleb128 0xb
 752 0032 3B       		.uleb128 0x3b
 753 0033 0B       		.uleb128 0xb
 754 0034 49       		.uleb128 0x49
 755 0035 13       		.uleb128 0x13
 756 0036 00       		.byte	0x0
 757 0037 00       		.byte	0x0
 758 0038 05       		.uleb128 0x5
 759 0039 35       		.uleb128 0x35
 760 003a 00       		.byte	0x0
 761 003b 49       		.uleb128 0x49
 762 003c 13       		.uleb128 0x13
 763 003d 00       		.byte	0x0
 764 003e 00       		.byte	0x0
 765 003f 06       		.uleb128 0x6
 766 0040 24       		.uleb128 0x24
 767 0041 00       		.byte	0x0
 768 0042 0B       		.uleb128 0xb
 769 0043 0B       		.uleb128 0xb
 770 0044 3E       		.uleb128 0x3e
 771 0045 0B       		.uleb128 0xb
 772 0046 00       		.byte	0x0
 773 0047 00       		.byte	0x0
 774 0048 07       		.uleb128 0x7
 775 0049 2E       		.uleb128 0x2e
 776 004a 01       		.byte	0x1
 777 004b 3F       		.uleb128 0x3f
 778 004c 0C       		.uleb128 0xc
 779 004d 03       		.uleb128 0x3
 780 004e 0E       		.uleb128 0xe
 781 004f 3A       		.uleb128 0x3a
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 20


 782 0050 0B       		.uleb128 0xb
 783 0051 3B       		.uleb128 0x3b
 784 0052 0B       		.uleb128 0xb
 785 0053 27       		.uleb128 0x27
 786 0054 0C       		.uleb128 0xc
 787 0055 49       		.uleb128 0x49
 788 0056 13       		.uleb128 0x13
 789 0057 11       		.uleb128 0x11
 790 0058 01       		.uleb128 0x1
 791 0059 12       		.uleb128 0x12
 792 005a 01       		.uleb128 0x1
 793 005b 40       		.uleb128 0x40
 794 005c 0A       		.uleb128 0xa
 795 005d 01       		.uleb128 0x1
 796 005e 13       		.uleb128 0x13
 797 005f 00       		.byte	0x0
 798 0060 00       		.byte	0x0
 799 0061 08       		.uleb128 0x8
 800 0062 05       		.uleb128 0x5
 801 0063 00       		.byte	0x0
 802 0064 03       		.uleb128 0x3
 803 0065 0E       		.uleb128 0xe
 804 0066 3A       		.uleb128 0x3a
 805 0067 0B       		.uleb128 0xb
 806 0068 3B       		.uleb128 0x3b
 807 0069 0B       		.uleb128 0xb
 808 006a 49       		.uleb128 0x49
 809 006b 13       		.uleb128 0x13
 810 006c 02       		.uleb128 0x2
 811 006d 06       		.uleb128 0x6
 812 006e 00       		.byte	0x0
 813 006f 00       		.byte	0x0
 814 0070 09       		.uleb128 0x9
 815 0071 34       		.uleb128 0x34
 816 0072 00       		.byte	0x0
 817 0073 03       		.uleb128 0x3
 818 0074 0E       		.uleb128 0xe
 819 0075 3A       		.uleb128 0x3a
 820 0076 0B       		.uleb128 0xb
 821 0077 3B       		.uleb128 0x3b
 822 0078 0B       		.uleb128 0xb
 823 0079 49       		.uleb128 0x49
 824 007a 13       		.uleb128 0x13
 825 007b 00       		.byte	0x0
 826 007c 00       		.byte	0x0
 827 007d 0A       		.uleb128 0xa
 828 007e 34       		.uleb128 0x34
 829 007f 00       		.byte	0x0
 830 0080 03       		.uleb128 0x3
 831 0081 0E       		.uleb128 0xe
 832 0082 3A       		.uleb128 0x3a
 833 0083 0B       		.uleb128 0xb
 834 0084 3B       		.uleb128 0x3b
 835 0085 0B       		.uleb128 0xb
 836 0086 49       		.uleb128 0x49
 837 0087 13       		.uleb128 0x13
 838 0088 02       		.uleb128 0x2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 21


 839 0089 06       		.uleb128 0x6
 840 008a 00       		.byte	0x0
 841 008b 00       		.byte	0x0
 842 008c 0B       		.uleb128 0xb
 843 008d 2E       		.uleb128 0x2e
 844 008e 00       		.byte	0x0
 845 008f 3F       		.uleb128 0x3f
 846 0090 0C       		.uleb128 0xc
 847 0091 03       		.uleb128 0x3
 848 0092 0E       		.uleb128 0xe
 849 0093 3A       		.uleb128 0x3a
 850 0094 0B       		.uleb128 0xb
 851 0095 3B       		.uleb128 0x3b
 852 0096 0B       		.uleb128 0xb
 853 0097 27       		.uleb128 0x27
 854 0098 0C       		.uleb128 0xc
 855 0099 11       		.uleb128 0x11
 856 009a 01       		.uleb128 0x1
 857 009b 12       		.uleb128 0x12
 858 009c 01       		.uleb128 0x1
 859 009d 40       		.uleb128 0x40
 860 009e 06       		.uleb128 0x6
 861 009f 00       		.byte	0x0
 862 00a0 00       		.byte	0x0
 863 00a1 0C       		.uleb128 0xc
 864 00a2 2E       		.uleb128 0x2e
 865 00a3 00       		.byte	0x0
 866 00a4 3F       		.uleb128 0x3f
 867 00a5 0C       		.uleb128 0xc
 868 00a6 03       		.uleb128 0x3
 869 00a7 0E       		.uleb128 0xe
 870 00a8 3A       		.uleb128 0x3a
 871 00a9 0B       		.uleb128 0xb
 872 00aa 3B       		.uleb128 0x3b
 873 00ab 0B       		.uleb128 0xb
 874 00ac 27       		.uleb128 0x27
 875 00ad 0C       		.uleb128 0xc
 876 00ae 11       		.uleb128 0x11
 877 00af 01       		.uleb128 0x1
 878 00b0 12       		.uleb128 0x12
 879 00b1 01       		.uleb128 0x1
 880 00b2 40       		.uleb128 0x40
 881 00b3 0A       		.uleb128 0xa
 882 00b4 00       		.byte	0x0
 883 00b5 00       		.byte	0x0
 884 00b6 0D       		.uleb128 0xd
 885 00b7 2E       		.uleb128 0x2e
 886 00b8 00       		.byte	0x0
 887 00b9 3F       		.uleb128 0x3f
 888 00ba 0C       		.uleb128 0xc
 889 00bb 03       		.uleb128 0x3
 890 00bc 0E       		.uleb128 0xe
 891 00bd 3A       		.uleb128 0x3a
 892 00be 0B       		.uleb128 0xb
 893 00bf 3B       		.uleb128 0x3b
 894 00c0 05       		.uleb128 0x5
 895 00c1 27       		.uleb128 0x27
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 22


 896 00c2 0C       		.uleb128 0xc
 897 00c3 11       		.uleb128 0x11
 898 00c4 01       		.uleb128 0x1
 899 00c5 12       		.uleb128 0x12
 900 00c6 01       		.uleb128 0x1
 901 00c7 40       		.uleb128 0x40
 902 00c8 06       		.uleb128 0x6
 903 00c9 00       		.byte	0x0
 904 00ca 00       		.byte	0x0
 905 00cb 0E       		.uleb128 0xe
 906 00cc 2E       		.uleb128 0x2e
 907 00cd 01       		.byte	0x1
 908 00ce 3F       		.uleb128 0x3f
 909 00cf 0C       		.uleb128 0xc
 910 00d0 03       		.uleb128 0x3
 911 00d1 0E       		.uleb128 0xe
 912 00d2 3A       		.uleb128 0x3a
 913 00d3 0B       		.uleb128 0xb
 914 00d4 3B       		.uleb128 0x3b
 915 00d5 0B       		.uleb128 0xb
 916 00d6 27       		.uleb128 0x27
 917 00d7 0C       		.uleb128 0xc
 918 00d8 49       		.uleb128 0x49
 919 00d9 13       		.uleb128 0x13
 920 00da 11       		.uleb128 0x11
 921 00db 01       		.uleb128 0x1
 922 00dc 12       		.uleb128 0x12
 923 00dd 01       		.uleb128 0x1
 924 00de 40       		.uleb128 0x40
 925 00df 06       		.uleb128 0x6
 926 00e0 01       		.uleb128 0x1
 927 00e1 13       		.uleb128 0x13
 928 00e2 00       		.byte	0x0
 929 00e3 00       		.byte	0x0
 930 00e4 0F       		.uleb128 0xf
 931 00e5 34       		.uleb128 0x34
 932 00e6 00       		.byte	0x0
 933 00e7 03       		.uleb128 0x3
 934 00e8 0E       		.uleb128 0xe
 935 00e9 3A       		.uleb128 0x3a
 936 00ea 0B       		.uleb128 0xb
 937 00eb 3B       		.uleb128 0x3b
 938 00ec 05       		.uleb128 0x5
 939 00ed 49       		.uleb128 0x49
 940 00ee 13       		.uleb128 0x13
 941 00ef 3F       		.uleb128 0x3f
 942 00f0 0C       		.uleb128 0xc
 943 00f1 3C       		.uleb128 0x3c
 944 00f2 0C       		.uleb128 0xc
 945 00f3 00       		.byte	0x0
 946 00f4 00       		.byte	0x0
 947 00f5 10       		.uleb128 0x10
 948 00f6 34       		.uleb128 0x34
 949 00f7 00       		.byte	0x0
 950 00f8 03       		.uleb128 0x3
 951 00f9 0E       		.uleb128 0xe
 952 00fa 3A       		.uleb128 0x3a
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 23


 953 00fb 0B       		.uleb128 0xb
 954 00fc 3B       		.uleb128 0x3b
 955 00fd 0B       		.uleb128 0xb
 956 00fe 49       		.uleb128 0x49
 957 00ff 13       		.uleb128 0x13
 958 0100 3F       		.uleb128 0x3f
 959 0101 0C       		.uleb128 0xc
 960 0102 02       		.uleb128 0x2
 961 0103 0A       		.uleb128 0xa
 962 0104 00       		.byte	0x0
 963 0105 00       		.byte	0x0
 964 0106 11       		.uleb128 0x11
 965 0107 34       		.uleb128 0x34
 966 0108 00       		.byte	0x0
 967 0109 03       		.uleb128 0x3
 968 010a 0E       		.uleb128 0xe
 969 010b 3A       		.uleb128 0x3a
 970 010c 0B       		.uleb128 0xb
 971 010d 3B       		.uleb128 0x3b
 972 010e 0B       		.uleb128 0xb
 973 010f 49       		.uleb128 0x49
 974 0110 13       		.uleb128 0x13
 975 0111 3F       		.uleb128 0x3f
 976 0112 0C       		.uleb128 0xc
 977 0113 3C       		.uleb128 0x3c
 978 0114 0C       		.uleb128 0xc
 979 0115 00       		.byte	0x0
 980 0116 00       		.byte	0x0
 981 0117 00       		.byte	0x0
 982              		.section	.debug_pubnames,"",%progbits
 983 0000 DA000000 		.4byte	0xda
 984 0004 0200     		.2byte	0x2
 985 0006 00000000 		.4byte	.Ldebug_info0
 986 000a FE010000 		.4byte	0x1fe
 987 000e AD000000 		.4byte	0xad
 988 0012 436F6E76 		.ascii	"Convert_To_milliVolts\000"
 988      6572745F 
 988      546F5F6D 
 988      696C6C69 
 988      566F6C74 
 989 0028 F2000000 		.4byte	0xf2
 990 002c 52657375 		.ascii	"ResumeFromSleep\000"
 990      6D654672 
 990      6F6D536C 
 990      65657000 
 991 003c 07010000 		.4byte	0x107
 992 0040 566F6C74 		.ascii	"VoltageMonitorStop\000"
 992      6167654D 
 992      6F6E6974 
 992      6F725374 
 992      6F7000
 993 0053 1A010000 		.4byte	0x11a
 994 0057 53656E64 		.ascii	"SendPSoCToSleep\000"
 994      50536F43 
 994      546F536C 
 994      65657000 
 995 0067 2F010000 		.4byte	0x12f
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 24


 996 006b 48616E64 		.ascii	"HandleUSBSuspend\000"
 996      6C655553 
 996      42537573 
 996      70656E64 
 996      00
 997 007c 45010000 		.4byte	0x145
 998 0080 47657456 		.ascii	"GetVoltage\000"
 998      6F6C7461 
 998      676500
 999 008b 7D010000 		.4byte	0x17d
 1000 008f 47657452 		.ascii	"GetRange\000"
 1000      616E6765 
 1000      00
 1001 0098 92010000 		.4byte	0x192
 1002 009c 566F6C74 		.ascii	"VoltageMonitorInit\000"
 1002      6167654D 
 1002      6F6E6974 
 1002      6F72496E 
 1002      697400
 1003 00af BA010000 		.4byte	0x1ba
 1004 00b3 63686563 		.ascii	"checkActivityFlag\000"
 1004      6B416374 
 1004      69766974 
 1004      79466C61 
 1004      6700
 1005 00c5 D9010000 		.4byte	0x1d9
 1006 00c9 72616E67 		.ascii	"range\000"
 1006      6500
 1007 00cf EB010000 		.4byte	0x1eb
 1008 00d3 72657375 		.ascii	"result\000"
 1008      6C7400
 1009 00da 00000000 		.4byte	0x0
 1010              		.section	.debug_aranges,"",%progbits
 1011 0000 54000000 		.4byte	0x54
 1012 0004 0200     		.2byte	0x2
 1013 0006 00000000 		.4byte	.Ldebug_info0
 1014 000a 04       		.byte	0x4
 1015 000b 00       		.byte	0x0
 1016 000c 0000     		.2byte	0x0
 1017 000e 0000     		.2byte	0x0
 1018 0010 00000000 		.4byte	.LFB32
 1019 0014 1C000000 		.4byte	.LFE32-.LFB32
 1020 0018 00000000 		.4byte	.LFB35
 1021 001c 38000000 		.4byte	.LFE35-.LFB35
 1022 0020 00000000 		.4byte	.LFB33
 1023 0024 04000000 		.4byte	.LFE33-.LFB33
 1024 0028 00000000 		.4byte	.LFB34
 1025 002c 30000000 		.4byte	.LFE34-.LFB34
 1026 0030 00000000 		.4byte	.LFB36
 1027 0034 2C000000 		.4byte	.LFE36-.LFB36
 1028 0038 00000000 		.4byte	.LFB31
 1029 003c 22000000 		.4byte	.LFE31-.LFB31
 1030 0040 00000000 		.4byte	.LFB30
 1031 0044 34000000 		.4byte	.LFE30-.LFB30
 1032 0048 00000000 		.4byte	.LFB29
 1033 004c 12000000 		.4byte	.LFE29-.LFB29
 1034 0050 00000000 		.4byte	0x0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 25


 1035 0054 00000000 		.4byte	0x0
 1036              		.section	.debug_ranges,"",%progbits
 1037              	.Ldebug_ranges0:
 1038 0000 00000000 		.4byte	.Ltext0
 1039 0004 00000000 		.4byte	.Letext0
 1040 0008 00000000 		.4byte	.LFB32
 1041 000c 1C000000 		.4byte	.LFE32
 1042 0010 00000000 		.4byte	.LFB35
 1043 0014 38000000 		.4byte	.LFE35
 1044 0018 00000000 		.4byte	.LFB33
 1045 001c 04000000 		.4byte	.LFE33
 1046 0020 00000000 		.4byte	.LFB34
 1047 0024 30000000 		.4byte	.LFE34
 1048 0028 00000000 		.4byte	.LFB36
 1049 002c 2C000000 		.4byte	.LFE36
 1050 0030 00000000 		.4byte	.LFB31
 1051 0034 22000000 		.4byte	.LFE31
 1052 0038 00000000 		.4byte	.LFB30
 1053 003c 34000000 		.4byte	.LFE30
 1054 0040 00000000 		.4byte	.LFB29
 1055 0044 12000000 		.4byte	.LFE29
 1056 0048 00000000 		.4byte	0x0
 1057 004c 00000000 		.4byte	0x0
 1058              		.section	.debug_str,"MS",%progbits,1
 1059              	.LASF6:
 1060 0000 6C6F6E67 		.ascii	"long long int\000"
 1060      206C6F6E 
 1060      6720696E 
 1060      7400
 1061              	.LASF15:
 1062 000e 52657375 		.ascii	"ResumeFromSleep\000"
 1062      6D654672 
 1062      6F6D536C 
 1062      65657000 
 1063              	.LASF21:
 1064 001e 696E7465 		.ascii	"intermediate\000"
 1064      726D6564 
 1064      69617465 
 1064      00
 1065              	.LASF13:
 1066 002b 646F7562 		.ascii	"double\000"
 1066      6C6500
 1067              	.LASF29:
 1068 0032 62555342 		.ascii	"bUSBResetDetected\000"
 1068      52657365 
 1068      74446574 
 1068      65637465 
 1068      6400
 1069              	.LASF20:
 1070 0044 47657456 		.ascii	"GetVoltage\000"
 1070      6F6C7461 
 1070      676500
 1071              	.LASF12:
 1072 004f 666C6F61 		.ascii	"float\000"
 1072      7400
 1073              	.LASF33:
 1074 0055 2E5C706F 		.ascii	".\\power.c\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 26


 1074      7765722E 
 1074      6300
 1075              	.LASF1:
 1076 005f 756E7369 		.ascii	"unsigned char\000"
 1076      676E6564 
 1076      20636861 
 1076      7200
 1077              	.LASF5:
 1078 006d 6C6F6E67 		.ascii	"long unsigned int\000"
 1078      20756E73 
 1078      69676E65 
 1078      6420696E 
 1078      7400
 1079              	.LASF3:
 1080 007f 73686F72 		.ascii	"short unsigned int\000"
 1080      7420756E 
 1080      7369676E 
 1080      65642069 
 1080      6E7400
 1081              	.LASF23:
 1082 0092 766F6C74 		.ascii	"voltage\000"
 1082      61676500 
 1083              	.LASF27:
 1084 009a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1084      52784275 
 1084      66666572 
 1084      00
 1085              	.LASF30:
 1086 00a7 72616E67 		.ascii	"range\000"
 1086      6500
 1087              	.LASF22:
 1088 00ad 74617267 		.ascii	"targetVoltage\000"
 1088      6574566F 
 1088      6C746167 
 1088      6500
 1089              	.LASF19:
 1090 00bb 436F6E76 		.ascii	"Convert_To_milliVolts\000"
 1090      6572745F 
 1090      546F5F6D 
 1090      696C6C69 
 1090      566F6C74 
 1091              	.LASF25:
 1092 00d1 47657452 		.ascii	"GetRange\000"
 1092      616E6765 
 1092      00
 1093              	.LASF16:
 1094 00da 566F6C74 		.ascii	"VoltageMonitorStop\000"
 1094      6167654D 
 1094      6F6E6974 
 1094      6F725374 
 1094      6F7000
 1095              	.LASF10:
 1096 00ed 75696E74 		.ascii	"uint16\000"
 1096      313600
 1097              	.LASF11:
 1098 00f4 75696E74 		.ascii	"uint32\000"
 1098      333200
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 27


 1099              	.LASF8:
 1100 00fb 756E7369 		.ascii	"unsigned int\000"
 1100      676E6564 
 1100      20696E74 
 1100      00
 1101              	.LASF35:
 1102 0108 636F756E 		.ascii	"counts\000"
 1102      747300
 1103              	.LASF7:
 1104 010f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1104      206C6F6E 
 1104      6720756E 
 1104      7369676E 
 1104      65642069 
 1105              	.LASF31:
 1106 0126 72657375 		.ascii	"result\000"
 1106      6C7400
 1107              	.LASF18:
 1108 012d 48616E64 		.ascii	"HandleUSBSuspend\000"
 1108      6C655553 
 1108      42537573 
 1108      70656E64 
 1108      00
 1109              	.LASF28:
 1110 013e 63686563 		.ascii	"checkActivityFlag\000"
 1110      6B416374 
 1110      69766974 
 1110      79466C61 
 1110      6700
 1111              	.LASF32:
 1112 0150 474E5520 		.ascii	"GNU C 4.4.1\000"
 1112      4320342E 
 1112      342E3100 
 1113              	.LASF14:
 1114 015c 63686172 		.ascii	"char\000"
 1114      00
 1115              	.LASF2:
 1116 0161 73686F72 		.ascii	"short int\000"
 1116      7420696E 
 1116      7400
 1117              	.LASF9:
 1118 016b 75696E74 		.ascii	"uint8\000"
 1118      3800
 1119              	.LASF4:
 1120 0171 6C6F6E67 		.ascii	"long int\000"
 1120      20696E74 
 1120      00
 1121              	.LASF0:
 1122 017a 7369676E 		.ascii	"signed char\000"
 1122      65642063 
 1122      68617200 
 1123              	.LASF34:
 1124 0186 5C5C7073 		.ascii	"\\\\psf\\Home\\Desktop\\KitProg version 2_03\\KitPr"
 1124      665C486F 
 1124      6D655C44 
 1124      65736B74 
 1124      6F705C4B 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccjJ9gio.s 			page 28


 1125 01b3 6F675C4B 		.ascii	"og\\KitProg.cydsn\000"
 1125      69745072 
 1125      6F672E63 
 1125      7964736E 
 1125      00
 1126              	.LASF17:
 1127 01c4 53656E64 		.ascii	"SendPSoCToSleep\000"
 1127      50536F43 
 1127      546F536C 
 1127      65657000 
 1128              	.LASF26:
 1129 01d4 566F6C74 		.ascii	"VoltageMonitorInit\000"
 1129      6167654D 
 1129      6F6E6974 
 1129      6F72496E 
 1129      697400
 1130              	.LASF24:
 1131 01e7 74617267 		.ascii	"targetValue\000"
 1131      65745661 
 1131      6C756500 
 1132              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
