ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"USBUART.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 C9000000 		.text
  20      02008200 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.USBUARTStart,"ax",%progbits
  24              		.align	1
  25              		.global	USBUARTStart
  26              		.thumb
  27              		.thumb_func
  28              		.type	USBUARTStart, %function
  29              	USBUARTStart:
  30              	.LFB31:
  31              		.file 1 ".\\USBUART.c"
   1:.\USBUART.c   **** /*****************************************************************************
   2:.\USBUART.c   **** * File Name: USBUART.c
   3:.\USBUART.c   **** * Version 2.03
   4:.\USBUART.c   **** *
   5:.\USBUART.c   **** * Description:
   6:.\USBUART.c   **** *  This file provides the source code to handle USBUART Bridge functionality
   7:.\USBUART.c   **** *
   8:.\USBUART.c   **** * Owner:
   9:.\USBUART.c   **** *	Sree Harsha Angara, Applications Engineer (sreh@cypress.com)
  10:.\USBUART.c   **** *
  11:.\USBUART.c   **** * Related Document:
  12:.\USBUART.c   **** * 	001-85925 CY8CKIT-042 IROS
  13:.\USBUART.c   **** *
  14:.\USBUART.c   **** * Hardware Dependency:
  15:.\USBUART.c   **** * 	CY8CKIT-042 REV 1 
  16:.\USBUART.c   **** *
  17:.\USBUART.c   **** * Code Tested With:
  18:.\USBUART.c   **** * 	Creator 2.2
  19:.\USBUART.c   **** *	GCC1 4.4.1
  20:.\USBUART.c   **** *	CY8CKIT-042 REV 1
  21:.\USBUART.c   **** * 
  22:.\USBUART.c   **** ******************************************************************************
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 2


  23:.\USBUART.c   **** * Copyright (2013), Cypress Semiconductor Corporation.
  24:.\USBUART.c   **** ******************************************************************************
  25:.\USBUART.c   **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  26:.\USBUART.c   **** * protected by and subject to worldwide patent protection (United States and
  27:.\USBUART.c   **** * foreign), United States copyright laws and international treaty provisions.
  28:.\USBUART.c   **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  29:.\USBUART.c   **** * license to copy, use, modify, create derivative works of, and compile the
  30:.\USBUART.c   **** * Cypress Source Code and derivative works for the sole purpose of creating
  31:.\USBUART.c   **** * custom software in support of licensee product to be used only in conjunction
  32:.\USBUART.c   **** * with a Cypress integrated circuit as specified in the applicable agreement.
  33:.\USBUART.c   **** * Any reproduction, modification, translation, compilation, or representation of
  34:.\USBUART.c   **** * this software except as specified above is prohibited without the express
  35:.\USBUART.c   **** * written permission of Cypress.
  36:.\USBUART.c   **** *
  37:.\USBUART.c   **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  38:.\USBUART.c   **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  39:.\USBUART.c   **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  40:.\USBUART.c   **** * Cypress reserves the right to make changes without further notice to the
  41:.\USBUART.c   **** * materials described herein. Cypress does not assume any liability arising out
  42:.\USBUART.c   **** * of the application or use of any product or circuit described herein. Cypress
  43:.\USBUART.c   **** * does not authorize its products for use as critical components in life-support
  44:.\USBUART.c   **** * systems where a malfunction or failure may reasonably be expected to result in
  45:.\USBUART.c   **** * significant injury to the user. The inclusion of Cypress' product in a life-
  46:.\USBUART.c   **** * support systems application implies that the manufacturer assumes all risk of
  47:.\USBUART.c   **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  48:.\USBUART.c   **** * limited by and subject to the applicable Cypress software license agreement.
  49:.\USBUART.c   **** *****************************************************************************/
  50:.\USBUART.c   **** 
  51:.\USBUART.c   **** #include "kitprog.h"
  52:.\USBUART.c   **** 
  53:.\USBUART.c   **** /*******************************************************************************
  54:.\USBUART.c   **** * Macro Name: CheckLine
  55:.\USBUART.c   **** ********************************************************************************
  56:.\USBUART.c   **** * Summary:
  57:.\USBUART.c   **** * Checks for line change, Reconfigures the UART clock to match host baud rate
  58:.\USBUART.c   **** *******************************************************************************/
  59:.\USBUART.c   **** 
  60:.\USBUART.c   **** #define CheckLine() {																				\
  61:.\USBUART.c   **** 																									\
  62:.\USBUART.c   **** 	uint32 dDTERate;																				\
  63:.\USBUART.c   **** 	uint16 wDivider;																				\
  64:.\USBUART.c   **** 																									\
  65:.\USBUART.c   **** 	if(USBFS_IsLineChanged())																		\
  66:.\USBUART.c   **** 	{																								\
  67:.\USBUART.c   **** 		/* Get Baud Rate */																			\
  68:.\USBUART.c   **** 		dDTERate = USBFS_GetDTERate();  															\
  69:.\USBUART.c   **** 																									\
  70:.\USBUART.c   **** 		/* Check for Baud Rate Upper Limit */														\
  71:.\USBUART.c   **** 		if(dDTERate > 115200)																		\
  72:.\USBUART.c   **** 		{																							\
  73:.\USBUART.c   **** 			dDTERate  = 115200;																		\
  74:.\USBUART.c   **** 		}																							\
  75:.\USBUART.c   **** 																									\
  76:.\USBUART.c   **** 		/* Check for Baud Rate Lower Limit */														\
  77:.\USBUART.c   **** 		if(dDTERate < 1200)																			\
  78:.\USBUART.c   **** 		{																							\
  79:.\USBUART.c   **** 			dDTERate  = 1200;																		\
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 3


  80:.\USBUART.c   **** 		}																							\
  81:.\USBUART.c   **** 																									\
  82:.\USBUART.c   **** 		/* Sets the required Clock divider for UART */												\
  83:.\USBUART.c   **** 		switch(dDTERate)																			\
  84:.\USBUART.c   **** 	    {																							\
  85:.\USBUART.c   **** 																									\
  86:.\USBUART.c   **** 			case 115200:																			\
  87:.\USBUART.c   **** 	            wDivider = DIVIDER115200;															\
  88:.\USBUART.c   **** 	            break;																				\
  89:.\USBUART.c   **** 	        case 57600:																				\
  90:.\USBUART.c   **** 	            wDivider = DIVIDER57600;															\
  91:.\USBUART.c   **** 	            break;																				\
  92:.\USBUART.c   **** 	        case 38400:																				\
  93:.\USBUART.c   **** 	            wDivider = DIVIDER38400;															\
  94:.\USBUART.c   **** 	            break;																				\
  95:.\USBUART.c   **** 	        case 19200:																				\
  96:.\USBUART.c   **** 	            wDivider = DIVIDER19200;															\
  97:.\USBUART.c   **** 	            break;																				\
  98:.\USBUART.c   **** 	        case 9600:																				\
  99:.\USBUART.c   **** 	            wDivider = DIVIDER9600;																\
 100:.\USBUART.c   **** 	            break;																				\
 101:.\USBUART.c   **** 	        case 4800:																				\
 102:.\USBUART.c   **** 	            wDivider = DIVIDER4800;																\
 103:.\USBUART.c   **** 	            break;																				\
 104:.\USBUART.c   **** 	        case 2400:																				\
 105:.\USBUART.c   **** 	            wDivider = DIVIDER2400;																\
 106:.\USBUART.c   **** 	            break;																				\
 107:.\USBUART.c   **** 	        case 1200:																				\
 108:.\USBUART.c   **** 	            wDivider = DIVIDER1200;																\
 109:.\USBUART.c   **** 	            break;																				\
 110:.\USBUART.c   **** 	        default: 																				\
 111:.\USBUART.c   **** 	            wDivider = DIVIDER115200;															\
 112:.\USBUART.c   **** 	            break;																				\
 113:.\USBUART.c   **** 	    }																							\
 114:.\USBUART.c   **** 																									\
 115:.\USBUART.c   **** 		/* Stop UART for new Clock */																\
 116:.\USBUART.c   **** 	    UART_Bridge_Stop();   																		\
 117:.\USBUART.c   **** 	    																							\
 118:.\USBUART.c   **** 		/* Set new Clock Frequency */																\
 119:.\USBUART.c   **** 		Clock_UART_SetDivider(wDivider-1);															\
 120:.\USBUART.c   **** 	    																							\
 121:.\USBUART.c   **** 		/* Restart UART */																			\
 122:.\USBUART.c   **** 		UART_Bridge_Start();																		\
 123:.\USBUART.c   **** 		UART_Bridge_ClearRxBuffer();																\
 124:.\USBUART.c   **** 		UART_Bridge_ClearTxBuffer();																\
 125:.\USBUART.c   **** 	}																								\
 126:.\USBUART.c   **** }																									
 127:.\USBUART.c   **** 
 128:.\USBUART.c   **** /*******************************************************************************
 129:.\USBUART.c   **** * Macro Name: USBUARTTransmit
 130:.\USBUART.c   **** ********************************************************************************
 131:.\USBUART.c   **** * Summary:
 132:.\USBUART.c   **** * Checks if USB host has sent data and transfers it to the UART Transmitter 
 133:.\USBUART.c   **** *
 134:.\USBUART.c   **** *******************************************************************************/
 135:.\USBUART.c   **** 
 136:.\USBUART.c   **** #define USBUARTTransmit()   {																		\
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 4


 137:.\USBUART.c   **** 																									\
 138:.\USBUART.c   **** 	uint8 size;																						\
 139:.\USBUART.c   **** 	uint8 buffer[64]; 																				\
 140:.\USBUART.c   **** 																									\
 141:.\USBUART.c   **** 	/* Check for USB host packet */																	\
 142:.\USBUART.c   **** 	if(USBFS_GetEPState(UART_OUT_EP))						 										\
 143:.\USBUART.c   **** 	{  																								\
 144:.\USBUART.c   **** 		/* Get size of packet */ 																	\
 145:.\USBUART.c   **** 		size = USBFS_GetEPCount(UART_OUT_EP);										  				\
 146:.\USBUART.c   **** 																									\
 147:.\USBUART.c   **** 		/* Read from USB Buffer */ 																	\
 148:.\USBUART.c   **** 		USBFS_ReadOutEP(UART_OUT_EP,&buffer[0],size);												\
 149:.\USBUART.c   **** 																									\
 150:.\USBUART.c   **** 		/* Send to UART Tx */																		\
 151:.\USBUART.c   **** 		UART_Bridge_PutArray(&buffer[0] , size);								 					\
 152:.\USBUART.c   **** 	}																								\
 153:.\USBUART.c   **** }
 154:.\USBUART.c   **** 
 155:.\USBUART.c   **** 
 156:.\USBUART.c   **** /*******************************************************************************
 157:.\USBUART.c   **** * Macro Name: USBUARTReceive
 158:.\USBUART.c   **** ********************************************************************************
 159:.\USBUART.c   **** * Summary:
 160:.\USBUART.c   **** * Checks if the UART has received data and sends it to the USB host 
 161:.\USBUART.c   **** *******************************************************************************/
 162:.\USBUART.c   **** 
 163:.\USBUART.c   **** #define USBUARTReceive() {																											\
 164:.\USBUART.c   **** 																																	\
 165:.\USBUART.c   **** 	uint8 wCount; 																													\
 166:.\USBUART.c   **** 	uint8 wRxBufferRead;																											\
 167:.\USBUART.c   **** 	uint8 bIndex;																													\
 168:.\USBUART.c   **** 																																	\
 169:.\USBUART.c   **** 	if(UART_Bridge_ReadRxStatus() == UART_Bridge_RX_STS_SOFT_BUFF_OVER)																\
 170:.\USBUART.c   **** 	{																																\
 171:.\USBUART.c   **** 		UART_Bridge_ClearRxBuffer();																								\
 172:.\USBUART.c   **** 	}																																\
 173:.\USBUART.c   **** 																																	\
 174:.\USBUART.c   **** 	/* Get the Received UART data size */																							\
 175:.\USBUART.c   **** 	wCount = UART_Bridge_GetRxBufferSize();                  		 																\
 176:.\USBUART.c   **** 																																	\
 177:.\USBUART.c   **** 	/* Check if Rx has data and USB has finished sending old data */																\
 178:.\USBUART.c   **** 	if( (wCount != 0) && 																											\
 179:.\USBUART.c   **** 	( USBFS_bGetEPState(UART_IN_EP) == USBFS_IN_BUFFER_EMPTY ))																		\
 180:.\USBUART.c   **** 	{																																\
 181:.\USBUART.c   **** 	    /* Limit data size to USB EP Packet Size */																					\
 182:.\USBUART.c   **** 		if( wCount > USBINPACKETSIZE )																								\
 183:.\USBUART.c   **** 	    {																															\
 184:.\USBUART.c   **** 	        wCount = USBINPACKETSIZE;                       																		\
 185:.\USBUART.c   **** 	    }																															\
 186:.\USBUART.c   **** 	    																															\
 187:.\USBUART.c   **** 	    /* Read current Rx Buffer pointer to a temporary pointer */ 																\
 188:.\USBUART.c   **** 		wRxBufferRead = UART_Bridge_rxBufferRead;																					\
 189:.\USBUART.c   **** 	    																															\
 190:.\USBUART.c   **** 	    for( bIndex = 0; bIndex < wCount; bIndex++, wRxBufferRead++)																\
 191:.\USBUART.c   **** 	    {																															\
 192:.\USBUART.c   **** 	        /* Reset temporary Buffer pointer on overflow */ 																		\
 193:.\USBUART.c   **** 	        if(wRxBufferRead >= UART_Bridge_RXBUFFERSIZE)																			\
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 5


 194:.\USBUART.c   **** 	        {																														\
 195:.\USBUART.c   **** 	            wRxBufferRead = 0u;																									\
 196:.\USBUART.c   **** 	        }																														\
 197:.\USBUART.c   **** 			/*Load from UART RX Buffer to USB */ 																					\
 198:.\USBUART.c   **** 	        CY_SET_REG8((uint8 *)USBUART_INEP_WRITE_DATA_PTR,  UART_Bridge_rxBuffer[wRxBufferRead]); 	
 199:.\USBUART.c   **** 	    }																															\
 200:.\USBUART.c   **** 	  																																\
 201:.\USBUART.c   **** 		/* Send out data */																											\
 202:.\USBUART.c   **** 	    TransmittoUSBHost();                  																						\
 203:.\USBUART.c   **** 																																	\
 204:.\USBUART.c   **** 		/* Load new Rx Buffer Pointer */																							\
 205:.\USBUART.c   **** 	    UART_Bridge_rxBufferRead = wRxBufferRead;																					\
 206:.\USBUART.c   **** 		UART_Bridge_rxBufferLoopDetect = 0;																							\
 207:.\USBUART.c   **** 																																	\
 208:.\USBUART.c   **** 	}																																\
 209:.\USBUART.c   **** }
 210:.\USBUART.c   **** 
 211:.\USBUART.c   **** 
 212:.\USBUART.c   **** 
 213:.\USBUART.c   **** /*******************************************************************************
 214:.\USBUART.c   **** * Macro Name: TransmittoUSBHost
 215:.\USBUART.c   **** ********************************************************************************
 216:.\USBUART.c   **** * Summary:
 217:.\USBUART.c   **** * Sets registers to transmit from USB INEP Buffer
 218:.\USBUART.c   **** *
 219:.\USBUART.c   **** *******************************************************************************/
 220:.\USBUART.c   **** 
 221:.\USBUART.c   **** #define TransmittoUSBHost() {																		\
 222:.\USBUART.c   ****     																								\
 223:.\USBUART.c   **** 	/* Write WAx */ 																				\
 224:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_WRITE_PTR,     USBFS_EP[UART_IN_EP].buffOffset & 0xFFu);				\
 225:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_WRITE_MSB_PTR, (USBFS_EP[UART_IN_EP].buffOffset >> 8u));				\
 226:.\USBUART.c   ****     																								\
 227:.\USBUART.c   **** 	/* Set the count and data toggle */																\
 228:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_CNT0_PTR, (wCount >> 8u) | (USBFS_EP[UART_IN_EP].epToggle)); 			\
 229:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_CNT1_PTR,  wCount & 0xFFu); 											\
 230:.\USBUART.c   ****     																								\
 231:.\USBUART.c   **** 	/* Write the RAx */ 																			\
 232:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_READ_PTR,     USBFS_EP[UART_IN_EP].buffOffset & 0xFFu); 				\
 233:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_READ_MSB_PTR, (USBFS_EP[UART_IN_EP].buffOffset >> 8u)); 				\
 234:.\USBUART.c   **** 																									\
 235:.\USBUART.c   **** 	USBFS_EP[USBFS_EP6].apiEpState = USBFS_NO_EVENT_PENDING; 										\
 236:.\USBUART.c   ****     																								\
 237:.\USBUART.c   **** 	/* Write the Mode register */ 																	\
 238:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_MODE_REG_PTR, USBFS_EP[UART_IN_EP].epMode); 							\
 239:.\USBUART.c   **** }
 240:.\USBUART.c   **** 
 241:.\USBUART.c   **** 
 242:.\USBUART.c   **** /*******************************************************************************
 243:.\USBUART.c   **** * Function Name: UARTBridgeComm()
 244:.\USBUART.c   **** ********************************************************************************
 245:.\USBUART.c   **** * Summary:
 246:.\USBUART.c   **** * This function handles the USB-UART bridge interface.
 247:.\USBUART.c   **** * It handles,
 248:.\USBUART.c   **** * a) Selection of UART clock based on host baud rate
 249:.\USBUART.c   **** * b) Transmit host packet to UART TX
 250:.\USBUART.c   **** * c) Transmit UART RX packet to host
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 6


 251:.\USBUART.c   **** *
 252:.\USBUART.c   **** * Parameters:
 253:.\USBUART.c   **** *  void
 254:.\USBUART.c   **** *
 255:.\USBUART.c   **** * Return:
 256:.\USBUART.c   **** *  void
 257:.\USBUART.c   **** *
 258:.\USBUART.c   **** *******************************************************************************/
 259:.\USBUART.c   **** 
 260:.\USBUART.c   **** void UARTBridgeComm (void)
 261:.\USBUART.c   **** {
 262:.\USBUART.c   **** 	/* Check for Line configuration change, Reconfigure UART based on host parameters */
 263:.\USBUART.c   **** 	CheckLine();
 264:.\USBUART.c   **** 	
 265:.\USBUART.c   **** 	/* USB to UART Transmit */
 266:.\USBUART.c   **** 	USBUARTTransmit();
 267:.\USBUART.c   **** 	
 268:.\USBUART.c   ****     /* UART to USB Receive */
 269:.\USBUART.c   **** 	USBUARTReceive();
 270:.\USBUART.c   **** 
 271:.\USBUART.c   **** 	return;
 272:.\USBUART.c   **** 
 273:.\USBUART.c   **** }
 274:.\USBUART.c   **** 
 275:.\USBUART.c   **** 
 276:.\USBUART.c   **** /*******************************************************************************
 277:.\USBUART.c   **** * Function Name: USBUARTInit()
 278:.\USBUART.c   **** ********************************************************************************
 279:.\USBUART.c   **** * Summary:
 280:.\USBUART.c   **** * Starts the UART, sets Tx Pin to HiZ to save power during enumeration
 281:.\USBUART.c   **** *
 282:.\USBUART.c   **** * Parameters:
 283:.\USBUART.c   **** *  void
 284:.\USBUART.c   **** *
 285:.\USBUART.c   **** * Return:
 286:.\USBUART.c   **** *  void
 287:.\USBUART.c   **** *
 288:.\USBUART.c   **** *******************************************************************************/
 289:.\USBUART.c   **** 
 290:.\USBUART.c   **** void USBUARTInit (void)
 291:.\USBUART.c   **** {
 292:.\USBUART.c   **** 
 293:.\USBUART.c   **** 	UART_Bridge_Start();
 294:.\USBUART.c   **** 	Pin_UART_Tx_SetDriveMode(Pin_UART_Tx_DM_DIG_HIZ);
 295:.\USBUART.c   **** 
 296:.\USBUART.c   **** }
 297:.\USBUART.c   **** 
 298:.\USBUART.c   **** /*******************************************************************************
 299:.\USBUART.c   **** * Function Name: USBUARTStart()
 300:.\USBUART.c   **** ********************************************************************************
 301:.\USBUART.c   **** * Summary:
 302:.\USBUART.c   **** * Initializes CDC Interface, Sets Tx Pin to Strong Drive
 303:.\USBUART.c   **** *
 304:.\USBUART.c   **** * Parameters:
 305:.\USBUART.c   **** *  void
 306:.\USBUART.c   **** *
 307:.\USBUART.c   **** * Return:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 7


 308:.\USBUART.c   **** *  void
 309:.\USBUART.c   **** *
 310:.\USBUART.c   **** *******************************************************************************/
 311:.\USBUART.c   **** 
 312:.\USBUART.c   **** void USBUARTStart (void)
 313:.\USBUART.c   **** {
  32              		.loc 1 313 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36 0000 10B5     		push	{r4, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
 314:.\USBUART.c   **** 	/* Initialize CDC Interface for USB-UART Bridge */
 315:.\USBUART.c   **** 	USBFS_CDC_Init();
  39              		.loc 1 315 0
  40              		.cfi_offset 14, -4
  41              		.cfi_offset 4, -8
  42 0002 FFF7FEFF 		bl	USBFS_CDC_Init
 316:.\USBUART.c   **** 	Pin_UART_Tx_SetDriveMode(Pin_UART_Tx_DM_STRONG);
  43              		.loc 1 316 0
  44 0006 0C20     		movs	r0, #12
 317:.\USBUART.c   **** 
 318:.\USBUART.c   **** }
  45              		.loc 1 318 0
  46 0008 BDE81040 		pop	{r4, lr}
  47              		.loc 1 316 0
  48 000c FFF7FEBF 		b	Pin_UART_Tx_SetDriveMode
  49              		.cfi_endproc
  50              	.LFE31:
  51              		.size	USBUARTStart, .-USBUARTStart
  52              		.section	.text.USBUARTInit,"ax",%progbits
  53              		.align	1
  54              		.global	USBUARTInit
  55              		.thumb
  56              		.thumb_func
  57              		.type	USBUARTInit, %function
  58              	USBUARTInit:
  59              	.LFB30:
  60              		.loc 1 291 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64 0000 10B5     		push	{r4, lr}
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 8
  67              		.loc 1 293 0
  68              		.cfi_offset 14, -4
  69              		.cfi_offset 4, -8
  70 0002 FFF7FEFF 		bl	UART_Bridge_Start
  71              		.loc 1 294 0
  72 0006 0220     		movs	r0, #2
  73              		.loc 1 296 0
  74 0008 BDE81040 		pop	{r4, lr}
  75              		.loc 1 294 0
  76 000c FFF7FEBF 		b	Pin_UART_Tx_SetDriveMode
  77              		.cfi_endproc
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 8


  78              	.LFE30:
  79              		.size	USBUARTInit, .-USBUARTInit
  80              		.section	.text.UARTBridgeComm,"ax",%progbits
  81              		.align	1
  82              		.global	UARTBridgeComm
  83              		.thumb
  84              		.thumb_func
  85              		.type	UARTBridgeComm, %function
  86              	UARTBridgeComm:
  87              	.LFB29:
  88              		.loc 1 261 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 64
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92 0000 30B5     		push	{r4, r5, lr}
  93              	.LCFI2:
  94              		.cfi_def_cfa_offset 12
  95 0002 91B0     		sub	sp, sp, #68
  96              	.LCFI3:
  97              		.cfi_def_cfa_offset 80
  98              	.LBB2:
  99              		.loc 1 263 0
 100              		.cfi_offset 14, -4
 101              		.cfi_offset 5, -8
 102              		.cfi_offset 4, -12
 103 0004 FFF7FEFF 		bl	USBFS_IsLineChanged
 104 0008 0028     		cmp	r0, #0
 105 000a 3FD0     		beq	.L6
 106 000c FFF7FEFF 		bl	USBFS_GetDTERate
 107 0010 B0F5E13F 		cmp	r0, #115200
 108              	.LVL0:
 109 0014 1CD8     		bhi	.L7
 110 0016 B0F5966F 		cmp	r0, #1200
 111 001a 28D3     		bcc	.L8
 112 001c B0F5165F 		cmp	r0, #9600
 113 0020 1CD0     		beq	.L11
 114 0022 09D8     		bhi	.L15
 115 0024 B0F5166F 		cmp	r0, #2400
 116 0028 1ED0     		beq	.L9
 117 002a B0F5965F 		cmp	r0, #4800
 118 002e 18D0     		beq	.L10
 119 0030 B0F5966F 		cmp	r0, #1200
 120 0034 0CD1     		bne	.L7
 121 0036 1AE0     		b	.L8
 122              	.L15:
 123 0038 B0F5164F 		cmp	r0, #38400
 124 003c 0AD0     		beq	.L13
 125 003e B0F5614F 		cmp	r0, #57600
 126 0042 03D0     		beq	.L14
 127 0044 B0F5964F 		cmp	r0, #19200
 128 0048 02D1     		bne	.L7
 129 004a 05E0     		b	.L25
 130              	.L14:
 131 004c 3424     		movs	r4, #52
 132              	.LVL1:
 133 004e 10E0     		b	.L16
 134              	.LVL2:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 9


 135              	.L7:
 136 0050 1A24     		movs	r4, #26
 137              	.LVL3:
 138 0052 0EE0     		b	.L16
 139              	.LVL4:
 140              	.L13:
 141 0054 4E24     		movs	r4, #78
 142              	.LVL5:
 143 0056 0CE0     		b	.L16
 144              	.LVL6:
 145              	.L25:
 146 0058 9C24     		movs	r4, #156
 147              	.LVL7:
 148 005a 0AE0     		b	.L16
 149              	.LVL8:
 150              	.L11:
 151 005c 4FF49C74 		mov	r4, #312
 152              	.LVL9:
 153 0060 07E0     		b	.L16
 154              	.LVL10:
 155              	.L10:
 156 0062 40F27124 		movw	r4, #625
 157              	.LVL11:
 158 0066 04E0     		b	.L16
 159              	.LVL12:
 160              	.L9:
 161 0068 40F2E244 		movw	r4, #1250
 162              	.LVL13:
 163 006c 01E0     		b	.L16
 164              	.LVL14:
 165              	.L8:
 166 006e 40F6C414 		movw	r4, #2500
 167              	.LVL15:
 168              	.L16:
 169 0072 FFF7FEFF 		bl	UART_Bridge_Stop
 170              	.LVL16:
 171 0076 601E     		subs	r0, r4, #1
 172 0078 80B2     		uxth	r0, r0
 173 007a 0121     		movs	r1, #1
 174 007c FFF7FEFF 		bl	Clock_UART_SetDividerRegister
 175 0080 FFF7FEFF 		bl	UART_Bridge_Start
 176 0084 FFF7FEFF 		bl	UART_Bridge_ClearRxBuffer
 177 0088 FFF7FEFF 		bl	UART_Bridge_ClearTxBuffer
 178              	.L6:
 179              	.LBE2:
 180              	.LBB3:
 181              		.loc 1 266 0
 182 008c 0720     		movs	r0, #7
 183 008e FFF7FEFF 		bl	USBFS_GetEPState
 184 0092 68B1     		cbz	r0, .L17
 185 0094 0720     		movs	r0, #7
 186 0096 FFF7FEFF 		bl	USBFS_GetEPCount
 187 009a C4B2     		uxtb	r4, r0
 188              	.LVL17:
 189 009c 6946     		mov	r1, sp
 190 009e 0720     		movs	r0, #7
 191 00a0 2246     		mov	r2, r4
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 10


 192 00a2 FFF7FEFF 		bl	USBFS_ReadOutEP
 193 00a6 6846     		mov	r0, sp
 194 00a8 2146     		mov	r1, r4
 195 00aa 6D46     		mov	r5, sp
 196 00ac FFF7FEFF 		bl	UART_Bridge_PutArray
 197              	.LVL18:
 198              	.L17:
 199              	.LBE3:
 200              	.LBB4:
 201              		.loc 1 269 0
 202 00b0 FFF7FEFF 		bl	UART_Bridge_ReadRxStatus
 203 00b4 8028     		cmp	r0, #128
 204 00b6 01D1     		bne	.L18
 205 00b8 FFF7FEFF 		bl	UART_Bridge_ClearRxBuffer
 206              	.L18:
 207 00bc FFF7FEFF 		bl	UART_Bridge_GetRxBufferSize
 208 00c0 0446     		mov	r4, r0
 209              	.LVL19:
 210 00c2 0028     		cmp	r0, #0
 211 00c4 40D0     		beq	.L22
 212 00c6 0620     		movs	r0, #6
 213 00c8 FFF7FEFF 		bl	USBFS_GetEPState
 214 00cc 0128     		cmp	r0, #1
 215 00ce 3BD1     		bne	.L22
 216 00d0 1E4B     		ldr	r3, .L26
 217 00d2 402C     		cmp	r4, #64
 218 00d4 28BF     		it	cs
 219 00d6 4024     		movcs	r4, #64
 220 00d8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 221 00da E4B2     		uxtb	r4, r4
 222              	.LVL20:
 223 00dc 0022     		movs	r2, #0
 224              	.LVL21:
 225              	.L21:
 226 00de 59B2     		sxtb	r1, r3
 227              	.LVL22:
 228 00e0 23EAE173 		bic	r3, r3, r1, asr #31
 229              	.LVL23:
 230 00e4 1A49     		ldr	r1, .L26+4
 231 00e6 0132     		adds	r2, r2, #1
 232              	.LVL24:
 233 00e8 C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 234 00ea D2B2     		uxtb	r2, r2
 235              	.LVL25:
 236 00ec 1949     		ldr	r1, .L26+8
 237 00ee 0133     		adds	r3, r3, #1
 238              	.LVL26:
 239 00f0 A242     		cmp	r2, r4
 240 00f2 0870     		strb	r0, [r1, #0]
 241 00f4 DBB2     		uxtb	r3, r3
 242              	.LVL27:
 243 00f6 F2D3     		bcc	.L21
 244 00f8 174A     		ldr	r2, .L26+12
 245              	.LVL28:
 246 00fa 0439     		subs	r1, r1, #4
 247 00fc B2F84E00 		ldrh	r0, [r2, #78]
 248 0100 C0B2     		uxtb	r0, r0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 11


 249 0102 0870     		strb	r0, [r1, #0]
 250 0104 B2F84E00 		ldrh	r0, [r2, #78]
 251 0108 0131     		adds	r1, r1, #1
 252 010a 80B2     		uxth	r0, r0
 253 010c 000A     		lsrs	r0, r0, #8
 254 010e 0870     		strb	r0, [r1, #0]
 255 0110 92F84B00 		ldrb	r0, [r2, #75]	@ zero_extendqisi2
 256 0114 7939     		subs	r1, r1, #121
 257 0116 0870     		strb	r0, [r1, #0]
 258 0118 0131     		adds	r1, r1, #1
 259 011a 0C70     		strb	r4, [r1, #0]
 260 011c B2F84E00 		ldrh	r0, [r2, #78]
 261 0120 7931     		adds	r1, r1, #121
 262 0122 C0B2     		uxtb	r0, r0
 263 0124 0870     		strb	r0, [r1, #0]
 264 0126 B2F84E00 		ldrh	r0, [r2, #78]
 265 012a 0131     		adds	r1, r1, #1
 266 012c 80B2     		uxth	r0, r0
 267 012e 000A     		lsrs	r0, r0, #8
 268 0130 0870     		strb	r0, [r1, #0]
 269 0132 0021     		movs	r1, #0
 270 0134 82F84910 		strb	r1, [r2, #73]
 271 0138 92F84D00 		ldrb	r0, [r2, #77]	@ zero_extendqisi2
 272 013c 074A     		ldr	r2, .L26+16
 273 013e 1070     		strb	r0, [r2, #0]
 274 0140 024A     		ldr	r2, .L26
 275 0142 1370     		strb	r3, [r2, #0]
 276 0144 064B     		ldr	r3, .L26+20
 277              	.LVL29:
 278 0146 1970     		strb	r1, [r3, #0]
 279              	.L22:
 280              	.LBE4:
 281              		.loc 1 273 0
 282 0148 11B0     		add	sp, sp, #68
 283 014a 30BD     		pop	{r4, r5, pc}
 284              	.L27:
 285              		.align	2
 286              	.L26:
 287 014c 00000000 		.word	UART_Bridge_rxBufferRead
 288 0150 00000000 		.word	UART_Bridge_rxBuffer
 289 0154 D8600040 		.word	1073766616
 290 0158 00000000 		.word	USBFS_EP
 291 015c 5E600040 		.word	1073766494
 292 0160 00000000 		.word	UART_Bridge_rxBufferLoopDetect
 293              		.cfi_endproc
 294              	.LFE29:
 295              		.size	UARTBridgeComm, .-UARTBridgeComm
 296              		.text
 297              	.Letext0:
 298              		.section	.debug_loc,"",%progbits
 299              	.Ldebug_loc0:
 300              	.LLST0:
 301 0000 00000000 		.4byte	.LFB31
 302 0004 02000000 		.4byte	.LCFI0
 303 0008 0100     		.2byte	0x1
 304 000a 5D       		.byte	0x5d
 305 000b 02000000 		.4byte	.LCFI0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 12


 306 000f 10000000 		.4byte	.LFE31
 307 0013 0200     		.2byte	0x2
 308 0015 7D       		.byte	0x7d
 309 0016 08       		.sleb128 8
 310 0017 00000000 		.4byte	0x0
 311 001b 00000000 		.4byte	0x0
 312              	.LLST1:
 313 001f 00000000 		.4byte	.LFB30
 314 0023 02000000 		.4byte	.LCFI1
 315 0027 0100     		.2byte	0x1
 316 0029 5D       		.byte	0x5d
 317 002a 02000000 		.4byte	.LCFI1
 318 002e 10000000 		.4byte	.LFE30
 319 0032 0200     		.2byte	0x2
 320 0034 7D       		.byte	0x7d
 321 0035 08       		.sleb128 8
 322 0036 00000000 		.4byte	0x0
 323 003a 00000000 		.4byte	0x0
 324              	.LLST2:
 325 003e 00000000 		.4byte	.LFB29
 326 0042 02000000 		.4byte	.LCFI2
 327 0046 0100     		.2byte	0x1
 328 0048 5D       		.byte	0x5d
 329 0049 02000000 		.4byte	.LCFI2
 330 004d 04000000 		.4byte	.LCFI3
 331 0051 0200     		.2byte	0x2
 332 0053 7D       		.byte	0x7d
 333 0054 0C       		.sleb128 12
 334 0055 04000000 		.4byte	.LCFI3
 335 0059 64010000 		.4byte	.LFE29
 336 005d 0300     		.2byte	0x3
 337 005f 7D       		.byte	0x7d
 338 0060 D000     		.sleb128 80
 339 0062 00000000 		.4byte	0x0
 340 0066 00000000 		.4byte	0x0
 341              	.LLST3:
 342 006a 14000000 		.4byte	.LVL0
 343 006e 76000000 		.4byte	.LVL16
 344 0072 0100     		.2byte	0x1
 345 0074 50       		.byte	0x50
 346 0075 00000000 		.4byte	0x0
 347 0079 00000000 		.4byte	0x0
 348              	.LLST4:
 349 007d 4E000000 		.4byte	.LVL1
 350 0081 50000000 		.4byte	.LVL2
 351 0085 0100     		.2byte	0x1
 352 0087 54       		.byte	0x54
 353 0088 52000000 		.4byte	.LVL3
 354 008c 54000000 		.4byte	.LVL4
 355 0090 0100     		.2byte	0x1
 356 0092 54       		.byte	0x54
 357 0093 56000000 		.4byte	.LVL5
 358 0097 58000000 		.4byte	.LVL6
 359 009b 0100     		.2byte	0x1
 360 009d 54       		.byte	0x54
 361 009e 5A000000 		.4byte	.LVL7
 362 00a2 5C000000 		.4byte	.LVL8
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 13


 363 00a6 0100     		.2byte	0x1
 364 00a8 54       		.byte	0x54
 365 00a9 60000000 		.4byte	.LVL9
 366 00ad 62000000 		.4byte	.LVL10
 367 00b1 0100     		.2byte	0x1
 368 00b3 54       		.byte	0x54
 369 00b4 66000000 		.4byte	.LVL11
 370 00b8 68000000 		.4byte	.LVL12
 371 00bc 0100     		.2byte	0x1
 372 00be 54       		.byte	0x54
 373 00bf 6C000000 		.4byte	.LVL13
 374 00c3 6E000000 		.4byte	.LVL14
 375 00c7 0100     		.2byte	0x1
 376 00c9 54       		.byte	0x54
 377 00ca 72000000 		.4byte	.LVL15
 378 00ce 9C000000 		.4byte	.LVL17
 379 00d2 0100     		.2byte	0x1
 380 00d4 54       		.byte	0x54
 381 00d5 B0000000 		.4byte	.LVL18
 382 00d9 C2000000 		.4byte	.LVL19
 383 00dd 0100     		.2byte	0x1
 384 00df 54       		.byte	0x54
 385 00e0 00000000 		.4byte	0x0
 386 00e4 00000000 		.4byte	0x0
 387              	.LLST5:
 388 00e8 9C000000 		.4byte	.LVL17
 389 00ec C2000000 		.4byte	.LVL19
 390 00f0 0100     		.2byte	0x1
 391 00f2 54       		.byte	0x54
 392 00f3 00000000 		.4byte	0x0
 393 00f7 00000000 		.4byte	0x0
 394              	.LLST6:
 395 00fb E0000000 		.4byte	.LVL22
 396 00ff F0000000 		.4byte	.LVL26
 397 0103 0100     		.2byte	0x1
 398 0105 53       		.byte	0x53
 399 0106 F6000000 		.4byte	.LVL27
 400 010a 46010000 		.4byte	.LVL29
 401 010e 0100     		.2byte	0x1
 402 0110 53       		.byte	0x53
 403 0111 00000000 		.4byte	0x0
 404 0115 00000000 		.4byte	0x0
 405              	.LLST7:
 406 0119 DE000000 		.4byte	.LVL21
 407 011d E8000000 		.4byte	.LVL24
 408 0121 0100     		.2byte	0x1
 409 0123 52       		.byte	0x52
 410 0124 EC000000 		.4byte	.LVL25
 411 0128 FA000000 		.4byte	.LVL28
 412 012c 0100     		.2byte	0x1
 413 012e 52       		.byte	0x52
 414 012f 00000000 		.4byte	0x0
 415 0133 00000000 		.4byte	0x0
 416              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 417              		.file 3 "./Generated_Source/PSoC5/USBFS.h"
 418              		.file 4 "./Generated_Source/PSoC5/UART_Bridge.h"
 419              		.file 5 "./Generated_Source/PSoC5/core_cm3.h"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 14


 420              		.file 6 ".\\/USBUART.h"
 421              		.section	.debug_info
 422 0000 9A020000 		.4byte	0x29a
 423 0004 0200     		.2byte	0x2
 424 0006 00000000 		.4byte	.Ldebug_abbrev0
 425 000a 04       		.byte	0x4
 426 000b 01       		.uleb128 0x1
 427 000c A5010000 		.4byte	.LASF39
 428 0010 01       		.byte	0x1
 429 0011 99010000 		.4byte	.LASF40
 430 0015 FE010000 		.4byte	.LASF41
 431 0019 00000000 		.4byte	0x0
 432 001d 00000000 		.4byte	0x0
 433 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 434 0025 00000000 		.4byte	.Ldebug_line0
 435 0029 02       		.uleb128 0x2
 436 002a 01       		.byte	0x1
 437 002b 06       		.byte	0x6
 438 002c F2010000 		.4byte	.LASF0
 439 0030 02       		.uleb128 0x2
 440 0031 01       		.byte	0x1
 441 0032 08       		.byte	0x8
 442 0033 DF000000 		.4byte	.LASF1
 443 0037 02       		.uleb128 0x2
 444 0038 02       		.byte	0x2
 445 0039 05       		.byte	0x5
 446 003a C1010000 		.4byte	.LASF2
 447 003e 02       		.uleb128 0x2
 448 003f 02       		.byte	0x2
 449 0040 07       		.byte	0x7
 450 0041 52000000 		.4byte	.LASF3
 451 0045 02       		.uleb128 0x2
 452 0046 04       		.byte	0x4
 453 0047 05       		.byte	0x5
 454 0048 E2010000 		.4byte	.LASF4
 455 004c 02       		.uleb128 0x2
 456 004d 04       		.byte	0x4
 457 004e 07       		.byte	0x7
 458 004f B2000000 		.4byte	.LASF5
 459 0053 02       		.uleb128 0x2
 460 0054 08       		.byte	0x8
 461 0055 05       		.byte	0x5
 462 0056 00000000 		.4byte	.LASF6
 463 005a 02       		.uleb128 0x2
 464 005b 08       		.byte	0x8
 465 005c 07       		.byte	0x7
 466 005d 58010000 		.4byte	.LASF7
 467 0061 03       		.uleb128 0x3
 468 0062 04       		.byte	0x4
 469 0063 05       		.byte	0x5
 470 0064 696E7400 		.ascii	"int\000"
 471 0068 02       		.uleb128 0x2
 472 0069 04       		.byte	0x4
 473 006a 07       		.byte	0x7
 474 006b 4B010000 		.4byte	.LASF8
 475 006f 04       		.uleb128 0x4
 476 0070 D2010000 		.4byte	.LASF9
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 15


 477 0074 02       		.byte	0x2
 478 0075 4C       		.byte	0x4c
 479 0076 30000000 		.4byte	0x30
 480 007a 04       		.uleb128 0x4
 481 007b 32010000 		.4byte	.LASF10
 482 007f 02       		.byte	0x2
 483 0080 4D       		.byte	0x4d
 484 0081 3E000000 		.4byte	0x3e
 485 0085 04       		.uleb128 0x4
 486 0086 44010000 		.4byte	.LASF11
 487 008a 02       		.byte	0x2
 488 008b 4E       		.byte	0x4e
 489 008c 4C000000 		.4byte	0x4c
 490 0090 02       		.uleb128 0x2
 491 0091 04       		.byte	0x4
 492 0092 04       		.byte	0x4
 493 0093 9E000000 		.4byte	.LASF12
 494 0097 02       		.uleb128 0x2
 495 0098 08       		.byte	0x8
 496 0099 04       		.byte	0x4
 497 009a FA000000 		.4byte	.LASF13
 498 009e 02       		.uleb128 0x2
 499 009f 01       		.byte	0x1
 500 00a0 08       		.byte	0x8
 501 00a1 B1010000 		.4byte	.LASF14
 502 00a5 05       		.uleb128 0x5
 503 00a6 6F000000 		.4byte	0x6f
 504 00aa 06       		.uleb128 0x6
 505 00ab 04       		.byte	0x4
 506 00ac 07       		.byte	0x7
 507 00ad 07       		.uleb128 0x7
 508 00ae 79010000 		.4byte	.LASF42
 509 00b2 0C       		.byte	0xc
 510 00b3 03       		.byte	0x3
 511 00b4 7B       		.byte	0x7b
 512 00b5 38010000 		.4byte	0x138
 513 00b9 08       		.uleb128 0x8
 514 00ba 01010000 		.4byte	.LASF15
 515 00be 03       		.byte	0x3
 516 00bf 7C       		.byte	0x7c
 517 00c0 6F000000 		.4byte	0x6f
 518 00c4 02       		.byte	0x2
 519 00c5 23       		.byte	0x23
 520 00c6 00       		.uleb128 0x0
 521 00c7 08       		.uleb128 0x8
 522 00c8 39010000 		.4byte	.LASF16
 523 00cc 03       		.byte	0x3
 524 00cd 7D       		.byte	0x7d
 525 00ce 6F000000 		.4byte	0x6f
 526 00d2 02       		.byte	0x2
 527 00d3 23       		.byte	0x23
 528 00d4 01       		.uleb128 0x1
 529 00d5 08       		.uleb128 0x8
 530 00d6 6F010000 		.4byte	.LASF17
 531 00da 03       		.byte	0x3
 532 00db 7E       		.byte	0x7e
 533 00dc 6F000000 		.4byte	0x6f
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 16


 534 00e0 02       		.byte	0x2
 535 00e1 23       		.byte	0x23
 536 00e2 02       		.uleb128 0x2
 537 00e3 08       		.uleb128 0x8
 538 00e4 A4000000 		.4byte	.LASF18
 539 00e8 03       		.byte	0x3
 540 00e9 7F       		.byte	0x7f
 541 00ea 6F000000 		.4byte	0x6f
 542 00ee 02       		.byte	0x2
 543 00ef 23       		.byte	0x23
 544 00f0 03       		.uleb128 0x3
 545 00f1 08       		.uleb128 0x8
 546 00f2 C4000000 		.4byte	.LASF19
 547 00f6 03       		.byte	0x3
 548 00f7 80       		.byte	0x80
 549 00f8 6F000000 		.4byte	0x6f
 550 00fc 02       		.byte	0x2
 551 00fd 23       		.byte	0x23
 552 00fe 04       		.uleb128 0x4
 553 00ff 08       		.uleb128 0x8
 554 0100 EB010000 		.4byte	.LASF20
 555 0104 03       		.byte	0x3
 556 0105 81       		.byte	0x81
 557 0106 6F000000 		.4byte	0x6f
 558 010a 02       		.byte	0x2
 559 010b 23       		.byte	0x23
 560 010c 05       		.uleb128 0x5
 561 010d 08       		.uleb128 0x8
 562 010e 08010000 		.4byte	.LASF21
 563 0112 03       		.byte	0x3
 564 0113 82       		.byte	0x82
 565 0114 7A000000 		.4byte	0x7a
 566 0118 02       		.byte	0x2
 567 0119 23       		.byte	0x23
 568 011a 06       		.uleb128 0x6
 569 011b 08       		.uleb128 0x8
 570 011c B6010000 		.4byte	.LASF22
 571 0120 03       		.byte	0x3
 572 0121 83       		.byte	0x83
 573 0122 7A000000 		.4byte	0x7a
 574 0126 02       		.byte	0x2
 575 0127 23       		.byte	0x23
 576 0128 08       		.uleb128 0x8
 577 0129 08       		.uleb128 0x8
 578 012a D8010000 		.4byte	.LASF23
 579 012e 03       		.byte	0x3
 580 012f 84       		.byte	0x84
 581 0130 6F000000 		.4byte	0x6f
 582 0134 02       		.byte	0x2
 583 0135 23       		.byte	0x23
 584 0136 0A       		.uleb128 0xa
 585 0137 00       		.byte	0x0
 586 0138 04       		.uleb128 0x4
 587 0139 6E000000 		.4byte	.LASF24
 588 013d 03       		.byte	0x3
 589 013e 85       		.byte	0x85
 590 013f AD000000 		.4byte	0xad
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 17


 591 0143 09       		.uleb128 0x9
 592 0144 01       		.byte	0x1
 593 0145 ED000000 		.4byte	.LASF25
 594 0149 01       		.byte	0x1
 595 014a 3801     		.2byte	0x138
 596 014c 01       		.byte	0x1
 597 014d 00000000 		.4byte	.LFB31
 598 0151 10000000 		.4byte	.LFE31
 599 0155 00000000 		.4byte	.LLST0
 600 0159 09       		.uleb128 0x9
 601 015a 01       		.byte	0x1
 602 015b 92000000 		.4byte	.LASF26
 603 015f 01       		.byte	0x1
 604 0160 2201     		.2byte	0x122
 605 0162 01       		.byte	0x1
 606 0163 00000000 		.4byte	.LFB30
 607 0167 10000000 		.4byte	.LFE30
 608 016b 1F000000 		.4byte	.LLST1
 609 016f 0A       		.uleb128 0xa
 610 0170 01       		.byte	0x1
 611 0171 83000000 		.4byte	.LASF43
 612 0175 01       		.byte	0x1
 613 0176 0401     		.2byte	0x104
 614 0178 01       		.byte	0x1
 615 0179 00000000 		.4byte	.LFB29
 616 017d 64010000 		.4byte	.LFE29
 617 0181 3E000000 		.4byte	.LLST2
 618 0185 1E020000 		.4byte	0x21e
 619 0189 0B       		.uleb128 0xb
 620 018a 04000000 		.4byte	.LBB2
 621 018e 8C000000 		.4byte	.LBE2
 622 0192 B7010000 		.4byte	0x1b7
 623 0196 0C       		.uleb128 0xc
 624 0197 27000000 		.4byte	.LASF27
 625 019b 01       		.byte	0x1
 626 019c 0701     		.2byte	0x107
 627 019e 85000000 		.4byte	0x85
 628 01a2 6A000000 		.4byte	.LLST3
 629 01a6 0C       		.uleb128 0xc
 630 01a7 65000000 		.4byte	.LASF28
 631 01ab 01       		.byte	0x1
 632 01ac 0701     		.2byte	0x107
 633 01ae 7A000000 		.4byte	0x7a
 634 01b2 7D000000 		.4byte	.LLST4
 635 01b6 00       		.byte	0x0
 636 01b7 0B       		.uleb128 0xb
 637 01b8 8C000000 		.4byte	.LBB3
 638 01bc B0000000 		.4byte	.LBE3
 639 01c0 E5010000 		.4byte	0x1e5
 640 01c4 0C       		.uleb128 0xc
 641 01c5 AD000000 		.4byte	.LASF29
 642 01c9 01       		.byte	0x1
 643 01ca 0A01     		.2byte	0x10a
 644 01cc 6F000000 		.4byte	0x6f
 645 01d0 E8000000 		.4byte	.LLST5
 646 01d4 0D       		.uleb128 0xd
 647 01d5 CB010000 		.4byte	.LASF30
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 18


 648 01d9 01       		.byte	0x1
 649 01da 0A01     		.2byte	0x10a
 650 01dc 1E020000 		.4byte	0x21e
 651 01e0 03       		.byte	0x3
 652 01e1 91       		.byte	0x91
 653 01e2 B07F     		.sleb128 -80
 654 01e4 00       		.byte	0x0
 655 01e5 0E       		.uleb128 0xe
 656 01e6 B0000000 		.4byte	.LBB4
 657 01ea 48010000 		.4byte	.LBE4
 658 01ee 0D       		.uleb128 0xd
 659 01ef 30000000 		.4byte	.LASF31
 660 01f3 01       		.byte	0x1
 661 01f4 0D01     		.2byte	0x10d
 662 01f6 6F000000 		.4byte	0x6f
 663 01fa 01       		.byte	0x1
 664 01fb 54       		.byte	0x54
 665 01fc 0C       		.uleb128 0xc
 666 01fd 8B010000 		.4byte	.LASF32
 667 0201 01       		.byte	0x1
 668 0202 0D01     		.2byte	0x10d
 669 0204 6F000000 		.4byte	0x6f
 670 0208 FB000000 		.4byte	.LLST6
 671 020c 0C       		.uleb128 0xc
 672 020d 4B000000 		.4byte	.LASF33
 673 0211 01       		.byte	0x1
 674 0212 0D01     		.2byte	0x10d
 675 0214 6F000000 		.4byte	0x6f
 676 0218 19010000 		.4byte	.LLST7
 677 021c 00       		.byte	0x0
 678 021d 00       		.byte	0x0
 679 021e 0F       		.uleb128 0xf
 680 021f 6F000000 		.4byte	0x6f
 681 0223 2E020000 		.4byte	0x22e
 682 0227 10       		.uleb128 0x10
 683 0228 AA000000 		.4byte	0xaa
 684 022c 3F       		.byte	0x3f
 685 022d 00       		.byte	0x0
 686 022e 0F       		.uleb128 0xf
 687 022f 6F000000 		.4byte	0x6f
 688 0233 3E020000 		.4byte	0x23e
 689 0237 10       		.uleb128 0x10
 690 0238 AA000000 		.4byte	0xaa
 691 023c 7F       		.byte	0x7f
 692 023d 00       		.byte	0x0
 693 023e 11       		.uleb128 0x11
 694 023f 36000000 		.4byte	.LASF34
 695 0243 04       		.byte	0x4
 696 0244 5201     		.2byte	0x152
 697 0246 4C020000 		.4byte	0x24c
 698 024a 01       		.byte	0x1
 699 024b 01       		.byte	0x1
 700 024c 05       		.uleb128 0x5
 701 024d 2E020000 		.4byte	0x22e
 702 0251 11       		.uleb128 0x11
 703 0252 0E000000 		.4byte	.LASF35
 704 0256 04       		.byte	0x4
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 19


 705 0257 5301     		.2byte	0x153
 706 0259 A5000000 		.4byte	0xa5
 707 025d 01       		.byte	0x1
 708 025e 01       		.byte	0x1
 709 025f 11       		.uleb128 0x11
 710 0260 13010000 		.4byte	.LASF36
 711 0264 04       		.byte	0x4
 712 0265 5501     		.2byte	0x155
 713 0267 A5000000 		.4byte	0xa5
 714 026b 01       		.byte	0x1
 715 026c 01       		.byte	0x1
 716 026d 11       		.uleb128 0x11
 717 026e C9000000 		.4byte	.LASF37
 718 0272 05       		.byte	0x5
 719 0273 CE06     		.2byte	0x6ce
 720 0275 7B020000 		.4byte	0x27b
 721 0279 01       		.byte	0x1
 722 027a 01       		.byte	0x1
 723 027b 05       		.uleb128 0x5
 724 027c 61000000 		.4byte	0x61
 725 0280 0F       		.uleb128 0xf
 726 0281 38010000 		.4byte	0x138
 727 0285 8B020000 		.4byte	0x28b
 728 0289 12       		.uleb128 0x12
 729 028a 00       		.byte	0x0
 730 028b 13       		.uleb128 0x13
 731 028c D6000000 		.4byte	.LASF38
 732 0290 06       		.byte	0x6
 733 0291 69       		.byte	0x69
 734 0292 98020000 		.4byte	0x298
 735 0296 01       		.byte	0x1
 736 0297 01       		.byte	0x1
 737 0298 05       		.uleb128 0x5
 738 0299 80020000 		.4byte	0x280
 739 029d 00       		.byte	0x0
 740              		.section	.debug_abbrev
 741 0000 01       		.uleb128 0x1
 742 0001 11       		.uleb128 0x11
 743 0002 01       		.byte	0x1
 744 0003 25       		.uleb128 0x25
 745 0004 0E       		.uleb128 0xe
 746 0005 13       		.uleb128 0x13
 747 0006 0B       		.uleb128 0xb
 748 0007 03       		.uleb128 0x3
 749 0008 0E       		.uleb128 0xe
 750 0009 1B       		.uleb128 0x1b
 751 000a 0E       		.uleb128 0xe
 752 000b 11       		.uleb128 0x11
 753 000c 01       		.uleb128 0x1
 754 000d 52       		.uleb128 0x52
 755 000e 01       		.uleb128 0x1
 756 000f 55       		.uleb128 0x55
 757 0010 06       		.uleb128 0x6
 758 0011 10       		.uleb128 0x10
 759 0012 06       		.uleb128 0x6
 760 0013 00       		.byte	0x0
 761 0014 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 20


 762 0015 02       		.uleb128 0x2
 763 0016 24       		.uleb128 0x24
 764 0017 00       		.byte	0x0
 765 0018 0B       		.uleb128 0xb
 766 0019 0B       		.uleb128 0xb
 767 001a 3E       		.uleb128 0x3e
 768 001b 0B       		.uleb128 0xb
 769 001c 03       		.uleb128 0x3
 770 001d 0E       		.uleb128 0xe
 771 001e 00       		.byte	0x0
 772 001f 00       		.byte	0x0
 773 0020 03       		.uleb128 0x3
 774 0021 24       		.uleb128 0x24
 775 0022 00       		.byte	0x0
 776 0023 0B       		.uleb128 0xb
 777 0024 0B       		.uleb128 0xb
 778 0025 3E       		.uleb128 0x3e
 779 0026 0B       		.uleb128 0xb
 780 0027 03       		.uleb128 0x3
 781 0028 08       		.uleb128 0x8
 782 0029 00       		.byte	0x0
 783 002a 00       		.byte	0x0
 784 002b 04       		.uleb128 0x4
 785 002c 16       		.uleb128 0x16
 786 002d 00       		.byte	0x0
 787 002e 03       		.uleb128 0x3
 788 002f 0E       		.uleb128 0xe
 789 0030 3A       		.uleb128 0x3a
 790 0031 0B       		.uleb128 0xb
 791 0032 3B       		.uleb128 0x3b
 792 0033 0B       		.uleb128 0xb
 793 0034 49       		.uleb128 0x49
 794 0035 13       		.uleb128 0x13
 795 0036 00       		.byte	0x0
 796 0037 00       		.byte	0x0
 797 0038 05       		.uleb128 0x5
 798 0039 35       		.uleb128 0x35
 799 003a 00       		.byte	0x0
 800 003b 49       		.uleb128 0x49
 801 003c 13       		.uleb128 0x13
 802 003d 00       		.byte	0x0
 803 003e 00       		.byte	0x0
 804 003f 06       		.uleb128 0x6
 805 0040 24       		.uleb128 0x24
 806 0041 00       		.byte	0x0
 807 0042 0B       		.uleb128 0xb
 808 0043 0B       		.uleb128 0xb
 809 0044 3E       		.uleb128 0x3e
 810 0045 0B       		.uleb128 0xb
 811 0046 00       		.byte	0x0
 812 0047 00       		.byte	0x0
 813 0048 07       		.uleb128 0x7
 814 0049 13       		.uleb128 0x13
 815 004a 01       		.byte	0x1
 816 004b 03       		.uleb128 0x3
 817 004c 0E       		.uleb128 0xe
 818 004d 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 21


 819 004e 0B       		.uleb128 0xb
 820 004f 3A       		.uleb128 0x3a
 821 0050 0B       		.uleb128 0xb
 822 0051 3B       		.uleb128 0x3b
 823 0052 0B       		.uleb128 0xb
 824 0053 01       		.uleb128 0x1
 825 0054 13       		.uleb128 0x13
 826 0055 00       		.byte	0x0
 827 0056 00       		.byte	0x0
 828 0057 08       		.uleb128 0x8
 829 0058 0D       		.uleb128 0xd
 830 0059 00       		.byte	0x0
 831 005a 03       		.uleb128 0x3
 832 005b 0E       		.uleb128 0xe
 833 005c 3A       		.uleb128 0x3a
 834 005d 0B       		.uleb128 0xb
 835 005e 3B       		.uleb128 0x3b
 836 005f 0B       		.uleb128 0xb
 837 0060 49       		.uleb128 0x49
 838 0061 13       		.uleb128 0x13
 839 0062 38       		.uleb128 0x38
 840 0063 0A       		.uleb128 0xa
 841 0064 00       		.byte	0x0
 842 0065 00       		.byte	0x0
 843 0066 09       		.uleb128 0x9
 844 0067 2E       		.uleb128 0x2e
 845 0068 00       		.byte	0x0
 846 0069 3F       		.uleb128 0x3f
 847 006a 0C       		.uleb128 0xc
 848 006b 03       		.uleb128 0x3
 849 006c 0E       		.uleb128 0xe
 850 006d 3A       		.uleb128 0x3a
 851 006e 0B       		.uleb128 0xb
 852 006f 3B       		.uleb128 0x3b
 853 0070 05       		.uleb128 0x5
 854 0071 27       		.uleb128 0x27
 855 0072 0C       		.uleb128 0xc
 856 0073 11       		.uleb128 0x11
 857 0074 01       		.uleb128 0x1
 858 0075 12       		.uleb128 0x12
 859 0076 01       		.uleb128 0x1
 860 0077 40       		.uleb128 0x40
 861 0078 06       		.uleb128 0x6
 862 0079 00       		.byte	0x0
 863 007a 00       		.byte	0x0
 864 007b 0A       		.uleb128 0xa
 865 007c 2E       		.uleb128 0x2e
 866 007d 01       		.byte	0x1
 867 007e 3F       		.uleb128 0x3f
 868 007f 0C       		.uleb128 0xc
 869 0080 03       		.uleb128 0x3
 870 0081 0E       		.uleb128 0xe
 871 0082 3A       		.uleb128 0x3a
 872 0083 0B       		.uleb128 0xb
 873 0084 3B       		.uleb128 0x3b
 874 0085 05       		.uleb128 0x5
 875 0086 27       		.uleb128 0x27
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 22


 876 0087 0C       		.uleb128 0xc
 877 0088 11       		.uleb128 0x11
 878 0089 01       		.uleb128 0x1
 879 008a 12       		.uleb128 0x12
 880 008b 01       		.uleb128 0x1
 881 008c 40       		.uleb128 0x40
 882 008d 06       		.uleb128 0x6
 883 008e 01       		.uleb128 0x1
 884 008f 13       		.uleb128 0x13
 885 0090 00       		.byte	0x0
 886 0091 00       		.byte	0x0
 887 0092 0B       		.uleb128 0xb
 888 0093 0B       		.uleb128 0xb
 889 0094 01       		.byte	0x1
 890 0095 11       		.uleb128 0x11
 891 0096 01       		.uleb128 0x1
 892 0097 12       		.uleb128 0x12
 893 0098 01       		.uleb128 0x1
 894 0099 01       		.uleb128 0x1
 895 009a 13       		.uleb128 0x13
 896 009b 00       		.byte	0x0
 897 009c 00       		.byte	0x0
 898 009d 0C       		.uleb128 0xc
 899 009e 34       		.uleb128 0x34
 900 009f 00       		.byte	0x0
 901 00a0 03       		.uleb128 0x3
 902 00a1 0E       		.uleb128 0xe
 903 00a2 3A       		.uleb128 0x3a
 904 00a3 0B       		.uleb128 0xb
 905 00a4 3B       		.uleb128 0x3b
 906 00a5 05       		.uleb128 0x5
 907 00a6 49       		.uleb128 0x49
 908 00a7 13       		.uleb128 0x13
 909 00a8 02       		.uleb128 0x2
 910 00a9 06       		.uleb128 0x6
 911 00aa 00       		.byte	0x0
 912 00ab 00       		.byte	0x0
 913 00ac 0D       		.uleb128 0xd
 914 00ad 34       		.uleb128 0x34
 915 00ae 00       		.byte	0x0
 916 00af 03       		.uleb128 0x3
 917 00b0 0E       		.uleb128 0xe
 918 00b1 3A       		.uleb128 0x3a
 919 00b2 0B       		.uleb128 0xb
 920 00b3 3B       		.uleb128 0x3b
 921 00b4 05       		.uleb128 0x5
 922 00b5 49       		.uleb128 0x49
 923 00b6 13       		.uleb128 0x13
 924 00b7 02       		.uleb128 0x2
 925 00b8 0A       		.uleb128 0xa
 926 00b9 00       		.byte	0x0
 927 00ba 00       		.byte	0x0
 928 00bb 0E       		.uleb128 0xe
 929 00bc 0B       		.uleb128 0xb
 930 00bd 01       		.byte	0x1
 931 00be 11       		.uleb128 0x11
 932 00bf 01       		.uleb128 0x1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 23


 933 00c0 12       		.uleb128 0x12
 934 00c1 01       		.uleb128 0x1
 935 00c2 00       		.byte	0x0
 936 00c3 00       		.byte	0x0
 937 00c4 0F       		.uleb128 0xf
 938 00c5 01       		.uleb128 0x1
 939 00c6 01       		.byte	0x1
 940 00c7 49       		.uleb128 0x49
 941 00c8 13       		.uleb128 0x13
 942 00c9 01       		.uleb128 0x1
 943 00ca 13       		.uleb128 0x13
 944 00cb 00       		.byte	0x0
 945 00cc 00       		.byte	0x0
 946 00cd 10       		.uleb128 0x10
 947 00ce 21       		.uleb128 0x21
 948 00cf 00       		.byte	0x0
 949 00d0 49       		.uleb128 0x49
 950 00d1 13       		.uleb128 0x13
 951 00d2 2F       		.uleb128 0x2f
 952 00d3 0B       		.uleb128 0xb
 953 00d4 00       		.byte	0x0
 954 00d5 00       		.byte	0x0
 955 00d6 11       		.uleb128 0x11
 956 00d7 34       		.uleb128 0x34
 957 00d8 00       		.byte	0x0
 958 00d9 03       		.uleb128 0x3
 959 00da 0E       		.uleb128 0xe
 960 00db 3A       		.uleb128 0x3a
 961 00dc 0B       		.uleb128 0xb
 962 00dd 3B       		.uleb128 0x3b
 963 00de 05       		.uleb128 0x5
 964 00df 49       		.uleb128 0x49
 965 00e0 13       		.uleb128 0x13
 966 00e1 3F       		.uleb128 0x3f
 967 00e2 0C       		.uleb128 0xc
 968 00e3 3C       		.uleb128 0x3c
 969 00e4 0C       		.uleb128 0xc
 970 00e5 00       		.byte	0x0
 971 00e6 00       		.byte	0x0
 972 00e7 12       		.uleb128 0x12
 973 00e8 21       		.uleb128 0x21
 974 00e9 00       		.byte	0x0
 975 00ea 00       		.byte	0x0
 976 00eb 00       		.byte	0x0
 977 00ec 13       		.uleb128 0x13
 978 00ed 34       		.uleb128 0x34
 979 00ee 00       		.byte	0x0
 980 00ef 03       		.uleb128 0x3
 981 00f0 0E       		.uleb128 0xe
 982 00f1 3A       		.uleb128 0x3a
 983 00f2 0B       		.uleb128 0xb
 984 00f3 3B       		.uleb128 0x3b
 985 00f4 0B       		.uleb128 0xb
 986 00f5 49       		.uleb128 0x49
 987 00f6 13       		.uleb128 0x13
 988 00f7 3F       		.uleb128 0x3f
 989 00f8 0C       		.uleb128 0xc
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 24


 990 00f9 3C       		.uleb128 0x3c
 991 00fa 0C       		.uleb128 0xc
 992 00fb 00       		.byte	0x0
 993 00fc 00       		.byte	0x0
 994 00fd 00       		.byte	0x0
 995              		.section	.debug_pubnames,"",%progbits
 996 0000 42000000 		.4byte	0x42
 997 0004 0200     		.2byte	0x2
 998 0006 00000000 		.4byte	.Ldebug_info0
 999 000a 9E020000 		.4byte	0x29e
 1000 000e 43010000 		.4byte	0x143
 1001 0012 55534255 		.ascii	"USBUARTStart\000"
 1001      41525453 
 1001      74617274 
 1001      00
 1002 001f 59010000 		.4byte	0x159
 1003 0023 55534255 		.ascii	"USBUARTInit\000"
 1003      41525449 
 1003      6E697400 
 1004 002f 6F010000 		.4byte	0x16f
 1005 0033 55415254 		.ascii	"UARTBridgeComm\000"
 1005      42726964 
 1005      6765436F 
 1005      6D6D00
 1006 0042 00000000 		.4byte	0x0
 1007              		.section	.debug_aranges,"",%progbits
 1008 0000 2C000000 		.4byte	0x2c
 1009 0004 0200     		.2byte	0x2
 1010 0006 00000000 		.4byte	.Ldebug_info0
 1011 000a 04       		.byte	0x4
 1012 000b 00       		.byte	0x0
 1013 000c 0000     		.2byte	0x0
 1014 000e 0000     		.2byte	0x0
 1015 0010 00000000 		.4byte	.LFB31
 1016 0014 10000000 		.4byte	.LFE31-.LFB31
 1017 0018 00000000 		.4byte	.LFB30
 1018 001c 10000000 		.4byte	.LFE30-.LFB30
 1019 0020 00000000 		.4byte	.LFB29
 1020 0024 64010000 		.4byte	.LFE29-.LFB29
 1021 0028 00000000 		.4byte	0x0
 1022 002c 00000000 		.4byte	0x0
 1023              		.section	.debug_ranges,"",%progbits
 1024              	.Ldebug_ranges0:
 1025 0000 00000000 		.4byte	.Ltext0
 1026 0004 00000000 		.4byte	.Letext0
 1027 0008 00000000 		.4byte	.LFB31
 1028 000c 10000000 		.4byte	.LFE31
 1029 0010 00000000 		.4byte	.LFB30
 1030 0014 10000000 		.4byte	.LFE30
 1031 0018 00000000 		.4byte	.LFB29
 1032 001c 64010000 		.4byte	.LFE29
 1033 0020 00000000 		.4byte	0x0
 1034 0024 00000000 		.4byte	0x0
 1035              		.section	.debug_str,"MS",%progbits,1
 1036              	.LASF6:
 1037 0000 6C6F6E67 		.ascii	"long long int\000"
 1037      206C6F6E 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 25


 1037      6720696E 
 1037      7400
 1038              	.LASF35:
 1039 000e 55415254 		.ascii	"UART_Bridge_rxBufferRead\000"
 1039      5F427269 
 1039      6467655F 
 1039      72784275 
 1039      66666572 
 1040              	.LASF27:
 1041 0027 64445445 		.ascii	"dDTERate\000"
 1041      52617465 
 1041      00
 1042              	.LASF31:
 1043 0030 636F756E 		.ascii	"count\000"
 1043      7400
 1044              	.LASF34:
 1045 0036 55415254 		.ascii	"UART_Bridge_rxBuffer\000"
 1045      5F427269 
 1045      6467655F 
 1045      72784275 
 1045      66666572 
 1046              	.LASF33:
 1047 004b 62496E64 		.ascii	"bIndex\000"
 1047      657800
 1048              	.LASF3:
 1049 0052 73686F72 		.ascii	"short unsigned int\000"
 1049      7420756E 
 1049      7369676E 
 1049      65642069 
 1049      6E7400
 1050              	.LASF28:
 1051 0065 77446976 		.ascii	"wDivider\000"
 1051      69646572 
 1051      00
 1052              	.LASF24:
 1053 006e 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 1053      4246535F 
 1053      45505F43 
 1053      544C5F42 
 1053      4C4F434B 
 1054              	.LASF43:
 1055 0083 55415254 		.ascii	"UARTBridgeComm\000"
 1055      42726964 
 1055      6765436F 
 1055      6D6D00
 1056              	.LASF26:
 1057 0092 55534255 		.ascii	"USBUARTInit\000"
 1057      41525449 
 1057      6E697400 
 1058              	.LASF12:
 1059 009e 666C6F61 		.ascii	"float\000"
 1059      7400
 1060              	.LASF18:
 1061 00a4 6570546F 		.ascii	"epToggle\000"
 1061      67676C65 
 1061      00
 1062              	.LASF29:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 26


 1063 00ad 73697A65 		.ascii	"size\000"
 1063      00
 1064              	.LASF5:
 1065 00b2 6C6F6E67 		.ascii	"long unsigned int\000"
 1065      20756E73 
 1065      69676E65 
 1065      6420696E 
 1065      7400
 1066              	.LASF19:
 1067 00c4 61646472 		.ascii	"addr\000"
 1067      00
 1068              	.LASF37:
 1069 00c9 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1069      52784275 
 1069      66666572 
 1069      00
 1070              	.LASF38:
 1071 00d6 55534246 		.ascii	"USBFS_EP\000"
 1071      535F4550 
 1071      00
 1072              	.LASF1:
 1073 00df 756E7369 		.ascii	"unsigned char\000"
 1073      676E6564 
 1073      20636861 
 1073      7200
 1074              	.LASF25:
 1075 00ed 55534255 		.ascii	"USBUARTStart\000"
 1075      41525453 
 1075      74617274 
 1075      00
 1076              	.LASF13:
 1077 00fa 646F7562 		.ascii	"double\000"
 1077      6C6500
 1078              	.LASF15:
 1079 0101 61747472 		.ascii	"attrib\000"
 1079      696200
 1080              	.LASF21:
 1081 0108 62756666 		.ascii	"buffOffset\000"
 1081      4F666673 
 1081      657400
 1082              	.LASF36:
 1083 0113 55415254 		.ascii	"UART_Bridge_rxBufferLoopDetect\000"
 1083      5F427269 
 1083      6467655F 
 1083      72784275 
 1083      66666572 
 1084              	.LASF10:
 1085 0132 75696E74 		.ascii	"uint16\000"
 1085      313600
 1086              	.LASF16:
 1087 0139 61706945 		.ascii	"apiEpState\000"
 1087      70537461 
 1087      746500
 1088              	.LASF11:
 1089 0144 75696E74 		.ascii	"uint32\000"
 1089      333200
 1090              	.LASF8:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 27


 1091 014b 756E7369 		.ascii	"unsigned int\000"
 1091      676E6564 
 1091      20696E74 
 1091      00
 1092              	.LASF7:
 1093 0158 6C6F6E67 		.ascii	"long long unsigned int\000"
 1093      206C6F6E 
 1093      6720756E 
 1093      7369676E 
 1093      65642069 
 1094              	.LASF17:
 1095 016f 68774570 		.ascii	"hwEpState\000"
 1095      53746174 
 1095      6500
 1096              	.LASF42:
 1097 0179 5F555342 		.ascii	"_USBFS_EpCtlBlock\000"
 1097      46535F45 
 1097      7043746C 
 1097      426C6F63 
 1097      6B00
 1098              	.LASF32:
 1099 018b 77527842 		.ascii	"wRxBufferRead\000"
 1099      75666665 
 1099      72526561 
 1099      6400
 1100              	.LASF40:
 1101 0199 2E5C5553 		.ascii	".\\USBUART.c\000"
 1101      42554152 
 1101      542E6300 
 1102              	.LASF39:
 1103 01a5 474E5520 		.ascii	"GNU C 4.4.1\000"
 1103      4320342E 
 1103      342E3100 
 1104              	.LASF14:
 1105 01b1 63686172 		.ascii	"char\000"
 1105      00
 1106              	.LASF22:
 1107 01b6 62756666 		.ascii	"bufferSize\000"
 1107      65725369 
 1107      7A6500
 1108              	.LASF2:
 1109 01c1 73686F72 		.ascii	"short int\000"
 1109      7420696E 
 1109      7400
 1110              	.LASF30:
 1111 01cb 62756666 		.ascii	"buffer\000"
 1111      657200
 1112              	.LASF9:
 1113 01d2 75696E74 		.ascii	"uint8\000"
 1113      3800
 1114              	.LASF23:
 1115 01d8 696E7465 		.ascii	"interface\000"
 1115      72666163 
 1115      6500
 1116              	.LASF4:
 1117 01e2 6C6F6E67 		.ascii	"long int\000"
 1117      20696E74 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccmT2vFq.s 			page 28


 1117      00
 1118              	.LASF20:
 1119 01eb 65704D6F 		.ascii	"epMode\000"
 1119      646500
 1120              	.LASF0:
 1121 01f2 7369676E 		.ascii	"signed char\000"
 1121      65642063 
 1121      68617200 
 1122              	.LASF41:
 1123 01fe 5C5C7073 		.ascii	"\\\\psf\\Home\\Desktop\\KitProg version 2_03\\KitPr"
 1123      665C486F 
 1123      6D655C44 
 1123      65736B74 
 1123      6F705C4B 
 1124 022b 6F675C4B 		.ascii	"og\\KitProg.cydsn\000"
 1124      69745072 
 1124      6F672E63 
 1124      7964736E 
 1124      00
 1125              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
