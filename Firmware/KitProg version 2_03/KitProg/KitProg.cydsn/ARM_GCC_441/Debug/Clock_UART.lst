ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"Clock_UART.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 7B010000 		.text
  20      02006200 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.Clock_UART_Start,"ax",%progbits
  24              		.align	2
  25              		.global	Clock_UART_Start
  26              		.thumb
  27              		.thumb_func
  28              		.type	Clock_UART_Start, %function
  29              	Clock_UART_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC5\\Clock_UART.c"
   1:.\Generated_Source\PSoC5/Clock_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Clock_UART.c **** * File Name: Clock_UART.c
   3:.\Generated_Source\PSoC5/Clock_UART.c **** * Version 2.0
   4:.\Generated_Source\PSoC5/Clock_UART.c **** *
   5:.\Generated_Source\PSoC5/Clock_UART.c **** *  Description:
   6:.\Generated_Source\PSoC5/Clock_UART.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/Clock_UART.c **** *
   8:.\Generated_Source\PSoC5/Clock_UART.c **** *  Note:
   9:.\Generated_Source\PSoC5/Clock_UART.c **** *
  10:.\Generated_Source\PSoC5/Clock_UART.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/Clock_UART.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/Clock_UART.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/Clock_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/Clock_UART.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/Clock_UART.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/Clock_UART.c **** 
  17:.\Generated_Source\PSoC5/Clock_UART.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/Clock_UART.c **** #include "Clock_UART.h"
  19:.\Generated_Source\PSoC5/Clock_UART.c **** 
  20:.\Generated_Source\PSoC5/Clock_UART.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/Clock_UART.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/Clock_UART.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 2


  23:.\Generated_Source\PSoC5/Clock_UART.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/Clock_UART.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/Clock_UART.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/Clock_UART.c **** 
  27:.\Generated_Source\PSoC5/Clock_UART.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/Clock_UART.c **** 
  29:.\Generated_Source\PSoC5/Clock_UART.c **** 
  30:.\Generated_Source\PSoC5/Clock_UART.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/Clock_UART.c **** * Function Name: Clock_UART_Start
  32:.\Generated_Source\PSoC5/Clock_UART.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/Clock_UART.c **** *
  34:.\Generated_Source\PSoC5/Clock_UART.c **** * Summary:
  35:.\Generated_Source\PSoC5/Clock_UART.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/Clock_UART.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/Clock_UART.c **** *
  38:.\Generated_Source\PSoC5/Clock_UART.c **** * Parameters:
  39:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
  40:.\Generated_Source\PSoC5/Clock_UART.c **** *
  41:.\Generated_Source\PSoC5/Clock_UART.c **** * Returns:
  42:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
  43:.\Generated_Source\PSoC5/Clock_UART.c **** *
  44:.\Generated_Source\PSoC5/Clock_UART.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/Clock_UART.c **** void Clock_UART_Start(void) 
  46:.\Generated_Source\PSoC5/Clock_UART.c **** {
  32              		.loc 1 46 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_offset 7, -4
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  47:.\Generated_Source\PSoC5/Clock_UART.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/Clock_UART.c ****     Clock_UART_CLKEN |= Clock_UART_CLKEN_MASK;
  44              		.loc 1 48 0
  45 0004 44F2A233 		movw	r3, #:lower16:1073759138
  46 0008 C4F20003 		movt	r3, #:upper16:1073759138
  47 000c 44F2A232 		movw	r2, #:lower16:1073759138
  48 0010 C4F20002 		movt	r2, #:upper16:1073759138
  49 0014 1278     		ldrb	r2, [r2, #0]
  50 0016 D2B2     		uxtb	r2, r2
  51 0018 42F00202 		orr	r2, r2, #2
  52 001c D2B2     		uxtb	r2, r2
  53 001e 1A70     		strb	r2, [r3, #0]
  49:.\Generated_Source\PSoC5/Clock_UART.c **** 	Clock_UART_CLKSTBY |= Clock_UART_CLKSTBY_MASK;
  54              		.loc 1 49 0
  55 0020 44F2B233 		movw	r3, #:lower16:1073759154
  56 0024 C4F20003 		movt	r3, #:upper16:1073759154
  57 0028 44F2B232 		movw	r2, #:lower16:1073759154
  58 002c C4F20002 		movt	r2, #:upper16:1073759154
  59 0030 1278     		ldrb	r2, [r2, #0]
  60 0032 D2B2     		uxtb	r2, r2
  61 0034 42F00202 		orr	r2, r2, #2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 3


  62 0038 D2B2     		uxtb	r2, r2
  63 003a 1A70     		strb	r2, [r3, #0]
  50:.\Generated_Source\PSoC5/Clock_UART.c **** }
  64              		.loc 1 50 0
  65 003c BD46     		mov	sp, r7
  66 003e 80BC     		pop	{r7}
  67 0040 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE0:
  70              		.size	Clock_UART_Start, .-Clock_UART_Start
  71 0042 00BF     		.section	.text.Clock_UART_Stop,"ax",%progbits
  72              		.align	2
  73              		.global	Clock_UART_Stop
  74              		.thumb
  75              		.thumb_func
  76              		.type	Clock_UART_Stop, %function
  77              	Clock_UART_Stop:
  78              	.LFB1:
  51:.\Generated_Source\PSoC5/Clock_UART.c **** 
  52:.\Generated_Source\PSoC5/Clock_UART.c **** 
  53:.\Generated_Source\PSoC5/Clock_UART.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/Clock_UART.c **** * Function Name: Clock_UART_Stop
  55:.\Generated_Source\PSoC5/Clock_UART.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/Clock_UART.c **** *
  57:.\Generated_Source\PSoC5/Clock_UART.c **** * Summary:
  58:.\Generated_Source\PSoC5/Clock_UART.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/Clock_UART.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/Clock_UART.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/Clock_UART.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/Clock_UART.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/Clock_UART.c **** *
  64:.\Generated_Source\PSoC5/Clock_UART.c **** * Parameters:
  65:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
  66:.\Generated_Source\PSoC5/Clock_UART.c **** *
  67:.\Generated_Source\PSoC5/Clock_UART.c **** * Returns:
  68:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
  69:.\Generated_Source\PSoC5/Clock_UART.c **** *
  70:.\Generated_Source\PSoC5/Clock_UART.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/Clock_UART.c **** void Clock_UART_Stop(void) 
  72:.\Generated_Source\PSoC5/Clock_UART.c **** {
  79              		.loc 1 72 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_offset 7, -4
  89              	.LCFI3:
  90              		.cfi_def_cfa_register 7
  73:.\Generated_Source\PSoC5/Clock_UART.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/Clock_UART.c ****     Clock_UART_CLKEN &= (uint8)(~Clock_UART_CLKEN_MASK);
  91              		.loc 1 74 0
  92 0004 44F2A233 		movw	r3, #:lower16:1073759138
  93 0008 C4F20003 		movt	r3, #:upper16:1073759138
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 4


  94 000c 44F2A232 		movw	r2, #:lower16:1073759138
  95 0010 C4F20002 		movt	r2, #:upper16:1073759138
  96 0014 1278     		ldrb	r2, [r2, #0]
  97 0016 D2B2     		uxtb	r2, r2
  98 0018 02F0FD02 		and	r2, r2, #253
  99 001c 1A70     		strb	r2, [r3, #0]
  75:.\Generated_Source\PSoC5/Clock_UART.c **** 	Clock_UART_CLKSTBY &= (uint8)(~Clock_UART_CLKSTBY_MASK);
 100              		.loc 1 75 0
 101 001e 44F2B233 		movw	r3, #:lower16:1073759154
 102 0022 C4F20003 		movt	r3, #:upper16:1073759154
 103 0026 44F2B232 		movw	r2, #:lower16:1073759154
 104 002a C4F20002 		movt	r2, #:upper16:1073759154
 105 002e 1278     		ldrb	r2, [r2, #0]
 106 0030 D2B2     		uxtb	r2, r2
 107 0032 02F0FD02 		and	r2, r2, #253
 108 0036 1A70     		strb	r2, [r3, #0]
  76:.\Generated_Source\PSoC5/Clock_UART.c **** }
 109              		.loc 1 76 0
 110 0038 BD46     		mov	sp, r7
 111 003a 80BC     		pop	{r7}
 112 003c 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	Clock_UART_Stop, .-Clock_UART_Stop
 116 003e 00BF     		.section	.text.Clock_UART_StopBlock,"ax",%progbits
 117              		.align	2
 118              		.global	Clock_UART_StopBlock
 119              		.thumb
 120              		.thumb_func
 121              		.type	Clock_UART_StopBlock, %function
 122              	Clock_UART_StopBlock:
 123              	.LFB2:
  77:.\Generated_Source\PSoC5/Clock_UART.c **** 
  78:.\Generated_Source\PSoC5/Clock_UART.c **** 
  79:.\Generated_Source\PSoC5/Clock_UART.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/Clock_UART.c **** 
  81:.\Generated_Source\PSoC5/Clock_UART.c **** 
  82:.\Generated_Source\PSoC5/Clock_UART.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/Clock_UART.c **** * Function Name: Clock_UART_StopBlock
  84:.\Generated_Source\PSoC5/Clock_UART.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/Clock_UART.c **** *
  86:.\Generated_Source\PSoC5/Clock_UART.c **** * Summary:
  87:.\Generated_Source\PSoC5/Clock_UART.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/Clock_UART.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/Clock_UART.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/Clock_UART.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/Clock_UART.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/Clock_UART.c **** *
  93:.\Generated_Source\PSoC5/Clock_UART.c **** * Parameters:
  94:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
  95:.\Generated_Source\PSoC5/Clock_UART.c **** *
  96:.\Generated_Source\PSoC5/Clock_UART.c **** * Returns:
  97:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
  98:.\Generated_Source\PSoC5/Clock_UART.c **** *
  99:.\Generated_Source\PSoC5/Clock_UART.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/Clock_UART.c **** void Clock_UART_StopBlock(void) 
 101:.\Generated_Source\PSoC5/Clock_UART.c **** {
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 5


 124              		.loc 1 101 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 80B4     		push	{r7}
 130              	.LCFI4:
 131              		.cfi_def_cfa_offset 4
 132 0002 83B0     		sub	sp, sp, #12
 133              	.LCFI5:
 134              		.cfi_def_cfa_offset 16
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_offset 7, -4
 137              	.LCFI6:
 138              		.cfi_def_cfa_register 7
 102:.\Generated_Source\PSoC5/Clock_UART.c ****     if ((Clock_UART_CLKEN & Clock_UART_CLKEN_MASK) != 0u)
 139              		.loc 1 102 0
 140 0006 44F2A233 		movw	r3, #:lower16:1073759138
 141 000a C4F20003 		movt	r3, #:upper16:1073759138
 142 000e 1B78     		ldrb	r3, [r3, #0]
 143 0010 DBB2     		uxtb	r3, r3
 144 0012 03F00203 		and	r3, r3, #2
 145 0016 002B     		cmp	r3, #0
 146 0018 66D0     		beq	.L8
 147              	.LBB2:
 103:.\Generated_Source\PSoC5/Clock_UART.c ****     {
 104:.\Generated_Source\PSoC5/Clock_UART.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/Clock_UART.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/Clock_UART.c **** 
 107:.\Generated_Source\PSoC5/Clock_UART.c ****         CLK_DIST_LD = 0u;
 148              		.loc 1 107 0
 149 001a 44F20103 		movw	r3, #:lower16:1073758209
 150 001e C4F20003 		movt	r3, #:upper16:1073758209
 151 0022 4FF00002 		mov	r2, #0
 152 0026 1A70     		strb	r2, [r3, #0]
 108:.\Generated_Source\PSoC5/Clock_UART.c **** 
 109:.\Generated_Source\PSoC5/Clock_UART.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/Clock_UART.c **** #if defined(Clock_UART__CFG3)
 111:.\Generated_Source\PSoC5/Clock_UART.c ****         CLK_DIST_AMASK = Clock_UART_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/Clock_UART.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/Clock_UART.c **** #else
 114:.\Generated_Source\PSoC5/Clock_UART.c ****         CLK_DIST_DMASK = Clock_UART_CLKEN_MASK;
 153              		.loc 1 114 0
 154 0028 44F21003 		movw	r3, #:lower16:1073758224
 155 002c C4F20003 		movt	r3, #:upper16:1073758224
 156 0030 4FF00202 		mov	r2, #2
 157 0034 1A70     		strb	r2, [r3, #0]
 115:.\Generated_Source\PSoC5/Clock_UART.c ****         CLK_DIST_AMASK = 0x00u;
 158              		.loc 1 115 0
 159 0036 44F21403 		movw	r3, #:lower16:1073758228
 160 003a C4F20003 		movt	r3, #:upper16:1073758228
 161 003e 4FF00002 		mov	r2, #0
 162 0042 1A70     		strb	r2, [r3, #0]
 116:.\Generated_Source\PSoC5/Clock_UART.c **** #endif /* Clock_UART__CFG3 */
 117:.\Generated_Source\PSoC5/Clock_UART.c **** 
 118:.\Generated_Source\PSoC5/Clock_UART.c ****         /* Clear mask of bus clock. */
 119:.\Generated_Source\PSoC5/Clock_UART.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 6


 163              		.loc 1 119 0
 164 0044 44F20803 		movw	r3, #:lower16:1073758216
 165 0048 C4F20003 		movt	r3, #:upper16:1073758216
 166 004c 44F20802 		movw	r2, #:lower16:1073758216
 167 0050 C4F20002 		movt	r2, #:upper16:1073758216
 168 0054 1278     		ldrb	r2, [r2, #0]
 169 0056 D2B2     		uxtb	r2, r2
 170 0058 02F07F02 		and	r2, r2, #127
 171 005c 1A70     		strb	r2, [r3, #0]
 120:.\Generated_Source\PSoC5/Clock_UART.c **** 
 121:.\Generated_Source\PSoC5/Clock_UART.c ****         oldDivider = CY_GET_REG16(Clock_UART_DIV_PTR);
 172              		.loc 1 121 0
 173 005e 44F28403 		movw	r3, #:lower16:1073758340
 174 0062 C4F20003 		movt	r3, #:upper16:1073758340
 175 0066 1B88     		ldrh	r3, [r3, #0]	@ movhi
 176 0068 FB80     		strh	r3, [r7, #6]	@ movhi
 122:.\Generated_Source\PSoC5/Clock_UART.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 177              		.loc 1 122 0
 178 006a 44F20203 		movw	r3, #:lower16:1073758210
 179 006e C4F20003 		movt	r3, #:upper16:1073758210
 180 0072 FA88     		ldrh	r2, [r7, #6]	@ movhi
 181 0074 1A80     		strh	r2, [r3, #0]	@ movhi
 123:.\Generated_Source\PSoC5/Clock_UART.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 182              		.loc 1 123 0
 183 0076 44F20103 		movw	r3, #:lower16:1073758209
 184 007a C4F20003 		movt	r3, #:upper16:1073758209
 185 007e 4FF00702 		mov	r2, #7
 186 0082 1A70     		strb	r2, [r3, #0]
 187              	.L7:
 124:.\Generated_Source\PSoC5/Clock_UART.c **** 
 125:.\Generated_Source\PSoC5/Clock_UART.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/Clock_UART.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 188              		.loc 1 126 0
 189 0084 44F20103 		movw	r3, #:lower16:1073758209
 190 0088 C4F20003 		movt	r3, #:upper16:1073758209
 191 008c 1B78     		ldrb	r3, [r3, #0]
 192 008e DBB2     		uxtb	r3, r3
 193 0090 03F00103 		and	r3, r3, #1
 194 0094 DBB2     		uxtb	r3, r3
 195 0096 002B     		cmp	r3, #0
 196 0098 F4D1     		bne	.L7
 127:.\Generated_Source\PSoC5/Clock_UART.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/Clock_UART.c **** 
 129:.\Generated_Source\PSoC5/Clock_UART.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/Clock_UART.c ****         Clock_UART_CLKEN &= (uint8)(~Clock_UART_CLKEN_MASK);
 197              		.loc 1 130 0
 198 009a 44F2A233 		movw	r3, #:lower16:1073759138
 199 009e C4F20003 		movt	r3, #:upper16:1073759138
 200 00a2 44F2A232 		movw	r2, #:lower16:1073759138
 201 00a6 C4F20002 		movt	r2, #:upper16:1073759138
 202 00aa 1278     		ldrb	r2, [r2, #0]
 203 00ac D2B2     		uxtb	r2, r2
 204 00ae 02F0FD02 		and	r2, r2, #253
 205 00b2 1A70     		strb	r2, [r3, #0]
 131:.\Generated_Source\PSoC5/Clock_UART.c ****         Clock_UART_CLKSTBY &= (uint8)(~Clock_UART_CLKSTBY_MASK);
 206              		.loc 1 131 0
 207 00b4 44F2B233 		movw	r3, #:lower16:1073759154
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 7


 208 00b8 C4F20003 		movt	r3, #:upper16:1073759154
 209 00bc 44F2B232 		movw	r2, #:lower16:1073759154
 210 00c0 C4F20002 		movt	r2, #:upper16:1073759154
 211 00c4 1278     		ldrb	r2, [r2, #0]
 212 00c6 D2B2     		uxtb	r2, r2
 213 00c8 02F0FD02 		and	r2, r2, #253
 214 00cc 1A70     		strb	r2, [r3, #0]
 132:.\Generated_Source\PSoC5/Clock_UART.c **** 
 133:.\Generated_Source\PSoC5/Clock_UART.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/Clock_UART.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/Clock_UART.c ****         CLK_DIST_LD = 0x00u;
 215              		.loc 1 135 0
 216 00ce 44F20103 		movw	r3, #:lower16:1073758209
 217 00d2 C4F20003 		movt	r3, #:upper16:1073758209
 218 00d6 4FF00002 		mov	r2, #0
 219 00da 1A70     		strb	r2, [r3, #0]
 136:.\Generated_Source\PSoC5/Clock_UART.c ****         CY_SET_REG16(Clock_UART_DIV_PTR, oldDivider);
 220              		.loc 1 136 0
 221 00dc 44F28403 		movw	r3, #:lower16:1073758340
 222 00e0 C4F20003 		movt	r3, #:upper16:1073758340
 223 00e4 FA88     		ldrh	r2, [r7, #6]	@ movhi
 224 00e6 1A80     		strh	r2, [r3, #0]	@ movhi
 225              	.L8:
 226              	.LBE2:
 137:.\Generated_Source\PSoC5/Clock_UART.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/Clock_UART.c ****     }
 139:.\Generated_Source\PSoC5/Clock_UART.c **** }
 227              		.loc 1 139 0
 228 00e8 07F10C07 		add	r7, r7, #12
 229 00ec BD46     		mov	sp, r7
 230 00ee 80BC     		pop	{r7}
 231 00f0 7047     		bx	lr
 232              		.cfi_endproc
 233              	.LFE2:
 234              		.size	Clock_UART_StopBlock, .-Clock_UART_StopBlock
 235 00f2 00BF     		.section	.text.Clock_UART_StandbyPower,"ax",%progbits
 236              		.align	2
 237              		.global	Clock_UART_StandbyPower
 238              		.thumb
 239              		.thumb_func
 240              		.type	Clock_UART_StandbyPower, %function
 241              	Clock_UART_StandbyPower:
 242              	.LFB3:
 140:.\Generated_Source\PSoC5/Clock_UART.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/Clock_UART.c **** 
 142:.\Generated_Source\PSoC5/Clock_UART.c **** 
 143:.\Generated_Source\PSoC5/Clock_UART.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/Clock_UART.c **** * Function Name: Clock_UART_StandbyPower
 145:.\Generated_Source\PSoC5/Clock_UART.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/Clock_UART.c **** *
 147:.\Generated_Source\PSoC5/Clock_UART.c **** * Summary:
 148:.\Generated_Source\PSoC5/Clock_UART.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/Clock_UART.c **** *
 150:.\Generated_Source\PSoC5/Clock_UART.c **** * Parameters:
 151:.\Generated_Source\PSoC5/Clock_UART.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/Clock_UART.c **** *
 153:.\Generated_Source\PSoC5/Clock_UART.c **** * Returns:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 8


 154:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
 155:.\Generated_Source\PSoC5/Clock_UART.c **** *
 156:.\Generated_Source\PSoC5/Clock_UART.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/Clock_UART.c **** void Clock_UART_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/Clock_UART.c **** {
 243              		.loc 1 158 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 248 0000 80B4     		push	{r7}
 249              	.LCFI7:
 250              		.cfi_def_cfa_offset 4
 251 0002 83B0     		sub	sp, sp, #12
 252              	.LCFI8:
 253              		.cfi_def_cfa_offset 16
 254 0004 00AF     		add	r7, sp, #0
 255              		.cfi_offset 7, -4
 256              	.LCFI9:
 257              		.cfi_def_cfa_register 7
 258 0006 0346     		mov	r3, r0
 259 0008 FB71     		strb	r3, [r7, #7]
 159:.\Generated_Source\PSoC5/Clock_UART.c ****     if(state == 0u)
 260              		.loc 1 159 0
 261 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 262 000c 002B     		cmp	r3, #0
 263 000e 0DD1     		bne	.L10
 160:.\Generated_Source\PSoC5/Clock_UART.c ****     {
 161:.\Generated_Source\PSoC5/Clock_UART.c ****         Clock_UART_CLKSTBY &= (uint8)(~Clock_UART_CLKSTBY_MASK);
 264              		.loc 1 161 0
 265 0010 44F2B233 		movw	r3, #:lower16:1073759154
 266 0014 C4F20003 		movt	r3, #:upper16:1073759154
 267 0018 44F2B232 		movw	r2, #:lower16:1073759154
 268 001c C4F20002 		movt	r2, #:upper16:1073759154
 269 0020 1278     		ldrb	r2, [r2, #0]
 270 0022 D2B2     		uxtb	r2, r2
 271 0024 02F0FD02 		and	r2, r2, #253
 272 0028 1A70     		strb	r2, [r3, #0]
 273 002a 0DE0     		b	.L12
 274              	.L10:
 162:.\Generated_Source\PSoC5/Clock_UART.c ****     }
 163:.\Generated_Source\PSoC5/Clock_UART.c ****     else
 164:.\Generated_Source\PSoC5/Clock_UART.c ****     {
 165:.\Generated_Source\PSoC5/Clock_UART.c ****         Clock_UART_CLKSTBY |= Clock_UART_CLKSTBY_MASK;
 275              		.loc 1 165 0
 276 002c 44F2B233 		movw	r3, #:lower16:1073759154
 277 0030 C4F20003 		movt	r3, #:upper16:1073759154
 278 0034 44F2B232 		movw	r2, #:lower16:1073759154
 279 0038 C4F20002 		movt	r2, #:upper16:1073759154
 280 003c 1278     		ldrb	r2, [r2, #0]
 281 003e D2B2     		uxtb	r2, r2
 282 0040 42F00202 		orr	r2, r2, #2
 283 0044 D2B2     		uxtb	r2, r2
 284 0046 1A70     		strb	r2, [r3, #0]
 285              	.L12:
 166:.\Generated_Source\PSoC5/Clock_UART.c ****     }
 167:.\Generated_Source\PSoC5/Clock_UART.c **** }
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 9


 286              		.loc 1 167 0
 287 0048 07F10C07 		add	r7, r7, #12
 288 004c BD46     		mov	sp, r7
 289 004e 80BC     		pop	{r7}
 290 0050 7047     		bx	lr
 291              		.cfi_endproc
 292              	.LFE3:
 293              		.size	Clock_UART_StandbyPower, .-Clock_UART_StandbyPower
 294 0052 00BF     		.section	.text.Clock_UART_SetDividerRegister,"ax",%progbits
 295              		.align	2
 296              		.global	Clock_UART_SetDividerRegister
 297              		.thumb
 298              		.thumb_func
 299              		.type	Clock_UART_SetDividerRegister, %function
 300              	Clock_UART_SetDividerRegister:
 301              	.LFB4:
 168:.\Generated_Source\PSoC5/Clock_UART.c **** 
 169:.\Generated_Source\PSoC5/Clock_UART.c **** 
 170:.\Generated_Source\PSoC5/Clock_UART.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/Clock_UART.c **** * Function Name: Clock_UART_SetDividerRegister
 172:.\Generated_Source\PSoC5/Clock_UART.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/Clock_UART.c **** *
 174:.\Generated_Source\PSoC5/Clock_UART.c **** * Summary:
 175:.\Generated_Source\PSoC5/Clock_UART.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/Clock_UART.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/Clock_UART.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/Clock_UART.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/Clock_UART.c **** *
 180:.\Generated_Source\PSoC5/Clock_UART.c **** * Parameters:
 181:.\Generated_Source\PSoC5/Clock_UART.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/Clock_UART.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/Clock_UART.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/Clock_UART.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/Clock_UART.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/Clock_UART.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/Clock_UART.c **** *   cycle.
 188:.\Generated_Source\PSoC5/Clock_UART.c **** *
 189:.\Generated_Source\PSoC5/Clock_UART.c **** * Returns:
 190:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
 191:.\Generated_Source\PSoC5/Clock_UART.c **** *
 192:.\Generated_Source\PSoC5/Clock_UART.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/Clock_UART.c **** void Clock_UART_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/Clock_UART.c ****                                 
 195:.\Generated_Source\PSoC5/Clock_UART.c **** {
 302              		.loc 1 195 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 16
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306 0000 80B5     		push	{r7, lr}
 307              	.LCFI10:
 308              		.cfi_def_cfa_offset 8
 309 0002 84B0     		sub	sp, sp, #16
 310              	.LCFI11:
 311              		.cfi_def_cfa_offset 24
 312 0004 00AF     		add	r7, sp, #0
 313              		.cfi_offset 14, -4
 314              		.cfi_offset 7, -8
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 10


 315              	.LCFI12:
 316              		.cfi_def_cfa_register 7
 317 0006 0246     		mov	r2, r0
 318 0008 0B46     		mov	r3, r1
 319 000a FA80     		strh	r2, [r7, #6]	@ movhi
 320 000c 7B71     		strb	r3, [r7, #5]
 196:.\Generated_Source\PSoC5/Clock_UART.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/Clock_UART.c **** 
 198:.\Generated_Source\PSoC5/Clock_UART.c ****     uint8 currSrc = Clock_UART_GetSourceRegister();
 321              		.loc 1 198 0
 322 000e FFF7FEFF 		bl	Clock_UART_GetSourceRegister
 323 0012 0346     		mov	r3, r0
 324 0014 7B73     		strb	r3, [r7, #13]
 199:.\Generated_Source\PSoC5/Clock_UART.c ****     uint16 oldDivider = Clock_UART_GetDividerRegister();
 325              		.loc 1 199 0
 326 0016 FFF7FEFF 		bl	Clock_UART_GetDividerRegister
 327 001a 0346     		mov	r3, r0
 328 001c FB81     		strh	r3, [r7, #14]	@ movhi
 200:.\Generated_Source\PSoC5/Clock_UART.c **** 
 201:.\Generated_Source\PSoC5/Clock_UART.c ****     if (clkDivider != oldDivider)
 329              		.loc 1 201 0
 330 001e FA88     		ldrh	r2, [r7, #6]
 331 0020 FB89     		ldrh	r3, [r7, #14]
 332 0022 9A42     		cmp	r2, r3
 333 0024 00F0DA80 		beq	.L26
 202:.\Generated_Source\PSoC5/Clock_UART.c ****     {
 203:.\Generated_Source\PSoC5/Clock_UART.c ****         enabled = Clock_UART_CLKEN & Clock_UART_CLKEN_MASK;
 334              		.loc 1 203 0
 335 0028 44F2A233 		movw	r3, #:lower16:1073759138
 336 002c C4F20003 		movt	r3, #:upper16:1073759138
 337 0030 1B78     		ldrb	r3, [r3, #0]
 338 0032 DBB2     		uxtb	r3, r3
 339 0034 03F00203 		and	r3, r3, #2
 340 0038 3B73     		strb	r3, [r7, #12]
 204:.\Generated_Source\PSoC5/Clock_UART.c **** 
 205:.\Generated_Source\PSoC5/Clock_UART.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 341              		.loc 1 205 0
 342 003a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 343 003c 002B     		cmp	r3, #0
 344 003e 31D1     		bne	.L15
 345 0040 FB89     		ldrh	r3, [r7, #14]
 346 0042 002B     		cmp	r3, #0
 347 0044 02D0     		beq	.L16
 348 0046 FB88     		ldrh	r3, [r7, #6]
 349 0048 002B     		cmp	r3, #0
 350 004a 2BD1     		bne	.L15
 351              	.L16:
 206:.\Generated_Source\PSoC5/Clock_UART.c ****         {
 207:.\Generated_Source\PSoC5/Clock_UART.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/Clock_UART.c ****             if (oldDivider == 0u)
 352              		.loc 1 208 0
 353 004c FB89     		ldrh	r3, [r7, #14]
 354 004e 002B     		cmp	r3, #0
 355 0050 13D1     		bne	.L17
 209:.\Generated_Source\PSoC5/Clock_UART.c ****             {
 210:.\Generated_Source\PSoC5/Clock_UART.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/Clock_UART.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 11


 212:.\Generated_Source\PSoC5/Clock_UART.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/Clock_UART.c ****                 CY_SET_REG16(Clock_UART_DIV_PTR, clkDivider);
 356              		.loc 1 213 0
 357 0052 44F28403 		movw	r3, #:lower16:1073758340
 358 0056 C4F20003 		movt	r3, #:upper16:1073758340
 359 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 360 005c 1A80     		strh	r2, [r3, #0]	@ movhi
 214:.\Generated_Source\PSoC5/Clock_UART.c ****                 Clock_UART_MOD_SRC &= (uint8)(~CYCLK_SSS);
 361              		.loc 1 214 0
 362 005e 44F28603 		movw	r3, #:lower16:1073758342
 363 0062 C4F20003 		movt	r3, #:upper16:1073758342
 364 0066 44F28602 		movw	r2, #:lower16:1073758342
 365 006a C4F20002 		movt	r2, #:upper16:1073758342
 366 006e 1278     		ldrb	r2, [r2, #0]
 367 0070 D2B2     		uxtb	r2, r2
 368 0072 02F0BF02 		and	r2, r2, #191
 369 0076 1A70     		strb	r2, [r3, #0]
 370              		.loc 1 205 0
 371 0078 B0E0     		b	.L26
 372              	.L17:
 215:.\Generated_Source\PSoC5/Clock_UART.c ****             }
 216:.\Generated_Source\PSoC5/Clock_UART.c ****             else
 217:.\Generated_Source\PSoC5/Clock_UART.c ****             {
 218:.\Generated_Source\PSoC5/Clock_UART.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/Clock_UART.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/Clock_UART.c ****                 Clock_UART_MOD_SRC |= CYCLK_SSS;
 373              		.loc 1 220 0
 374 007a 44F28603 		movw	r3, #:lower16:1073758342
 375 007e C4F20003 		movt	r3, #:upper16:1073758342
 376 0082 44F28602 		movw	r2, #:lower16:1073758342
 377 0086 C4F20002 		movt	r2, #:upper16:1073758342
 378 008a 1278     		ldrb	r2, [r2, #0]
 379 008c D2B2     		uxtb	r2, r2
 380 008e 42F04002 		orr	r2, r2, #64
 381 0092 D2B2     		uxtb	r2, r2
 382 0094 1A70     		strb	r2, [r3, #0]
 221:.\Generated_Source\PSoC5/Clock_UART.c ****                 CY_SET_REG16(Clock_UART_DIV_PTR, clkDivider);
 383              		.loc 1 221 0
 384 0096 44F28403 		movw	r3, #:lower16:1073758340
 385 009a C4F20003 		movt	r3, #:upper16:1073758340
 386 009e FA88     		ldrh	r2, [r7, #6]	@ movhi
 387 00a0 1A80     		strh	r2, [r3, #0]	@ movhi
 388              		.loc 1 205 0
 389 00a2 9BE0     		b	.L26
 390              	.L15:
 222:.\Generated_Source\PSoC5/Clock_UART.c ****             }
 223:.\Generated_Source\PSoC5/Clock_UART.c ****         }
 224:.\Generated_Source\PSoC5/Clock_UART.c ****         else
 225:.\Generated_Source\PSoC5/Clock_UART.c ****         {
 226:.\Generated_Source\PSoC5/Clock_UART.c **** 			
 227:.\Generated_Source\PSoC5/Clock_UART.c ****             if (enabled != 0u)
 391              		.loc 1 227 0
 392 00a4 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 393 00a6 002B     		cmp	r3, #0
 394 00a8 5AD0     		beq	.L19
 228:.\Generated_Source\PSoC5/Clock_UART.c ****             {
 229:.\Generated_Source\PSoC5/Clock_UART.c ****                 CLK_DIST_LD = 0x00u;
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 12


 395              		.loc 1 229 0
 396 00aa 44F20103 		movw	r3, #:lower16:1073758209
 397 00ae C4F20003 		movt	r3, #:upper16:1073758209
 398 00b2 4FF00002 		mov	r2, #0
 399 00b6 1A70     		strb	r2, [r3, #0]
 230:.\Generated_Source\PSoC5/Clock_UART.c **** 
 231:.\Generated_Source\PSoC5/Clock_UART.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/Clock_UART.c **** #if defined(Clock_UART__CFG3)
 233:.\Generated_Source\PSoC5/Clock_UART.c ****                 CLK_DIST_AMASK = Clock_UART_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/Clock_UART.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/Clock_UART.c **** #else
 236:.\Generated_Source\PSoC5/Clock_UART.c ****                 CLK_DIST_DMASK = Clock_UART_CLKEN_MASK;
 400              		.loc 1 236 0
 401 00b8 44F21003 		movw	r3, #:lower16:1073758224
 402 00bc C4F20003 		movt	r3, #:upper16:1073758224
 403 00c0 4FF00202 		mov	r2, #2
 404 00c4 1A70     		strb	r2, [r3, #0]
 237:.\Generated_Source\PSoC5/Clock_UART.c ****                 CLK_DIST_AMASK = 0x00u;
 405              		.loc 1 237 0
 406 00c6 44F21403 		movw	r3, #:lower16:1073758228
 407 00ca C4F20003 		movt	r3, #:upper16:1073758228
 408 00ce 4FF00002 		mov	r2, #0
 409 00d2 1A70     		strb	r2, [r3, #0]
 238:.\Generated_Source\PSoC5/Clock_UART.c **** #endif /* Clock_UART__CFG3 */
 239:.\Generated_Source\PSoC5/Clock_UART.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/Clock_UART.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 410              		.loc 1 240 0
 411 00d4 44F20803 		movw	r3, #:lower16:1073758216
 412 00d8 C4F20003 		movt	r3, #:upper16:1073758216
 413 00dc 44F20802 		movw	r2, #:lower16:1073758216
 414 00e0 C4F20002 		movt	r2, #:upper16:1073758216
 415 00e4 1278     		ldrb	r2, [r2, #0]
 416 00e6 D2B2     		uxtb	r2, r2
 417 00e8 02F07F02 		and	r2, r2, #127
 418 00ec 1A70     		strb	r2, [r3, #0]
 241:.\Generated_Source\PSoC5/Clock_UART.c **** 
 242:.\Generated_Source\PSoC5/Clock_UART.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/Clock_UART.c ****                 if (((Clock_UART_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 419              		.loc 1 243 0
 420 00ee 44F28603 		movw	r3, #:lower16:1073758342
 421 00f2 C4F20003 		movt	r3, #:upper16:1073758342
 422 00f6 1B78     		ldrb	r3, [r3, #0]
 423 00f8 DBB2     		uxtb	r3, r3
 424 00fa 03F00803 		and	r3, r3, #8
 425 00fe 002B     		cmp	r3, #0
 426 0100 02D0     		beq	.L20
 427 0102 FB88     		ldrh	r3, [r7, #6]
 428 0104 002B     		cmp	r3, #0
 429 0106 2BD1     		bne	.L19
 430              	.L20:
 244:.\Generated_Source\PSoC5/Clock_UART.c ****                 {
 245:.\Generated_Source\PSoC5/Clock_UART.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/Clock_UART.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 431              		.loc 1 246 0
 432 0108 44F20203 		movw	r3, #:lower16:1073758210
 433 010c C4F20003 		movt	r3, #:upper16:1073758210
 434 0110 FA89     		ldrh	r2, [r7, #14]	@ movhi
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 13


 435 0112 1A80     		strh	r2, [r3, #0]	@ movhi
 247:.\Generated_Source\PSoC5/Clock_UART.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 436              		.loc 1 247 0
 437 0114 44F20103 		movw	r3, #:lower16:1073758209
 438 0118 C4F20003 		movt	r3, #:upper16:1073758209
 439 011c 4FF00702 		mov	r2, #7
 440 0120 1A70     		strb	r2, [r3, #0]
 441              	.L21:
 248:.\Generated_Source\PSoC5/Clock_UART.c **** 
 249:.\Generated_Source\PSoC5/Clock_UART.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/Clock_UART.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 442              		.loc 1 250 0
 443 0122 44F20103 		movw	r3, #:lower16:1073758209
 444 0126 C4F20003 		movt	r3, #:upper16:1073758209
 445 012a 1B78     		ldrb	r3, [r3, #0]
 446 012c DBB2     		uxtb	r3, r3
 447 012e 03F00103 		and	r3, r3, #1
 448 0132 DBB2     		uxtb	r3, r3
 449 0134 002B     		cmp	r3, #0
 450 0136 F4D1     		bne	.L21
 251:.\Generated_Source\PSoC5/Clock_UART.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/Clock_UART.c **** 
 253:.\Generated_Source\PSoC5/Clock_UART.c ****                     Clock_UART_CLKEN &= (uint8)(~Clock_UART_CLKEN_MASK);
 451              		.loc 1 253 0
 452 0138 44F2A233 		movw	r3, #:lower16:1073759138
 453 013c C4F20003 		movt	r3, #:upper16:1073759138
 454 0140 44F2A232 		movw	r2, #:lower16:1073759138
 455 0144 C4F20002 		movt	r2, #:upper16:1073759138
 456 0148 1278     		ldrb	r2, [r2, #0]
 457 014a D2B2     		uxtb	r2, r2
 458 014c 02F0FD02 		and	r2, r2, #253
 459 0150 1A70     		strb	r2, [r3, #0]
 254:.\Generated_Source\PSoC5/Clock_UART.c **** 
 255:.\Generated_Source\PSoC5/Clock_UART.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/Clock_UART.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/Clock_UART.c ****                     CLK_DIST_LD = 0x00u;
 460              		.loc 1 257 0
 461 0152 44F20103 		movw	r3, #:lower16:1073758209
 462 0156 C4F20003 		movt	r3, #:upper16:1073758209
 463 015a 4FF00002 		mov	r2, #0
 464 015e 1A70     		strb	r2, [r3, #0]
 465              	.L19:
 258:.\Generated_Source\PSoC5/Clock_UART.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/Clock_UART.c ****                 }
 260:.\Generated_Source\PSoC5/Clock_UART.c ****             }
 261:.\Generated_Source\PSoC5/Clock_UART.c **** 
 262:.\Generated_Source\PSoC5/Clock_UART.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/Clock_UART.c ****             if ((Clock_UART_CLKEN & Clock_UART_CLKEN_MASK) != 0u)
 466              		.loc 1 263 0
 467 0160 44F2A233 		movw	r3, #:lower16:1073759138
 468 0164 C4F20003 		movt	r3, #:upper16:1073759138
 469 0168 1B78     		ldrb	r3, [r3, #0]
 470 016a DBB2     		uxtb	r3, r3
 471 016c 03F00203 		and	r3, r3, #2
 472 0170 002B     		cmp	r3, #0
 473 0172 1ED0     		beq	.L22
 264:.\Generated_Source\PSoC5/Clock_UART.c ****             {
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 14


 265:.\Generated_Source\PSoC5/Clock_UART.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/Clock_UART.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 474              		.loc 1 266 0
 475 0174 44F20203 		movw	r3, #:lower16:1073758210
 476 0178 C4F20003 		movt	r3, #:upper16:1073758210
 477 017c FA88     		ldrh	r2, [r7, #6]	@ movhi
 478 017e 1A80     		strh	r2, [r3, #0]	@ movhi
 267:.\Generated_Source\PSoC5/Clock_UART.c **** 
 268:.\Generated_Source\PSoC5/Clock_UART.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 479              		.loc 1 268 0
 480 0180 44F20103 		movw	r3, #:lower16:1073758209
 481 0184 C4F20003 		movt	r3, #:upper16:1073758209
 482 0188 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 483 018a 002A     		cmp	r2, #0
 484 018c 02D0     		beq	.L23
 485 018e 4FF00302 		mov	r2, #3
 486 0192 01E0     		b	.L24
 487              	.L23:
 488 0194 4FF00102 		mov	r2, #1
 489              	.L24:
 490 0198 1A70     		strb	r2, [r3, #0]
 491              	.L25:
 269:.\Generated_Source\PSoC5/Clock_UART.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 492              		.loc 1 269 0
 493 019a 44F20103 		movw	r3, #:lower16:1073758209
 494 019e C4F20003 		movt	r3, #:upper16:1073758209
 495 01a2 1B78     		ldrb	r3, [r3, #0]
 496 01a4 DBB2     		uxtb	r3, r3
 497 01a6 03F00103 		and	r3, r3, #1
 498 01aa DBB2     		uxtb	r3, r3
 499 01ac 002B     		cmp	r3, #0
 500 01ae F4D1     		bne	.L25
 501 01b0 14E0     		b	.L26
 502              	.L22:
 270:.\Generated_Source\PSoC5/Clock_UART.c ****             }
 271:.\Generated_Source\PSoC5/Clock_UART.c ****             else
 272:.\Generated_Source\PSoC5/Clock_UART.c ****             {
 273:.\Generated_Source\PSoC5/Clock_UART.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/Clock_UART.c ****                 CY_SET_REG16(Clock_UART_DIV_PTR, clkDivider);
 503              		.loc 1 274 0
 504 01b2 44F28403 		movw	r3, #:lower16:1073758340
 505 01b6 C4F20003 		movt	r3, #:upper16:1073758340
 506 01ba FA88     		ldrh	r2, [r7, #6]	@ movhi
 507 01bc 1A80     		strh	r2, [r3, #0]	@ movhi
 275:.\Generated_Source\PSoC5/Clock_UART.c **** 				Clock_UART_CLKEN |= enabled;
 508              		.loc 1 275 0
 509 01be 44F2A233 		movw	r3, #:lower16:1073759138
 510 01c2 C4F20003 		movt	r3, #:upper16:1073759138
 511 01c6 44F2A232 		movw	r2, #:lower16:1073759138
 512 01ca C4F20002 		movt	r2, #:upper16:1073759138
 513 01ce 1278     		ldrb	r2, [r2, #0]
 514 01d0 D1B2     		uxtb	r1, r2
 515 01d2 3A7B     		ldrb	r2, [r7, #12]
 516 01d4 41EA0202 		orr	r2, r1, r2
 517 01d8 D2B2     		uxtb	r2, r2
 518 01da 1A70     		strb	r2, [r3, #0]
 519              	.L26:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 15


 276:.\Generated_Source\PSoC5/Clock_UART.c ****             }
 277:.\Generated_Source\PSoC5/Clock_UART.c ****         }
 278:.\Generated_Source\PSoC5/Clock_UART.c ****     }
 279:.\Generated_Source\PSoC5/Clock_UART.c **** }
 520              		.loc 1 279 0
 521 01dc 07F11007 		add	r7, r7, #16
 522 01e0 BD46     		mov	sp, r7
 523 01e2 80BD     		pop	{r7, pc}
 524              		.cfi_endproc
 525              	.LFE4:
 526              		.size	Clock_UART_SetDividerRegister, .-Clock_UART_SetDividerRegister
 527              		.section	.text.Clock_UART_GetDividerRegister,"ax",%progbits
 528              		.align	2
 529              		.global	Clock_UART_GetDividerRegister
 530              		.thumb
 531              		.thumb_func
 532              		.type	Clock_UART_GetDividerRegister, %function
 533              	Clock_UART_GetDividerRegister:
 534              	.LFB5:
 280:.\Generated_Source\PSoC5/Clock_UART.c **** 
 281:.\Generated_Source\PSoC5/Clock_UART.c **** 
 282:.\Generated_Source\PSoC5/Clock_UART.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/Clock_UART.c **** * Function Name: Clock_UART_GetDividerRegister
 284:.\Generated_Source\PSoC5/Clock_UART.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/Clock_UART.c **** *
 286:.\Generated_Source\PSoC5/Clock_UART.c **** * Summary:
 287:.\Generated_Source\PSoC5/Clock_UART.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/Clock_UART.c **** *
 289:.\Generated_Source\PSoC5/Clock_UART.c **** * Parameters:
 290:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
 291:.\Generated_Source\PSoC5/Clock_UART.c **** *
 292:.\Generated_Source\PSoC5/Clock_UART.c **** * Returns:
 293:.\Generated_Source\PSoC5/Clock_UART.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/Clock_UART.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/Clock_UART.c **** *
 296:.\Generated_Source\PSoC5/Clock_UART.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/Clock_UART.c **** uint16 Clock_UART_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/Clock_UART.c **** {
 535              		.loc 1 298 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 540 0000 80B4     		push	{r7}
 541              	.LCFI13:
 542              		.cfi_def_cfa_offset 4
 543 0002 00AF     		add	r7, sp, #0
 544              		.cfi_offset 7, -4
 545              	.LCFI14:
 546              		.cfi_def_cfa_register 7
 299:.\Generated_Source\PSoC5/Clock_UART.c ****     return CY_GET_REG16(Clock_UART_DIV_PTR);
 547              		.loc 1 299 0
 548 0004 44F28403 		movw	r3, #:lower16:1073758340
 549 0008 C4F20003 		movt	r3, #:upper16:1073758340
 550 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 551 000e 9BB2     		uxth	r3, r3
 300:.\Generated_Source\PSoC5/Clock_UART.c **** }
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 16


 552              		.loc 1 300 0
 553 0010 1846     		mov	r0, r3
 554 0012 BD46     		mov	sp, r7
 555 0014 80BC     		pop	{r7}
 556 0016 7047     		bx	lr
 557              		.cfi_endproc
 558              	.LFE5:
 559              		.size	Clock_UART_GetDividerRegister, .-Clock_UART_GetDividerRegister
 560              		.section	.text.Clock_UART_SetModeRegister,"ax",%progbits
 561              		.align	2
 562              		.global	Clock_UART_SetModeRegister
 563              		.thumb
 564              		.thumb_func
 565              		.type	Clock_UART_SetModeRegister, %function
 566              	Clock_UART_SetModeRegister:
 567              	.LFB6:
 301:.\Generated_Source\PSoC5/Clock_UART.c **** 
 302:.\Generated_Source\PSoC5/Clock_UART.c **** 
 303:.\Generated_Source\PSoC5/Clock_UART.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/Clock_UART.c **** * Function Name: Clock_UART_SetModeRegister
 305:.\Generated_Source\PSoC5/Clock_UART.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/Clock_UART.c **** *
 307:.\Generated_Source\PSoC5/Clock_UART.c **** * Summary:
 308:.\Generated_Source\PSoC5/Clock_UART.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/Clock_UART.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/Clock_UART.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/Clock_UART.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/Clock_UART.c **** *
 313:.\Generated_Source\PSoC5/Clock_UART.c **** * Parameters:
 314:.\Generated_Source\PSoC5/Clock_UART.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/Clock_UART.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/Clock_UART.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/Clock_UART.c **** *                 value.
 319:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/Clock_UART.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/Clock_UART.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/Clock_UART.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/Clock_UART.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/Clock_UART.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/Clock_UART.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/Clock_UART.c **** *
 328:.\Generated_Source\PSoC5/Clock_UART.c **** * Returns:
 329:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
 330:.\Generated_Source\PSoC5/Clock_UART.c **** *
 331:.\Generated_Source\PSoC5/Clock_UART.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/Clock_UART.c **** void Clock_UART_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/Clock_UART.c **** {
 568              		.loc 1 333 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 8
 571              		@ frame_needed = 1, uses_anonymous_args = 0
 572              		@ link register save eliminated.
 573 0000 80B4     		push	{r7}
 574              	.LCFI15:
 575              		.cfi_def_cfa_offset 4
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 17


 576 0002 83B0     		sub	sp, sp, #12
 577              	.LCFI16:
 578              		.cfi_def_cfa_offset 16
 579 0004 00AF     		add	r7, sp, #0
 580              		.cfi_offset 7, -4
 581              	.LCFI17:
 582              		.cfi_def_cfa_register 7
 583 0006 0346     		mov	r3, r0
 584 0008 FB71     		strb	r3, [r7, #7]
 334:.\Generated_Source\PSoC5/Clock_UART.c ****     Clock_UART_MOD_SRC |= modeBitMask & (uint8)Clock_UART_MODE_MASK;
 585              		.loc 1 334 0
 586 000a 44F28603 		movw	r3, #:lower16:1073758342
 587 000e C4F20003 		movt	r3, #:upper16:1073758342
 588 0012 44F28602 		movw	r2, #:lower16:1073758342
 589 0016 C4F20002 		movt	r2, #:upper16:1073758342
 590 001a 1278     		ldrb	r2, [r2, #0]
 591 001c D2B2     		uxtb	r2, r2
 592 001e 1146     		mov	r1, r2
 593 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 594 0022 D2B2     		uxtb	r2, r2
 595 0024 02F0F802 		and	r2, r2, #248
 596 0028 41EA0202 		orr	r2, r1, r2
 597 002c D2B2     		uxtb	r2, r2
 598 002e D2B2     		uxtb	r2, r2
 599 0030 1A70     		strb	r2, [r3, #0]
 335:.\Generated_Source\PSoC5/Clock_UART.c **** }
 600              		.loc 1 335 0
 601 0032 07F10C07 		add	r7, r7, #12
 602 0036 BD46     		mov	sp, r7
 603 0038 80BC     		pop	{r7}
 604 003a 7047     		bx	lr
 605              		.cfi_endproc
 606              	.LFE6:
 607              		.size	Clock_UART_SetModeRegister, .-Clock_UART_SetModeRegister
 608              		.section	.text.Clock_UART_ClearModeRegister,"ax",%progbits
 609              		.align	2
 610              		.global	Clock_UART_ClearModeRegister
 611              		.thumb
 612              		.thumb_func
 613              		.type	Clock_UART_ClearModeRegister, %function
 614              	Clock_UART_ClearModeRegister:
 615              	.LFB7:
 336:.\Generated_Source\PSoC5/Clock_UART.c **** 
 337:.\Generated_Source\PSoC5/Clock_UART.c **** 
 338:.\Generated_Source\PSoC5/Clock_UART.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/Clock_UART.c **** * Function Name: Clock_UART_ClearModeRegister
 340:.\Generated_Source\PSoC5/Clock_UART.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/Clock_UART.c **** *
 342:.\Generated_Source\PSoC5/Clock_UART.c **** * Summary:
 343:.\Generated_Source\PSoC5/Clock_UART.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/Clock_UART.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/Clock_UART.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/Clock_UART.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/Clock_UART.c **** *
 348:.\Generated_Source\PSoC5/Clock_UART.c **** * Parameters:
 349:.\Generated_Source\PSoC5/Clock_UART.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/Clock_UART.c **** *   clkMode should be a set of the following optional bits or'ed together.
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 18


 351:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/Clock_UART.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/Clock_UART.c **** *                 value.
 354:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/Clock_UART.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/Clock_UART.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/Clock_UART.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/Clock_UART.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/Clock_UART.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/Clock_UART.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/Clock_UART.c **** *
 363:.\Generated_Source\PSoC5/Clock_UART.c **** * Returns:
 364:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
 365:.\Generated_Source\PSoC5/Clock_UART.c **** *
 366:.\Generated_Source\PSoC5/Clock_UART.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/Clock_UART.c **** void Clock_UART_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/Clock_UART.c **** {
 616              		.loc 1 368 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              	.LCFI18:
 623              		.cfi_def_cfa_offset 4
 624 0002 83B0     		sub	sp, sp, #12
 625              	.LCFI19:
 626              		.cfi_def_cfa_offset 16
 627 0004 00AF     		add	r7, sp, #0
 628              		.cfi_offset 7, -4
 629              	.LCFI20:
 630              		.cfi_def_cfa_register 7
 631 0006 0346     		mov	r3, r0
 632 0008 FB71     		strb	r3, [r7, #7]
 369:.\Generated_Source\PSoC5/Clock_UART.c ****     Clock_UART_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(Clock_UART_MODE_MASK));
 633              		.loc 1 369 0
 634 000a 44F28603 		movw	r3, #:lower16:1073758342
 635 000e C4F20003 		movt	r3, #:upper16:1073758342
 636 0012 44F28602 		movw	r2, #:lower16:1073758342
 637 0016 C4F20002 		movt	r2, #:upper16:1073758342
 638 001a 1278     		ldrb	r2, [r2, #0]
 639 001c D1B2     		uxtb	r1, r2
 640 001e FA79     		ldrb	r2, [r7, #7]
 641 0020 6FEA0202 		mvn	r2, r2
 642 0024 D2B2     		uxtb	r2, r2
 643 0026 42F00702 		orr	r2, r2, #7
 644 002a D2B2     		uxtb	r2, r2
 645 002c 01EA0202 		and	r2, r1, r2
 646 0030 D2B2     		uxtb	r2, r2
 647 0032 1A70     		strb	r2, [r3, #0]
 370:.\Generated_Source\PSoC5/Clock_UART.c **** }
 648              		.loc 1 370 0
 649 0034 07F10C07 		add	r7, r7, #12
 650 0038 BD46     		mov	sp, r7
 651 003a 80BC     		pop	{r7}
 652 003c 7047     		bx	lr
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 19


 653              		.cfi_endproc
 654              	.LFE7:
 655              		.size	Clock_UART_ClearModeRegister, .-Clock_UART_ClearModeRegister
 656 003e 00BF     		.section	.text.Clock_UART_GetModeRegister,"ax",%progbits
 657              		.align	2
 658              		.global	Clock_UART_GetModeRegister
 659              		.thumb
 660              		.thumb_func
 661              		.type	Clock_UART_GetModeRegister, %function
 662              	Clock_UART_GetModeRegister:
 663              	.LFB8:
 371:.\Generated_Source\PSoC5/Clock_UART.c **** 
 372:.\Generated_Source\PSoC5/Clock_UART.c **** 
 373:.\Generated_Source\PSoC5/Clock_UART.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/Clock_UART.c **** * Function Name: Clock_UART_GetModeRegister
 375:.\Generated_Source\PSoC5/Clock_UART.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/Clock_UART.c **** *
 377:.\Generated_Source\PSoC5/Clock_UART.c **** * Summary:
 378:.\Generated_Source\PSoC5/Clock_UART.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/Clock_UART.c **** *
 380:.\Generated_Source\PSoC5/Clock_UART.c **** * Parameters:
 381:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
 382:.\Generated_Source\PSoC5/Clock_UART.c **** *
 383:.\Generated_Source\PSoC5/Clock_UART.c **** * Returns:
 384:.\Generated_Source\PSoC5/Clock_UART.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/Clock_UART.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/Clock_UART.c **** *
 387:.\Generated_Source\PSoC5/Clock_UART.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/Clock_UART.c **** uint8 Clock_UART_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/Clock_UART.c **** {
 664              		.loc 1 389 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669 0000 80B4     		push	{r7}
 670              	.LCFI21:
 671              		.cfi_def_cfa_offset 4
 672 0002 00AF     		add	r7, sp, #0
 673              		.cfi_offset 7, -4
 674              	.LCFI22:
 675              		.cfi_def_cfa_register 7
 390:.\Generated_Source\PSoC5/Clock_UART.c ****     return Clock_UART_MOD_SRC & (uint8)(Clock_UART_MODE_MASK);
 676              		.loc 1 390 0
 677 0004 44F28603 		movw	r3, #:lower16:1073758342
 678 0008 C4F20003 		movt	r3, #:upper16:1073758342
 679 000c 1B78     		ldrb	r3, [r3, #0]
 680 000e DBB2     		uxtb	r3, r3
 681 0010 03F0F803 		and	r3, r3, #248
 391:.\Generated_Source\PSoC5/Clock_UART.c **** }
 682              		.loc 1 391 0
 683 0014 1846     		mov	r0, r3
 684 0016 BD46     		mov	sp, r7
 685 0018 80BC     		pop	{r7}
 686 001a 7047     		bx	lr
 687              		.cfi_endproc
 688              	.LFE8:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 20


 689              		.size	Clock_UART_GetModeRegister, .-Clock_UART_GetModeRegister
 690              		.section	.text.Clock_UART_SetSourceRegister,"ax",%progbits
 691              		.align	2
 692              		.global	Clock_UART_SetSourceRegister
 693              		.thumb
 694              		.thumb_func
 695              		.type	Clock_UART_SetSourceRegister, %function
 696              	Clock_UART_SetSourceRegister:
 697              	.LFB9:
 392:.\Generated_Source\PSoC5/Clock_UART.c **** 
 393:.\Generated_Source\PSoC5/Clock_UART.c **** 
 394:.\Generated_Source\PSoC5/Clock_UART.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/Clock_UART.c **** * Function Name: Clock_UART_SetSourceRegister
 396:.\Generated_Source\PSoC5/Clock_UART.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/Clock_UART.c **** *
 398:.\Generated_Source\PSoC5/Clock_UART.c **** * Summary:
 399:.\Generated_Source\PSoC5/Clock_UART.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/Clock_UART.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/Clock_UART.c **** *
 402:.\Generated_Source\PSoC5/Clock_UART.c **** * Parameters:
 403:.\Generated_Source\PSoC5/Clock_UART.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/Clock_UART.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/Clock_UART.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/Clock_UART.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/Clock_UART.c **** *
 415:.\Generated_Source\PSoC5/Clock_UART.c **** * Returns:
 416:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
 417:.\Generated_Source\PSoC5/Clock_UART.c **** *
 418:.\Generated_Source\PSoC5/Clock_UART.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/Clock_UART.c **** void Clock_UART_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/Clock_UART.c **** {
 698              		.loc 1 420 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 16
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702 0000 80B5     		push	{r7, lr}
 703              	.LCFI23:
 704              		.cfi_def_cfa_offset 8
 705 0002 84B0     		sub	sp, sp, #16
 706              	.LCFI24:
 707              		.cfi_def_cfa_offset 24
 708 0004 00AF     		add	r7, sp, #0
 709              		.cfi_offset 14, -4
 710              		.cfi_offset 7, -8
 711              	.LCFI25:
 712              		.cfi_def_cfa_register 7
 713 0006 0346     		mov	r3, r0
 714 0008 FB71     		strb	r3, [r7, #7]
 421:.\Generated_Source\PSoC5/Clock_UART.c ****     uint16 currDiv = Clock_UART_GetDividerRegister();
 715              		.loc 1 421 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 21


 716 000a FFF7FEFF 		bl	Clock_UART_GetDividerRegister
 717 000e 0346     		mov	r3, r0
 718 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 422:.\Generated_Source\PSoC5/Clock_UART.c ****     uint8 oldSrc = Clock_UART_GetSourceRegister();
 719              		.loc 1 422 0
 720 0012 FFF7FEFF 		bl	Clock_UART_GetSourceRegister
 721 0016 0346     		mov	r3, r0
 722 0018 FB73     		strb	r3, [r7, #15]
 423:.\Generated_Source\PSoC5/Clock_UART.c **** 
 424:.\Generated_Source\PSoC5/Clock_UART.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 723              		.loc 1 424 0
 724 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 725 001c 002B     		cmp	r3, #0
 726 001e 29D0     		beq	.L36
 727 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 728 0022 002B     		cmp	r3, #0
 729 0024 26D1     		bne	.L36
 730 0026 BB89     		ldrh	r3, [r7, #12]
 731 0028 002B     		cmp	r3, #0
 732 002a 23D1     		bne	.L36
 425:.\Generated_Source\PSoC5/Clock_UART.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/Clock_UART.c ****     {
 427:.\Generated_Source\PSoC5/Clock_UART.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/Clock_UART.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/Clock_UART.c ****         Clock_UART_MOD_SRC |= CYCLK_SSS;
 733              		.loc 1 429 0
 734 002c 44F28603 		movw	r3, #:lower16:1073758342
 735 0030 C4F20003 		movt	r3, #:upper16:1073758342
 736 0034 44F28602 		movw	r2, #:lower16:1073758342
 737 0038 C4F20002 		movt	r2, #:upper16:1073758342
 738 003c 1278     		ldrb	r2, [r2, #0]
 739 003e D2B2     		uxtb	r2, r2
 740 0040 42F04002 		orr	r2, r2, #64
 741 0044 D2B2     		uxtb	r2, r2
 742 0046 1A70     		strb	r2, [r3, #0]
 430:.\Generated_Source\PSoC5/Clock_UART.c ****         Clock_UART_MOD_SRC =
 743              		.loc 1 430 0
 744 0048 44F28603 		movw	r3, #:lower16:1073758342
 745 004c C4F20003 		movt	r3, #:upper16:1073758342
 431:.\Generated_Source\PSoC5/Clock_UART.c ****             (Clock_UART_MOD_SRC & (uint8)(~Clock_UART_SRC_SEL_MSK)) | clkSource;
 746              		.loc 1 431 0
 747 0050 44F28602 		movw	r2, #:lower16:1073758342
 748 0054 C4F20002 		movt	r2, #:upper16:1073758342
 749 0058 1278     		ldrb	r2, [r2, #0]
 750 005a D2B2     		uxtb	r2, r2
 751              		.loc 1 430 0
 752 005c D2B2     		uxtb	r2, r2
 753 005e 02F0F802 		and	r2, r2, #248
 754 0062 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 755 0064 1146     		mov	r1, r2
 756 0066 0246     		mov	r2, r0
 757 0068 41EA0202 		orr	r2, r1, r2
 758 006c D2B2     		uxtb	r2, r2
 759 006e D2B2     		uxtb	r2, r2
 760 0070 1A70     		strb	r2, [r3, #0]
 761              		.loc 1 424 0
 762 0072 40E0     		b	.L39
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 22


 763              	.L36:
 432:.\Generated_Source\PSoC5/Clock_UART.c ****     }
 433:.\Generated_Source\PSoC5/Clock_UART.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 764              		.loc 1 433 0
 765 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 766 0076 002B     		cmp	r3, #0
 767 0078 28D1     		bne	.L38
 768 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 769 007c 002B     		cmp	r3, #0
 770 007e 25D0     		beq	.L38
 771 0080 BB89     		ldrh	r3, [r7, #12]
 772 0082 002B     		cmp	r3, #0
 773 0084 22D1     		bne	.L38
 434:.\Generated_Source\PSoC5/Clock_UART.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/Clock_UART.c ****     {
 436:.\Generated_Source\PSoC5/Clock_UART.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/Clock_UART.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/Clock_UART.c ****         Clock_UART_MOD_SRC =
 774              		.loc 1 438 0
 775 0086 44F28603 		movw	r3, #:lower16:1073758342
 776 008a C4F20003 		movt	r3, #:upper16:1073758342
 439:.\Generated_Source\PSoC5/Clock_UART.c ****             (Clock_UART_MOD_SRC & (uint8)(~Clock_UART_SRC_SEL_MSK)) | clkSource;
 777              		.loc 1 439 0
 778 008e 44F28602 		movw	r2, #:lower16:1073758342
 779 0092 C4F20002 		movt	r2, #:upper16:1073758342
 780 0096 1278     		ldrb	r2, [r2, #0]
 781 0098 D2B2     		uxtb	r2, r2
 782              		.loc 1 438 0
 783 009a D2B2     		uxtb	r2, r2
 784 009c 02F0F802 		and	r2, r2, #248
 785 00a0 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 786 00a2 1146     		mov	r1, r2
 787 00a4 0246     		mov	r2, r0
 788 00a6 41EA0202 		orr	r2, r1, r2
 789 00aa D2B2     		uxtb	r2, r2
 790 00ac D2B2     		uxtb	r2, r2
 791 00ae 1A70     		strb	r2, [r3, #0]
 440:.\Generated_Source\PSoC5/Clock_UART.c ****         Clock_UART_MOD_SRC &= (uint8)(~CYCLK_SSS);
 792              		.loc 1 440 0
 793 00b0 44F28603 		movw	r3, #:lower16:1073758342
 794 00b4 C4F20003 		movt	r3, #:upper16:1073758342
 795 00b8 44F28602 		movw	r2, #:lower16:1073758342
 796 00bc C4F20002 		movt	r2, #:upper16:1073758342
 797 00c0 1278     		ldrb	r2, [r2, #0]
 798 00c2 D2B2     		uxtb	r2, r2
 799 00c4 02F0BF02 		and	r2, r2, #191
 800 00c8 1A70     		strb	r2, [r3, #0]
 801              		.loc 1 433 0
 802 00ca 14E0     		b	.L39
 803              	.L38:
 441:.\Generated_Source\PSoC5/Clock_UART.c ****     }
 442:.\Generated_Source\PSoC5/Clock_UART.c ****     else
 443:.\Generated_Source\PSoC5/Clock_UART.c ****     {
 444:.\Generated_Source\PSoC5/Clock_UART.c ****         Clock_UART_MOD_SRC =
 804              		.loc 1 444 0
 805 00cc 44F28603 		movw	r3, #:lower16:1073758342
 806 00d0 C4F20003 		movt	r3, #:upper16:1073758342
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 23


 445:.\Generated_Source\PSoC5/Clock_UART.c ****             (Clock_UART_MOD_SRC & (uint8)(~Clock_UART_SRC_SEL_MSK)) | clkSource;
 807              		.loc 1 445 0
 808 00d4 44F28602 		movw	r2, #:lower16:1073758342
 809 00d8 C4F20002 		movt	r2, #:upper16:1073758342
 810 00dc 1278     		ldrb	r2, [r2, #0]
 811 00de D2B2     		uxtb	r2, r2
 812              		.loc 1 444 0
 813 00e0 D2B2     		uxtb	r2, r2
 814 00e2 02F0F802 		and	r2, r2, #248
 815 00e6 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 816 00e8 1146     		mov	r1, r2
 817 00ea 0246     		mov	r2, r0
 818 00ec 41EA0202 		orr	r2, r1, r2
 819 00f0 D2B2     		uxtb	r2, r2
 820 00f2 D2B2     		uxtb	r2, r2
 821 00f4 1A70     		strb	r2, [r3, #0]
 822              	.L39:
 446:.\Generated_Source\PSoC5/Clock_UART.c ****     }
 447:.\Generated_Source\PSoC5/Clock_UART.c **** }
 823              		.loc 1 447 0
 824 00f6 07F11007 		add	r7, r7, #16
 825 00fa BD46     		mov	sp, r7
 826 00fc 80BD     		pop	{r7, pc}
 827              		.cfi_endproc
 828              	.LFE9:
 829              		.size	Clock_UART_SetSourceRegister, .-Clock_UART_SetSourceRegister
 830 00fe 00BF     		.section	.text.Clock_UART_GetSourceRegister,"ax",%progbits
 831              		.align	2
 832              		.global	Clock_UART_GetSourceRegister
 833              		.thumb
 834              		.thumb_func
 835              		.type	Clock_UART_GetSourceRegister, %function
 836              	Clock_UART_GetSourceRegister:
 837              	.LFB10:
 448:.\Generated_Source\PSoC5/Clock_UART.c **** 
 449:.\Generated_Source\PSoC5/Clock_UART.c **** 
 450:.\Generated_Source\PSoC5/Clock_UART.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/Clock_UART.c **** * Function Name: Clock_UART_GetSourceRegister
 452:.\Generated_Source\PSoC5/Clock_UART.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/Clock_UART.c **** *
 454:.\Generated_Source\PSoC5/Clock_UART.c **** * Summary:
 455:.\Generated_Source\PSoC5/Clock_UART.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/Clock_UART.c **** *
 457:.\Generated_Source\PSoC5/Clock_UART.c **** * Parameters:
 458:.\Generated_Source\PSoC5/Clock_UART.c **** *  None
 459:.\Generated_Source\PSoC5/Clock_UART.c **** *
 460:.\Generated_Source\PSoC5/Clock_UART.c **** * Returns:
 461:.\Generated_Source\PSoC5/Clock_UART.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/Clock_UART.c **** *
 463:.\Generated_Source\PSoC5/Clock_UART.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/Clock_UART.c **** uint8 Clock_UART_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/Clock_UART.c **** {
 838              		.loc 1 465 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 0
 841              		@ frame_needed = 1, uses_anonymous_args = 0
 842              		@ link register save eliminated.
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 24


 843 0000 80B4     		push	{r7}
 844              	.LCFI26:
 845              		.cfi_def_cfa_offset 4
 846 0002 00AF     		add	r7, sp, #0
 847              		.cfi_offset 7, -4
 848              	.LCFI27:
 849              		.cfi_def_cfa_register 7
 466:.\Generated_Source\PSoC5/Clock_UART.c ****     return Clock_UART_MOD_SRC & Clock_UART_SRC_SEL_MSK;
 850              		.loc 1 466 0
 851 0004 44F28603 		movw	r3, #:lower16:1073758342
 852 0008 C4F20003 		movt	r3, #:upper16:1073758342
 853 000c 1B78     		ldrb	r3, [r3, #0]
 854 000e DBB2     		uxtb	r3, r3
 855 0010 03F00703 		and	r3, r3, #7
 467:.\Generated_Source\PSoC5/Clock_UART.c **** }
 856              		.loc 1 467 0
 857 0014 1846     		mov	r0, r3
 858 0016 BD46     		mov	sp, r7
 859 0018 80BC     		pop	{r7}
 860 001a 7047     		bx	lr
 861              		.cfi_endproc
 862              	.LFE10:
 863              		.size	Clock_UART_GetSourceRegister, .-Clock_UART_GetSourceRegister
 864              		.text
 865              	.Letext0:
 866              		.section	.debug_loc,"",%progbits
 867              	.Ldebug_loc0:
 868              	.LLST0:
 869 0000 00000000 		.4byte	.LFB0
 870 0004 02000000 		.4byte	.LCFI0
 871 0008 0100     		.2byte	0x1
 872 000a 5D       		.byte	0x5d
 873 000b 02000000 		.4byte	.LCFI0
 874 000f 04000000 		.4byte	.LCFI1
 875 0013 0200     		.2byte	0x2
 876 0015 7D       		.byte	0x7d
 877 0016 04       		.sleb128 4
 878 0017 04000000 		.4byte	.LCFI1
 879 001b 42000000 		.4byte	.LFE0
 880 001f 0200     		.2byte	0x2
 881 0021 77       		.byte	0x77
 882 0022 04       		.sleb128 4
 883 0023 00000000 		.4byte	0x0
 884 0027 00000000 		.4byte	0x0
 885              	.LLST1:
 886 002b 00000000 		.4byte	.LFB1
 887 002f 02000000 		.4byte	.LCFI2
 888 0033 0100     		.2byte	0x1
 889 0035 5D       		.byte	0x5d
 890 0036 02000000 		.4byte	.LCFI2
 891 003a 04000000 		.4byte	.LCFI3
 892 003e 0200     		.2byte	0x2
 893 0040 7D       		.byte	0x7d
 894 0041 04       		.sleb128 4
 895 0042 04000000 		.4byte	.LCFI3
 896 0046 3E000000 		.4byte	.LFE1
 897 004a 0200     		.2byte	0x2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 25


 898 004c 77       		.byte	0x77
 899 004d 04       		.sleb128 4
 900 004e 00000000 		.4byte	0x0
 901 0052 00000000 		.4byte	0x0
 902              	.LLST2:
 903 0056 00000000 		.4byte	.LFB2
 904 005a 02000000 		.4byte	.LCFI4
 905 005e 0100     		.2byte	0x1
 906 0060 5D       		.byte	0x5d
 907 0061 02000000 		.4byte	.LCFI4
 908 0065 04000000 		.4byte	.LCFI5
 909 0069 0200     		.2byte	0x2
 910 006b 7D       		.byte	0x7d
 911 006c 04       		.sleb128 4
 912 006d 04000000 		.4byte	.LCFI5
 913 0071 06000000 		.4byte	.LCFI6
 914 0075 0200     		.2byte	0x2
 915 0077 7D       		.byte	0x7d
 916 0078 10       		.sleb128 16
 917 0079 06000000 		.4byte	.LCFI6
 918 007d F2000000 		.4byte	.LFE2
 919 0081 0200     		.2byte	0x2
 920 0083 77       		.byte	0x77
 921 0084 10       		.sleb128 16
 922 0085 00000000 		.4byte	0x0
 923 0089 00000000 		.4byte	0x0
 924              	.LLST3:
 925 008d 00000000 		.4byte	.LFB3
 926 0091 02000000 		.4byte	.LCFI7
 927 0095 0100     		.2byte	0x1
 928 0097 5D       		.byte	0x5d
 929 0098 02000000 		.4byte	.LCFI7
 930 009c 04000000 		.4byte	.LCFI8
 931 00a0 0200     		.2byte	0x2
 932 00a2 7D       		.byte	0x7d
 933 00a3 04       		.sleb128 4
 934 00a4 04000000 		.4byte	.LCFI8
 935 00a8 06000000 		.4byte	.LCFI9
 936 00ac 0200     		.2byte	0x2
 937 00ae 7D       		.byte	0x7d
 938 00af 10       		.sleb128 16
 939 00b0 06000000 		.4byte	.LCFI9
 940 00b4 52000000 		.4byte	.LFE3
 941 00b8 0200     		.2byte	0x2
 942 00ba 77       		.byte	0x77
 943 00bb 10       		.sleb128 16
 944 00bc 00000000 		.4byte	0x0
 945 00c0 00000000 		.4byte	0x0
 946              	.LLST4:
 947 00c4 00000000 		.4byte	.LFB4
 948 00c8 02000000 		.4byte	.LCFI10
 949 00cc 0100     		.2byte	0x1
 950 00ce 5D       		.byte	0x5d
 951 00cf 02000000 		.4byte	.LCFI10
 952 00d3 04000000 		.4byte	.LCFI11
 953 00d7 0200     		.2byte	0x2
 954 00d9 7D       		.byte	0x7d
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 26


 955 00da 08       		.sleb128 8
 956 00db 04000000 		.4byte	.LCFI11
 957 00df 06000000 		.4byte	.LCFI12
 958 00e3 0200     		.2byte	0x2
 959 00e5 7D       		.byte	0x7d
 960 00e6 18       		.sleb128 24
 961 00e7 06000000 		.4byte	.LCFI12
 962 00eb E4010000 		.4byte	.LFE4
 963 00ef 0200     		.2byte	0x2
 964 00f1 77       		.byte	0x77
 965 00f2 18       		.sleb128 24
 966 00f3 00000000 		.4byte	0x0
 967 00f7 00000000 		.4byte	0x0
 968              	.LLST5:
 969 00fb 00000000 		.4byte	.LFB5
 970 00ff 02000000 		.4byte	.LCFI13
 971 0103 0100     		.2byte	0x1
 972 0105 5D       		.byte	0x5d
 973 0106 02000000 		.4byte	.LCFI13
 974 010a 04000000 		.4byte	.LCFI14
 975 010e 0200     		.2byte	0x2
 976 0110 7D       		.byte	0x7d
 977 0111 04       		.sleb128 4
 978 0112 04000000 		.4byte	.LCFI14
 979 0116 18000000 		.4byte	.LFE5
 980 011a 0200     		.2byte	0x2
 981 011c 77       		.byte	0x77
 982 011d 04       		.sleb128 4
 983 011e 00000000 		.4byte	0x0
 984 0122 00000000 		.4byte	0x0
 985              	.LLST6:
 986 0126 00000000 		.4byte	.LFB6
 987 012a 02000000 		.4byte	.LCFI15
 988 012e 0100     		.2byte	0x1
 989 0130 5D       		.byte	0x5d
 990 0131 02000000 		.4byte	.LCFI15
 991 0135 04000000 		.4byte	.LCFI16
 992 0139 0200     		.2byte	0x2
 993 013b 7D       		.byte	0x7d
 994 013c 04       		.sleb128 4
 995 013d 04000000 		.4byte	.LCFI16
 996 0141 06000000 		.4byte	.LCFI17
 997 0145 0200     		.2byte	0x2
 998 0147 7D       		.byte	0x7d
 999 0148 10       		.sleb128 16
 1000 0149 06000000 		.4byte	.LCFI17
 1001 014d 3C000000 		.4byte	.LFE6
 1002 0151 0200     		.2byte	0x2
 1003 0153 77       		.byte	0x77
 1004 0154 10       		.sleb128 16
 1005 0155 00000000 		.4byte	0x0
 1006 0159 00000000 		.4byte	0x0
 1007              	.LLST7:
 1008 015d 00000000 		.4byte	.LFB7
 1009 0161 02000000 		.4byte	.LCFI18
 1010 0165 0100     		.2byte	0x1
 1011 0167 5D       		.byte	0x5d
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 27


 1012 0168 02000000 		.4byte	.LCFI18
 1013 016c 04000000 		.4byte	.LCFI19
 1014 0170 0200     		.2byte	0x2
 1015 0172 7D       		.byte	0x7d
 1016 0173 04       		.sleb128 4
 1017 0174 04000000 		.4byte	.LCFI19
 1018 0178 06000000 		.4byte	.LCFI20
 1019 017c 0200     		.2byte	0x2
 1020 017e 7D       		.byte	0x7d
 1021 017f 10       		.sleb128 16
 1022 0180 06000000 		.4byte	.LCFI20
 1023 0184 3E000000 		.4byte	.LFE7
 1024 0188 0200     		.2byte	0x2
 1025 018a 77       		.byte	0x77
 1026 018b 10       		.sleb128 16
 1027 018c 00000000 		.4byte	0x0
 1028 0190 00000000 		.4byte	0x0
 1029              	.LLST8:
 1030 0194 00000000 		.4byte	.LFB8
 1031 0198 02000000 		.4byte	.LCFI21
 1032 019c 0100     		.2byte	0x1
 1033 019e 5D       		.byte	0x5d
 1034 019f 02000000 		.4byte	.LCFI21
 1035 01a3 04000000 		.4byte	.LCFI22
 1036 01a7 0200     		.2byte	0x2
 1037 01a9 7D       		.byte	0x7d
 1038 01aa 04       		.sleb128 4
 1039 01ab 04000000 		.4byte	.LCFI22
 1040 01af 1C000000 		.4byte	.LFE8
 1041 01b3 0200     		.2byte	0x2
 1042 01b5 77       		.byte	0x77
 1043 01b6 04       		.sleb128 4
 1044 01b7 00000000 		.4byte	0x0
 1045 01bb 00000000 		.4byte	0x0
 1046              	.LLST9:
 1047 01bf 00000000 		.4byte	.LFB9
 1048 01c3 02000000 		.4byte	.LCFI23
 1049 01c7 0100     		.2byte	0x1
 1050 01c9 5D       		.byte	0x5d
 1051 01ca 02000000 		.4byte	.LCFI23
 1052 01ce 04000000 		.4byte	.LCFI24
 1053 01d2 0200     		.2byte	0x2
 1054 01d4 7D       		.byte	0x7d
 1055 01d5 08       		.sleb128 8
 1056 01d6 04000000 		.4byte	.LCFI24
 1057 01da 06000000 		.4byte	.LCFI25
 1058 01de 0200     		.2byte	0x2
 1059 01e0 7D       		.byte	0x7d
 1060 01e1 18       		.sleb128 24
 1061 01e2 06000000 		.4byte	.LCFI25
 1062 01e6 FE000000 		.4byte	.LFE9
 1063 01ea 0200     		.2byte	0x2
 1064 01ec 77       		.byte	0x77
 1065 01ed 18       		.sleb128 24
 1066 01ee 00000000 		.4byte	0x0
 1067 01f2 00000000 		.4byte	0x0
 1068              	.LLST10:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 28


 1069 01f6 00000000 		.4byte	.LFB10
 1070 01fa 02000000 		.4byte	.LCFI26
 1071 01fe 0100     		.2byte	0x1
 1072 0200 5D       		.byte	0x5d
 1073 0201 02000000 		.4byte	.LCFI26
 1074 0205 04000000 		.4byte	.LCFI27
 1075 0209 0200     		.2byte	0x2
 1076 020b 7D       		.byte	0x7d
 1077 020c 04       		.sleb128 4
 1078 020d 04000000 		.4byte	.LCFI27
 1079 0211 1C000000 		.4byte	.LFE10
 1080 0215 0200     		.2byte	0x2
 1081 0217 77       		.byte	0x77
 1082 0218 04       		.sleb128 4
 1083 0219 00000000 		.4byte	0x0
 1084 021d 00000000 		.4byte	0x0
 1085              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 1086              		.section	.debug_info
 1087 0000 65020000 		.4byte	0x265
 1088 0004 0200     		.2byte	0x2
 1089 0006 00000000 		.4byte	.Ldebug_abbrev0
 1090 000a 04       		.byte	0x4
 1091 000b 01       		.uleb128 0x1
 1092 000c 48020000 		.4byte	.LASF35
 1093 0010 01       		.byte	0x1
 1094 0011 32000000 		.4byte	.LASF36
 1095 0015 58000000 		.4byte	.LASF37
 1096 0019 00000000 		.4byte	0x0
 1097 001d 00000000 		.4byte	0x0
 1098 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 1099 0025 00000000 		.4byte	.Ldebug_line0
 1100 0029 02       		.uleb128 0x2
 1101 002a 01       		.byte	0x1
 1102 002b 06       		.byte	0x6
 1103 002c 8B020000 		.4byte	.LASF0
 1104 0030 02       		.uleb128 0x2
 1105 0031 01       		.byte	0x1
 1106 0032 08       		.byte	0x8
 1107 0033 30010000 		.4byte	.LASF1
 1108 0037 02       		.uleb128 0x2
 1109 0038 02       		.byte	0x2
 1110 0039 05       		.byte	0x5
 1111 003a 61020000 		.4byte	.LASF2
 1112 003e 02       		.uleb128 0x2
 1113 003f 02       		.byte	0x2
 1114 0040 07       		.byte	0x7
 1115 0041 58010000 		.4byte	.LASF3
 1116 0045 02       		.uleb128 0x2
 1117 0046 04       		.byte	0x4
 1118 0047 05       		.byte	0x5
 1119 0048 71020000 		.4byte	.LASF4
 1120 004c 02       		.uleb128 0x2
 1121 004d 04       		.byte	0x4
 1122 004e 07       		.byte	0x7
 1123 004f 46010000 		.4byte	.LASF5
 1124 0053 02       		.uleb128 0x2
 1125 0054 08       		.byte	0x8
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 29


 1126 0055 05       		.byte	0x5
 1127 0056 00000000 		.4byte	.LASF6
 1128 005a 02       		.uleb128 0x2
 1129 005b 08       		.byte	0x8
 1130 005c 07       		.byte	0x7
 1131 005d 1B020000 		.4byte	.LASF7
 1132 0061 03       		.uleb128 0x3
 1133 0062 04       		.byte	0x4
 1134 0063 05       		.byte	0x5
 1135 0064 696E7400 		.ascii	"int\000"
 1136 0068 02       		.uleb128 0x2
 1137 0069 04       		.byte	0x4
 1138 006a 07       		.byte	0x7
 1139 006b F6010000 		.4byte	.LASF8
 1140 006f 04       		.uleb128 0x4
 1141 0070 6B020000 		.4byte	.LASF9
 1142 0074 02       		.byte	0x2
 1143 0075 4C       		.byte	0x4c
 1144 0076 30000000 		.4byte	0x30
 1145 007a 04       		.uleb128 0x4
 1146 007b BD010000 		.4byte	.LASF10
 1147 007f 02       		.byte	0x2
 1148 0080 4D       		.byte	0x4d
 1149 0081 3E000000 		.4byte	0x3e
 1150 0085 02       		.uleb128 0x2
 1151 0086 04       		.byte	0x4
 1152 0087 04       		.byte	0x4
 1153 0088 12010000 		.4byte	.LASF11
 1154 008c 02       		.uleb128 0x2
 1155 008d 08       		.byte	0x8
 1156 008e 04       		.byte	0x4
 1157 008f AE010000 		.4byte	.LASF12
 1158 0093 02       		.uleb128 0x2
 1159 0094 01       		.byte	0x1
 1160 0095 08       		.byte	0x8
 1161 0096 54020000 		.4byte	.LASF13
 1162 009a 05       		.uleb128 0x5
 1163 009b 01       		.byte	0x1
 1164 009c 7A020000 		.4byte	.LASF14
 1165 00a0 01       		.byte	0x1
 1166 00a1 2D       		.byte	0x2d
 1167 00a2 01       		.byte	0x1
 1168 00a3 00000000 		.4byte	.LFB0
 1169 00a7 42000000 		.4byte	.LFE0
 1170 00ab 00000000 		.4byte	.LLST0
 1171 00af 05       		.uleb128 0x5
 1172 00b0 01       		.byte	0x1
 1173 00b1 0B020000 		.4byte	.LASF15
 1174 00b5 01       		.byte	0x1
 1175 00b6 47       		.byte	0x47
 1176 00b7 01       		.byte	0x1
 1177 00b8 00000000 		.4byte	.LFB1
 1178 00bc 3E000000 		.4byte	.LFE1
 1179 00c0 2B000000 		.4byte	.LLST1
 1180 00c4 06       		.uleb128 0x6
 1181 00c5 01       		.byte	0x1
 1182 00c6 C4010000 		.4byte	.LASF16
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 30


 1183 00ca 01       		.byte	0x1
 1184 00cb 64       		.byte	0x64
 1185 00cc 01       		.byte	0x1
 1186 00cd 00000000 		.4byte	.LFB2
 1187 00d1 F2000000 		.4byte	.LFE2
 1188 00d5 56000000 		.4byte	.LLST2
 1189 00d9 F6000000 		.4byte	0xf6
 1190 00dd 07       		.uleb128 0x7
 1191 00de 1A000000 		.4byte	.LBB2
 1192 00e2 E8000000 		.4byte	.LBE2
 1193 00e6 08       		.uleb128 0x8
 1194 00e7 E9000000 		.4byte	.LASF22
 1195 00eb 01       		.byte	0x1
 1196 00ec 69       		.byte	0x69
 1197 00ed 7A000000 		.4byte	0x7a
 1198 00f1 02       		.byte	0x2
 1199 00f2 91       		.byte	0x91
 1200 00f3 76       		.sleb128 -10
 1201 00f4 00       		.byte	0x0
 1202 00f5 00       		.byte	0x0
 1203 00f6 06       		.uleb128 0x6
 1204 00f7 01       		.byte	0x1
 1205 00f8 18010000 		.4byte	.LASF17
 1206 00fc 01       		.byte	0x1
 1207 00fd 9D       		.byte	0x9d
 1208 00fe 01       		.byte	0x1
 1209 00ff 00000000 		.4byte	.LFB3
 1210 0103 52000000 		.4byte	.LFE3
 1211 0107 8D000000 		.4byte	.LLST3
 1212 010b 1E010000 		.4byte	0x11e
 1213 010f 09       		.uleb128 0x9
 1214 0110 2C000000 		.4byte	.LASF19
 1215 0114 01       		.byte	0x1
 1216 0115 9D       		.byte	0x9d
 1217 0116 6F000000 		.4byte	0x6f
 1218 011a 02       		.byte	0x2
 1219 011b 91       		.byte	0x91
 1220 011c 77       		.sleb128 -9
 1221 011d 00       		.byte	0x0
 1222 011e 06       		.uleb128 0x6
 1223 011f 01       		.byte	0x1
 1224 0120 F4000000 		.4byte	.LASF18
 1225 0124 01       		.byte	0x1
 1226 0125 C1       		.byte	0xc1
 1227 0126 01       		.byte	0x1
 1228 0127 00000000 		.4byte	.LFB4
 1229 012b E4010000 		.4byte	.LFE4
 1230 012f C4000000 		.4byte	.LLST4
 1231 0133 7E010000 		.4byte	0x17e
 1232 0137 09       		.uleb128 0x9
 1233 0138 A3010000 		.4byte	.LASF20
 1234 013c 01       		.byte	0x1
 1235 013d C1       		.byte	0xc1
 1236 013e 7A000000 		.4byte	0x7a
 1237 0142 02       		.byte	0x2
 1238 0143 91       		.byte	0x91
 1239 0144 6E       		.sleb128 -18
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 31


 1240 0145 09       		.uleb128 0x9
 1241 0146 B5010000 		.4byte	.LASF21
 1242 014a 01       		.byte	0x1
 1243 014b C1       		.byte	0xc1
 1244 014c 6F000000 		.4byte	0x6f
 1245 0150 02       		.byte	0x2
 1246 0151 91       		.byte	0x91
 1247 0152 6D       		.sleb128 -19
 1248 0153 08       		.uleb128 0x8
 1249 0154 3E010000 		.4byte	.LASF23
 1250 0158 01       		.byte	0x1
 1251 0159 C4       		.byte	0xc4
 1252 015a 6F000000 		.4byte	0x6f
 1253 015e 02       		.byte	0x2
 1254 015f 91       		.byte	0x91
 1255 0160 74       		.sleb128 -12
 1256 0161 08       		.uleb128 0x8
 1257 0162 03020000 		.4byte	.LASF24
 1258 0166 01       		.byte	0x1
 1259 0167 C6       		.byte	0xc6
 1260 0168 6F000000 		.4byte	0x6f
 1261 016c 02       		.byte	0x2
 1262 016d 91       		.byte	0x91
 1263 016e 75       		.sleb128 -11
 1264 016f 08       		.uleb128 0x8
 1265 0170 E9000000 		.4byte	.LASF22
 1266 0174 01       		.byte	0x1
 1267 0175 C7       		.byte	0xc7
 1268 0176 7A000000 		.4byte	0x7a
 1269 017a 02       		.byte	0x2
 1270 017b 91       		.byte	0x91
 1271 017c 76       		.sleb128 -10
 1272 017d 00       		.byte	0x0
 1273 017e 0A       		.uleb128 0xa
 1274 017f 01       		.byte	0x1
 1275 0180 0E000000 		.4byte	.LASF28
 1276 0184 01       		.byte	0x1
 1277 0185 2901     		.2byte	0x129
 1278 0187 01       		.byte	0x1
 1279 0188 7A000000 		.4byte	0x7a
 1280 018c 00000000 		.4byte	.LFB5
 1281 0190 18000000 		.4byte	.LFE5
 1282 0194 FB000000 		.4byte	.LLST5
 1283 0198 0B       		.uleb128 0xb
 1284 0199 01       		.byte	0x1
 1285 019a B1000000 		.4byte	.LASF25
 1286 019e 01       		.byte	0x1
 1287 019f 4C01     		.2byte	0x14c
 1288 01a1 01       		.byte	0x1
 1289 01a2 00000000 		.4byte	.LFB6
 1290 01a6 3C000000 		.4byte	.LFE6
 1291 01aa 26010000 		.4byte	.LLST6
 1292 01ae C2010000 		.4byte	0x1c2
 1293 01b2 0C       		.uleb128 0xc
 1294 01b3 3C020000 		.4byte	.LASF26
 1295 01b7 01       		.byte	0x1
 1296 01b8 4C01     		.2byte	0x14c
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 32


 1297 01ba 6F000000 		.4byte	0x6f
 1298 01be 02       		.byte	0x2
 1299 01bf 91       		.byte	0x91
 1300 01c0 77       		.sleb128 -9
 1301 01c1 00       		.byte	0x0
 1302 01c2 0B       		.uleb128 0xb
 1303 01c3 01       		.byte	0x1
 1304 01c4 CC000000 		.4byte	.LASF27
 1305 01c8 01       		.byte	0x1
 1306 01c9 6F01     		.2byte	0x16f
 1307 01cb 01       		.byte	0x1
 1308 01cc 00000000 		.4byte	.LFB7
 1309 01d0 3E000000 		.4byte	.LFE7
 1310 01d4 5D010000 		.4byte	.LLST7
 1311 01d8 EC010000 		.4byte	0x1ec
 1312 01dc 0C       		.uleb128 0xc
 1313 01dd 3C020000 		.4byte	.LASF26
 1314 01e1 01       		.byte	0x1
 1315 01e2 6F01     		.2byte	0x16f
 1316 01e4 6F000000 		.4byte	0x6f
 1317 01e8 02       		.byte	0x2
 1318 01e9 91       		.byte	0x91
 1319 01ea 77       		.sleb128 -9
 1320 01eb 00       		.byte	0x0
 1321 01ec 0A       		.uleb128 0xa
 1322 01ed 01       		.byte	0x1
 1323 01ee 6B010000 		.4byte	.LASF29
 1324 01f2 01       		.byte	0x1
 1325 01f3 8401     		.2byte	0x184
 1326 01f5 01       		.byte	0x1
 1327 01f6 6F000000 		.4byte	0x6f
 1328 01fa 00000000 		.4byte	.LFB8
 1329 01fe 1C000000 		.4byte	.LFE8
 1330 0202 94010000 		.4byte	.LLST8
 1331 0206 0B       		.uleb128 0xb
 1332 0207 01       		.byte	0x1
 1333 0208 86010000 		.4byte	.LASF30
 1334 020c 01       		.byte	0x1
 1335 020d A301     		.2byte	0x1a3
 1336 020f 01       		.byte	0x1
 1337 0210 00000000 		.4byte	.LFB9
 1338 0214 FE000000 		.4byte	.LFE9
 1339 0218 BF010000 		.4byte	.LLST9
 1340 021c 4E020000 		.4byte	0x24e
 1341 0220 0C       		.uleb128 0xc
 1342 0221 32020000 		.4byte	.LASF31
 1343 0225 01       		.byte	0x1
 1344 0226 A301     		.2byte	0x1a3
 1345 0228 6F000000 		.4byte	0x6f
 1346 022c 02       		.byte	0x2
 1347 022d 91       		.byte	0x91
 1348 022e 6F       		.sleb128 -17
 1349 022f 0D       		.uleb128 0xd
 1350 0230 59020000 		.4byte	.LASF32
 1351 0234 01       		.byte	0x1
 1352 0235 A501     		.2byte	0x1a5
 1353 0237 7A000000 		.4byte	0x7a
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 33


 1354 023b 02       		.byte	0x2
 1355 023c 91       		.byte	0x91
 1356 023d 74       		.sleb128 -12
 1357 023e 0D       		.uleb128 0xd
 1358 023f 97020000 		.4byte	.LASF33
 1359 0243 01       		.byte	0x1
 1360 0244 A601     		.2byte	0x1a6
 1361 0246 6F000000 		.4byte	0x6f
 1362 024a 02       		.byte	0x2
 1363 024b 91       		.byte	0x91
 1364 024c 77       		.sleb128 -9
 1365 024d 00       		.byte	0x0
 1366 024e 0A       		.uleb128 0xa
 1367 024f 01       		.byte	0x1
 1368 0250 D9010000 		.4byte	.LASF34
 1369 0254 01       		.byte	0x1
 1370 0255 D001     		.2byte	0x1d0
 1371 0257 01       		.byte	0x1
 1372 0258 6F000000 		.4byte	0x6f
 1373 025c 00000000 		.4byte	.LFB10
 1374 0260 1C000000 		.4byte	.LFE10
 1375 0264 F6010000 		.4byte	.LLST10
 1376 0268 00       		.byte	0x0
 1377              		.section	.debug_abbrev
 1378 0000 01       		.uleb128 0x1
 1379 0001 11       		.uleb128 0x11
 1380 0002 01       		.byte	0x1
 1381 0003 25       		.uleb128 0x25
 1382 0004 0E       		.uleb128 0xe
 1383 0005 13       		.uleb128 0x13
 1384 0006 0B       		.uleb128 0xb
 1385 0007 03       		.uleb128 0x3
 1386 0008 0E       		.uleb128 0xe
 1387 0009 1B       		.uleb128 0x1b
 1388 000a 0E       		.uleb128 0xe
 1389 000b 11       		.uleb128 0x11
 1390 000c 01       		.uleb128 0x1
 1391 000d 52       		.uleb128 0x52
 1392 000e 01       		.uleb128 0x1
 1393 000f 55       		.uleb128 0x55
 1394 0010 06       		.uleb128 0x6
 1395 0011 10       		.uleb128 0x10
 1396 0012 06       		.uleb128 0x6
 1397 0013 00       		.byte	0x0
 1398 0014 00       		.byte	0x0
 1399 0015 02       		.uleb128 0x2
 1400 0016 24       		.uleb128 0x24
 1401 0017 00       		.byte	0x0
 1402 0018 0B       		.uleb128 0xb
 1403 0019 0B       		.uleb128 0xb
 1404 001a 3E       		.uleb128 0x3e
 1405 001b 0B       		.uleb128 0xb
 1406 001c 03       		.uleb128 0x3
 1407 001d 0E       		.uleb128 0xe
 1408 001e 00       		.byte	0x0
 1409 001f 00       		.byte	0x0
 1410 0020 03       		.uleb128 0x3
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 34


 1411 0021 24       		.uleb128 0x24
 1412 0022 00       		.byte	0x0
 1413 0023 0B       		.uleb128 0xb
 1414 0024 0B       		.uleb128 0xb
 1415 0025 3E       		.uleb128 0x3e
 1416 0026 0B       		.uleb128 0xb
 1417 0027 03       		.uleb128 0x3
 1418 0028 08       		.uleb128 0x8
 1419 0029 00       		.byte	0x0
 1420 002a 00       		.byte	0x0
 1421 002b 04       		.uleb128 0x4
 1422 002c 16       		.uleb128 0x16
 1423 002d 00       		.byte	0x0
 1424 002e 03       		.uleb128 0x3
 1425 002f 0E       		.uleb128 0xe
 1426 0030 3A       		.uleb128 0x3a
 1427 0031 0B       		.uleb128 0xb
 1428 0032 3B       		.uleb128 0x3b
 1429 0033 0B       		.uleb128 0xb
 1430 0034 49       		.uleb128 0x49
 1431 0035 13       		.uleb128 0x13
 1432 0036 00       		.byte	0x0
 1433 0037 00       		.byte	0x0
 1434 0038 05       		.uleb128 0x5
 1435 0039 2E       		.uleb128 0x2e
 1436 003a 00       		.byte	0x0
 1437 003b 3F       		.uleb128 0x3f
 1438 003c 0C       		.uleb128 0xc
 1439 003d 03       		.uleb128 0x3
 1440 003e 0E       		.uleb128 0xe
 1441 003f 3A       		.uleb128 0x3a
 1442 0040 0B       		.uleb128 0xb
 1443 0041 3B       		.uleb128 0x3b
 1444 0042 0B       		.uleb128 0xb
 1445 0043 27       		.uleb128 0x27
 1446 0044 0C       		.uleb128 0xc
 1447 0045 11       		.uleb128 0x11
 1448 0046 01       		.uleb128 0x1
 1449 0047 12       		.uleb128 0x12
 1450 0048 01       		.uleb128 0x1
 1451 0049 40       		.uleb128 0x40
 1452 004a 06       		.uleb128 0x6
 1453 004b 00       		.byte	0x0
 1454 004c 00       		.byte	0x0
 1455 004d 06       		.uleb128 0x6
 1456 004e 2E       		.uleb128 0x2e
 1457 004f 01       		.byte	0x1
 1458 0050 3F       		.uleb128 0x3f
 1459 0051 0C       		.uleb128 0xc
 1460 0052 03       		.uleb128 0x3
 1461 0053 0E       		.uleb128 0xe
 1462 0054 3A       		.uleb128 0x3a
 1463 0055 0B       		.uleb128 0xb
 1464 0056 3B       		.uleb128 0x3b
 1465 0057 0B       		.uleb128 0xb
 1466 0058 27       		.uleb128 0x27
 1467 0059 0C       		.uleb128 0xc
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 35


 1468 005a 11       		.uleb128 0x11
 1469 005b 01       		.uleb128 0x1
 1470 005c 12       		.uleb128 0x12
 1471 005d 01       		.uleb128 0x1
 1472 005e 40       		.uleb128 0x40
 1473 005f 06       		.uleb128 0x6
 1474 0060 01       		.uleb128 0x1
 1475 0061 13       		.uleb128 0x13
 1476 0062 00       		.byte	0x0
 1477 0063 00       		.byte	0x0
 1478 0064 07       		.uleb128 0x7
 1479 0065 0B       		.uleb128 0xb
 1480 0066 01       		.byte	0x1
 1481 0067 11       		.uleb128 0x11
 1482 0068 01       		.uleb128 0x1
 1483 0069 12       		.uleb128 0x12
 1484 006a 01       		.uleb128 0x1
 1485 006b 00       		.byte	0x0
 1486 006c 00       		.byte	0x0
 1487 006d 08       		.uleb128 0x8
 1488 006e 34       		.uleb128 0x34
 1489 006f 00       		.byte	0x0
 1490 0070 03       		.uleb128 0x3
 1491 0071 0E       		.uleb128 0xe
 1492 0072 3A       		.uleb128 0x3a
 1493 0073 0B       		.uleb128 0xb
 1494 0074 3B       		.uleb128 0x3b
 1495 0075 0B       		.uleb128 0xb
 1496 0076 49       		.uleb128 0x49
 1497 0077 13       		.uleb128 0x13
 1498 0078 02       		.uleb128 0x2
 1499 0079 0A       		.uleb128 0xa
 1500 007a 00       		.byte	0x0
 1501 007b 00       		.byte	0x0
 1502 007c 09       		.uleb128 0x9
 1503 007d 05       		.uleb128 0x5
 1504 007e 00       		.byte	0x0
 1505 007f 03       		.uleb128 0x3
 1506 0080 0E       		.uleb128 0xe
 1507 0081 3A       		.uleb128 0x3a
 1508 0082 0B       		.uleb128 0xb
 1509 0083 3B       		.uleb128 0x3b
 1510 0084 0B       		.uleb128 0xb
 1511 0085 49       		.uleb128 0x49
 1512 0086 13       		.uleb128 0x13
 1513 0087 02       		.uleb128 0x2
 1514 0088 0A       		.uleb128 0xa
 1515 0089 00       		.byte	0x0
 1516 008a 00       		.byte	0x0
 1517 008b 0A       		.uleb128 0xa
 1518 008c 2E       		.uleb128 0x2e
 1519 008d 00       		.byte	0x0
 1520 008e 3F       		.uleb128 0x3f
 1521 008f 0C       		.uleb128 0xc
 1522 0090 03       		.uleb128 0x3
 1523 0091 0E       		.uleb128 0xe
 1524 0092 3A       		.uleb128 0x3a
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 36


 1525 0093 0B       		.uleb128 0xb
 1526 0094 3B       		.uleb128 0x3b
 1527 0095 05       		.uleb128 0x5
 1528 0096 27       		.uleb128 0x27
 1529 0097 0C       		.uleb128 0xc
 1530 0098 49       		.uleb128 0x49
 1531 0099 13       		.uleb128 0x13
 1532 009a 11       		.uleb128 0x11
 1533 009b 01       		.uleb128 0x1
 1534 009c 12       		.uleb128 0x12
 1535 009d 01       		.uleb128 0x1
 1536 009e 40       		.uleb128 0x40
 1537 009f 06       		.uleb128 0x6
 1538 00a0 00       		.byte	0x0
 1539 00a1 00       		.byte	0x0
 1540 00a2 0B       		.uleb128 0xb
 1541 00a3 2E       		.uleb128 0x2e
 1542 00a4 01       		.byte	0x1
 1543 00a5 3F       		.uleb128 0x3f
 1544 00a6 0C       		.uleb128 0xc
 1545 00a7 03       		.uleb128 0x3
 1546 00a8 0E       		.uleb128 0xe
 1547 00a9 3A       		.uleb128 0x3a
 1548 00aa 0B       		.uleb128 0xb
 1549 00ab 3B       		.uleb128 0x3b
 1550 00ac 05       		.uleb128 0x5
 1551 00ad 27       		.uleb128 0x27
 1552 00ae 0C       		.uleb128 0xc
 1553 00af 11       		.uleb128 0x11
 1554 00b0 01       		.uleb128 0x1
 1555 00b1 12       		.uleb128 0x12
 1556 00b2 01       		.uleb128 0x1
 1557 00b3 40       		.uleb128 0x40
 1558 00b4 06       		.uleb128 0x6
 1559 00b5 01       		.uleb128 0x1
 1560 00b6 13       		.uleb128 0x13
 1561 00b7 00       		.byte	0x0
 1562 00b8 00       		.byte	0x0
 1563 00b9 0C       		.uleb128 0xc
 1564 00ba 05       		.uleb128 0x5
 1565 00bb 00       		.byte	0x0
 1566 00bc 03       		.uleb128 0x3
 1567 00bd 0E       		.uleb128 0xe
 1568 00be 3A       		.uleb128 0x3a
 1569 00bf 0B       		.uleb128 0xb
 1570 00c0 3B       		.uleb128 0x3b
 1571 00c1 05       		.uleb128 0x5
 1572 00c2 49       		.uleb128 0x49
 1573 00c3 13       		.uleb128 0x13
 1574 00c4 02       		.uleb128 0x2
 1575 00c5 0A       		.uleb128 0xa
 1576 00c6 00       		.byte	0x0
 1577 00c7 00       		.byte	0x0
 1578 00c8 0D       		.uleb128 0xd
 1579 00c9 34       		.uleb128 0x34
 1580 00ca 00       		.byte	0x0
 1581 00cb 03       		.uleb128 0x3
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 37


 1582 00cc 0E       		.uleb128 0xe
 1583 00cd 3A       		.uleb128 0x3a
 1584 00ce 0B       		.uleb128 0xb
 1585 00cf 3B       		.uleb128 0x3b
 1586 00d0 05       		.uleb128 0x5
 1587 00d1 49       		.uleb128 0x49
 1588 00d2 13       		.uleb128 0x13
 1589 00d3 02       		.uleb128 0x2
 1590 00d4 0A       		.uleb128 0xa
 1591 00d5 00       		.byte	0x0
 1592 00d6 00       		.byte	0x0
 1593 00d7 00       		.byte	0x0
 1594              		.section	.debug_pubnames,"",%progbits
 1595 0000 51010000 		.4byte	0x151
 1596 0004 0200     		.2byte	0x2
 1597 0006 00000000 		.4byte	.Ldebug_info0
 1598 000a 69020000 		.4byte	0x269
 1599 000e 9A000000 		.4byte	0x9a
 1600 0012 436C6F63 		.ascii	"Clock_UART_Start\000"
 1600      6B5F5541 
 1600      52545F53 
 1600      74617274 
 1600      00
 1601 0023 AF000000 		.4byte	0xaf
 1602 0027 436C6F63 		.ascii	"Clock_UART_Stop\000"
 1602      6B5F5541 
 1602      52545F53 
 1602      746F7000 
 1603 0037 C4000000 		.4byte	0xc4
 1604 003b 436C6F63 		.ascii	"Clock_UART_StopBlock\000"
 1604      6B5F5541 
 1604      52545F53 
 1604      746F7042 
 1604      6C6F636B 
 1605 0050 F6000000 		.4byte	0xf6
 1606 0054 436C6F63 		.ascii	"Clock_UART_StandbyPower\000"
 1606      6B5F5541 
 1606      52545F53 
 1606      74616E64 
 1606      6279506F 
 1607 006c 1E010000 		.4byte	0x11e
 1608 0070 436C6F63 		.ascii	"Clock_UART_SetDividerRegister\000"
 1608      6B5F5541 
 1608      52545F53 
 1608      65744469 
 1608      76696465 
 1609 008e 7E010000 		.4byte	0x17e
 1610 0092 436C6F63 		.ascii	"Clock_UART_GetDividerRegister\000"
 1610      6B5F5541 
 1610      52545F47 
 1610      65744469 
 1610      76696465 
 1611 00b0 98010000 		.4byte	0x198
 1612 00b4 436C6F63 		.ascii	"Clock_UART_SetModeRegister\000"
 1612      6B5F5541 
 1612      52545F53 
 1612      65744D6F 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 38


 1612      64655265 
 1613 00cf C2010000 		.4byte	0x1c2
 1614 00d3 436C6F63 		.ascii	"Clock_UART_ClearModeRegister\000"
 1614      6B5F5541 
 1614      52545F43 
 1614      6C656172 
 1614      4D6F6465 
 1615 00f0 EC010000 		.4byte	0x1ec
 1616 00f4 436C6F63 		.ascii	"Clock_UART_GetModeRegister\000"
 1616      6B5F5541 
 1616      52545F47 
 1616      65744D6F 
 1616      64655265 
 1617 010f 06020000 		.4byte	0x206
 1618 0113 436C6F63 		.ascii	"Clock_UART_SetSourceRegister\000"
 1618      6B5F5541 
 1618      52545F53 
 1618      6574536F 
 1618      75726365 
 1619 0130 4E020000 		.4byte	0x24e
 1620 0134 436C6F63 		.ascii	"Clock_UART_GetSourceRegister\000"
 1620      6B5F5541 
 1620      52545F47 
 1620      6574536F 
 1620      75726365 
 1621 0151 00000000 		.4byte	0x0
 1622              		.section	.debug_aranges,"",%progbits
 1623 0000 6C000000 		.4byte	0x6c
 1624 0004 0200     		.2byte	0x2
 1625 0006 00000000 		.4byte	.Ldebug_info0
 1626 000a 04       		.byte	0x4
 1627 000b 00       		.byte	0x0
 1628 000c 0000     		.2byte	0x0
 1629 000e 0000     		.2byte	0x0
 1630 0010 00000000 		.4byte	.LFB0
 1631 0014 42000000 		.4byte	.LFE0-.LFB0
 1632 0018 00000000 		.4byte	.LFB1
 1633 001c 3E000000 		.4byte	.LFE1-.LFB1
 1634 0020 00000000 		.4byte	.LFB2
 1635 0024 F2000000 		.4byte	.LFE2-.LFB2
 1636 0028 00000000 		.4byte	.LFB3
 1637 002c 52000000 		.4byte	.LFE3-.LFB3
 1638 0030 00000000 		.4byte	.LFB4
 1639 0034 E4010000 		.4byte	.LFE4-.LFB4
 1640 0038 00000000 		.4byte	.LFB5
 1641 003c 18000000 		.4byte	.LFE5-.LFB5
 1642 0040 00000000 		.4byte	.LFB6
 1643 0044 3C000000 		.4byte	.LFE6-.LFB6
 1644 0048 00000000 		.4byte	.LFB7
 1645 004c 3E000000 		.4byte	.LFE7-.LFB7
 1646 0050 00000000 		.4byte	.LFB8
 1647 0054 1C000000 		.4byte	.LFE8-.LFB8
 1648 0058 00000000 		.4byte	.LFB9
 1649 005c FE000000 		.4byte	.LFE9-.LFB9
 1650 0060 00000000 		.4byte	.LFB10
 1651 0064 1C000000 		.4byte	.LFE10-.LFB10
 1652 0068 00000000 		.4byte	0x0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 39


 1653 006c 00000000 		.4byte	0x0
 1654              		.section	.debug_ranges,"",%progbits
 1655              	.Ldebug_ranges0:
 1656 0000 00000000 		.4byte	.Ltext0
 1657 0004 00000000 		.4byte	.Letext0
 1658 0008 00000000 		.4byte	.LFB0
 1659 000c 42000000 		.4byte	.LFE0
 1660 0010 00000000 		.4byte	.LFB1
 1661 0014 3E000000 		.4byte	.LFE1
 1662 0018 00000000 		.4byte	.LFB2
 1663 001c F2000000 		.4byte	.LFE2
 1664 0020 00000000 		.4byte	.LFB3
 1665 0024 52000000 		.4byte	.LFE3
 1666 0028 00000000 		.4byte	.LFB4
 1667 002c E4010000 		.4byte	.LFE4
 1668 0030 00000000 		.4byte	.LFB5
 1669 0034 18000000 		.4byte	.LFE5
 1670 0038 00000000 		.4byte	.LFB6
 1671 003c 3C000000 		.4byte	.LFE6
 1672 0040 00000000 		.4byte	.LFB7
 1673 0044 3E000000 		.4byte	.LFE7
 1674 0048 00000000 		.4byte	.LFB8
 1675 004c 1C000000 		.4byte	.LFE8
 1676 0050 00000000 		.4byte	.LFB9
 1677 0054 FE000000 		.4byte	.LFE9
 1678 0058 00000000 		.4byte	.LFB10
 1679 005c 1C000000 		.4byte	.LFE10
 1680 0060 00000000 		.4byte	0x0
 1681 0064 00000000 		.4byte	0x0
 1682              		.section	.debug_str,"MS",%progbits,1
 1683              	.LASF6:
 1684 0000 6C6F6E67 		.ascii	"long long int\000"
 1684      206C6F6E 
 1684      6720696E 
 1684      7400
 1685              	.LASF28:
 1686 000e 436C6F63 		.ascii	"Clock_UART_GetDividerRegister\000"
 1686      6B5F5541 
 1686      52545F47 
 1686      65744469 
 1686      76696465 
 1687              	.LASF19:
 1688 002c 73746174 		.ascii	"state\000"
 1688      6500
 1689              	.LASF36:
 1690 0032 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Clock_UART.c\000"
 1690      6E657261 
 1690      7465645F 
 1690      536F7572 
 1690      63655C50 
 1691              	.LASF37:
 1692 0058 5C5C7073 		.ascii	"\\\\psf\\Home\\Desktop\\USB-Audio-PSOC5LP\\Firmware"
 1692      665C486F 
 1692      6D655C44 
 1692      65736B74 
 1692      6F705C55 
 1693 0085 5C4B6974 		.ascii	"\\KitProg version 2_03\\KitProg\\KitProg.cydsn\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 40


 1693      50726F67 
 1693      20766572 
 1693      73696F6E 
 1693      20325F30 
 1694              	.LASF25:
 1695 00b1 436C6F63 		.ascii	"Clock_UART_SetModeRegister\000"
 1695      6B5F5541 
 1695      52545F53 
 1695      65744D6F 
 1695      64655265 
 1696              	.LASF27:
 1697 00cc 436C6F63 		.ascii	"Clock_UART_ClearModeRegister\000"
 1697      6B5F5541 
 1697      52545F43 
 1697      6C656172 
 1697      4D6F6465 
 1698              	.LASF22:
 1699 00e9 6F6C6444 		.ascii	"oldDivider\000"
 1699      69766964 
 1699      657200
 1700              	.LASF18:
 1701 00f4 436C6F63 		.ascii	"Clock_UART_SetDividerRegister\000"
 1701      6B5F5541 
 1701      52545F53 
 1701      65744469 
 1701      76696465 
 1702              	.LASF11:
 1703 0112 666C6F61 		.ascii	"float\000"
 1703      7400
 1704              	.LASF17:
 1705 0118 436C6F63 		.ascii	"Clock_UART_StandbyPower\000"
 1705      6B5F5541 
 1705      52545F53 
 1705      74616E64 
 1705      6279506F 
 1706              	.LASF1:
 1707 0130 756E7369 		.ascii	"unsigned char\000"
 1707      676E6564 
 1707      20636861 
 1707      7200
 1708              	.LASF23:
 1709 013e 656E6162 		.ascii	"enabled\000"
 1709      6C656400 
 1710              	.LASF5:
 1711 0146 6C6F6E67 		.ascii	"long unsigned int\000"
 1711      20756E73 
 1711      69676E65 
 1711      6420696E 
 1711      7400
 1712              	.LASF3:
 1713 0158 73686F72 		.ascii	"short unsigned int\000"
 1713      7420756E 
 1713      7369676E 
 1713      65642069 
 1713      6E7400
 1714              	.LASF29:
 1715 016b 436C6F63 		.ascii	"Clock_UART_GetModeRegister\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 41


 1715      6B5F5541 
 1715      52545F47 
 1715      65744D6F 
 1715      64655265 
 1716              	.LASF30:
 1717 0186 436C6F63 		.ascii	"Clock_UART_SetSourceRegister\000"
 1717      6B5F5541 
 1717      52545F53 
 1717      6574536F 
 1717      75726365 
 1718              	.LASF20:
 1719 01a3 636C6B44 		.ascii	"clkDivider\000"
 1719      69766964 
 1719      657200
 1720              	.LASF12:
 1721 01ae 646F7562 		.ascii	"double\000"
 1721      6C6500
 1722              	.LASF21:
 1723 01b5 72657374 		.ascii	"restart\000"
 1723      61727400 
 1724              	.LASF10:
 1725 01bd 75696E74 		.ascii	"uint16\000"
 1725      313600
 1726              	.LASF16:
 1727 01c4 436C6F63 		.ascii	"Clock_UART_StopBlock\000"
 1727      6B5F5541 
 1727      52545F53 
 1727      746F7042 
 1727      6C6F636B 
 1728              	.LASF34:
 1729 01d9 436C6F63 		.ascii	"Clock_UART_GetSourceRegister\000"
 1729      6B5F5541 
 1729      52545F47 
 1729      6574536F 
 1729      75726365 
 1730              	.LASF8:
 1731 01f6 756E7369 		.ascii	"unsigned int\000"
 1731      676E6564 
 1731      20696E74 
 1731      00
 1732              	.LASF24:
 1733 0203 63757272 		.ascii	"currSrc\000"
 1733      53726300 
 1734              	.LASF15:
 1735 020b 436C6F63 		.ascii	"Clock_UART_Stop\000"
 1735      6B5F5541 
 1735      52545F53 
 1735      746F7000 
 1736              	.LASF7:
 1737 021b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1737      206C6F6E 
 1737      6720756E 
 1737      7369676E 
 1737      65642069 
 1738              	.LASF31:
 1739 0232 636C6B53 		.ascii	"clkSource\000"
 1739      6F757263 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc2ynIMV.s 			page 42


 1739      6500
 1740              	.LASF26:
 1741 023c 6D6F6465 		.ascii	"modeBitMask\000"
 1741      4269744D 
 1741      61736B00 
 1742              	.LASF35:
 1743 0248 474E5520 		.ascii	"GNU C 4.4.1\000"
 1743      4320342E 
 1743      342E3100 
 1744              	.LASF13:
 1745 0254 63686172 		.ascii	"char\000"
 1745      00
 1746              	.LASF32:
 1747 0259 63757272 		.ascii	"currDiv\000"
 1747      44697600 
 1748              	.LASF2:
 1749 0261 73686F72 		.ascii	"short int\000"
 1749      7420696E 
 1749      7400
 1750              	.LASF9:
 1751 026b 75696E74 		.ascii	"uint8\000"
 1751      3800
 1752              	.LASF4:
 1753 0271 6C6F6E67 		.ascii	"long int\000"
 1753      20696E74 
 1753      00
 1754              	.LASF14:
 1755 027a 436C6F63 		.ascii	"Clock_UART_Start\000"
 1755      6B5F5541 
 1755      52545F53 
 1755      74617274 
 1755      00
 1756              	.LASF0:
 1757 028b 7369676E 		.ascii	"signed char\000"
 1757      65642063 
 1757      68617200 
 1758              	.LASF33:
 1759 0297 6F6C6453 		.ascii	"oldSrc\000"
 1759      726300
 1760              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
