ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"commandprocessor.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 EB000000 		.text
  20      02008A00 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	SWDFlag
  24              		.data
  25              		.type	SWDFlag, %object
  26              		.size	SWDFlag, 1
  27              	SWDFlag:
  28 0000 01       		.byte	1
  29              		.section	.text.CmdStatus,"ax",%progbits
  30              		.align	2
  31              		.global	CmdStatus
  32              		.thumb
  33              		.thumb_func
  34              		.type	CmdStatus, %function
  35              	CmdStatus:
  36              	.LFB29:
  37              		.file 1 ".\\commandprocessor.c"
   1:.\commandprocessor.c **** /*****************************************************************************
   2:.\commandprocessor.c **** * File Name: commandProcessor.c
   3:.\commandprocessor.c **** *
   4:.\commandprocessor.c **** * Version 2.03
   5:.\commandprocessor.c **** *
   6:.\commandprocessor.c **** * Description: This files provides source code to handle communication between 
   7:.\commandprocessor.c **** * PSoC Programmer GUI and the KitProg.
   8:.\commandprocessor.c **** *
   9:.\commandprocessor.c **** * Owner:
  10:.\commandprocessor.c **** *	Ranjith M, Applications Engineer (rnjt@cypress.com)
  11:.\commandprocessor.c **** *
  12:.\commandprocessor.c **** * Related Document:
  13:.\commandprocessor.c **** * 	001-85925 - CY8CKIT-042 PSoC 4 Pioneer Kit IROS
  14:.\commandprocessor.c **** *	RNJT#18
  15:.\commandprocessor.c **** *
  16:.\commandprocessor.c **** * Hardware Dependency:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 2


  17:.\commandprocessor.c **** * 	CY8CKIT-042 (KitProg) 
  18:.\commandprocessor.c **** *
  19:.\commandprocessor.c **** * Code Tested With:
  20:.\commandprocessor.c **** * 	Creator 2.2
  21:.\commandprocessor.c **** *	GCC1 4.4.1
  22:.\commandprocessor.c **** *	CY8CKIT-042 Rev 1
  23:.\commandprocessor.c **** *
  24:.\commandprocessor.c **** ******************************************************************************
  25:.\commandprocessor.c **** * Copyright (2013), Cypress Semiconductor Corporation.
  26:.\commandprocessor.c **** ******************************************************************************
  27:.\commandprocessor.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  28:.\commandprocessor.c **** * protected by and subject to worldwide patent protection (United States and
  29:.\commandprocessor.c **** * foreign), United States copyright laws and international treaty provisions.
  30:.\commandprocessor.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  31:.\commandprocessor.c **** * license to copy, use, modify, create derivative works of, and compile the
  32:.\commandprocessor.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  33:.\commandprocessor.c **** * custom software in support of licensee product to be used only in conjunction
  34:.\commandprocessor.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  35:.\commandprocessor.c **** * Any reproduction, modification, translation, compilation, or representation of
  36:.\commandprocessor.c **** * this software except as specified above is prohibited without the express
  37:.\commandprocessor.c **** * written permission of Cypress.
  38:.\commandprocessor.c **** *
  39:.\commandprocessor.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  40:.\commandprocessor.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  41:.\commandprocessor.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  42:.\commandprocessor.c **** * Cypress reserves the right to make changes without further notice to the
  43:.\commandprocessor.c **** * materials described herein. Cypress does not assume any liability arising out
  44:.\commandprocessor.c **** * of the application or use of any product or circuit described herein. Cypress
  45:.\commandprocessor.c **** * does not authorize its products for use as critical components in life-support
  46:.\commandprocessor.c **** * systems where a malfunction or failure may reasonably be expected to result in
  47:.\commandprocessor.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  48:.\commandprocessor.c **** * support systems application implies that the manufacturer assumes all risk of
  49:.\commandprocessor.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  50:.\commandprocessor.c **** * limited by and subject to the applicable Cypress software license agreement.
  51:.\commandprocessor.c **** *****************************************************************************/
  52:.\commandprocessor.c **** #include "kitprog.h"
  53:.\commandprocessor.c **** 
  54:.\commandprocessor.c **** /*****************************************************************************
  55:.\commandprocessor.c **** * Local Function Prototypes
  56:.\commandprocessor.c **** *****************************************************************************/
  57:.\commandprocessor.c **** void CmdReset(void);
  58:.\commandprocessor.c **** void CmdStatus(void);
  59:.\commandprocessor.c **** void SWDComm(void);
  60:.\commandprocessor.c **** 
  61:.\commandprocessor.c **** /*****************************************************************************
  62:.\commandprocessor.c **** * Local Global Variable Declarations
  63:.\commandprocessor.c **** *****************************************************************************/
  64:.\commandprocessor.c **** uint8 SWDFlag = SET;
  65:.\commandprocessor.c **** 
  66:.\commandprocessor.c **** /*******************************************************************************
  67:.\commandprocessor.c **** * Function Name: cmdReset()
  68:.\commandprocessor.c **** ********************************************************************************
  69:.\commandprocessor.c **** * Summary:
  70:.\commandprocessor.c **** *  Polls the status of the programmer 
  71:.\commandprocessor.c **** *
  72:.\commandprocessor.c **** * Parameters:
  73:.\commandprocessor.c **** *  void
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 3


  74:.\commandprocessor.c **** *
  75:.\commandprocessor.c **** * Return:
  76:.\commandprocessor.c **** *  void
  77:.\commandprocessor.c **** *
  78:.\commandprocessor.c **** *******************************************************************************/
  79:.\commandprocessor.c **** void CmdStatus(void)
  80:.\commandprocessor.c **** {
  38              		.loc 1 80 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 0
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              	.LCFI0:
  44              		.cfi_def_cfa_offset 8
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_offset 14, -4
  47              		.cfi_offset 7, -8
  48              	.LCFI1:
  49              		.cfi_def_cfa_register 7
  81:.\commandprocessor.c **** 	/* Power is detected by the programmer */
  82:.\commandprocessor.c **** 	if(GetVoltage() > ONE_VOLT)
  50              		.loc 1 82 0
  51 0004 FFF7FEFF 		bl	GetVoltage
  52 0008 0346     		mov	r3, r0
  53 000a B3F57A7F 		cmp	r3, #1000
  54 000e 07D9     		bls	.L2
  83:.\commandprocessor.c **** 	{
  84:.\commandprocessor.c ****        	pifBuf[3] = ACK_POWER_DETECTED;
  55              		.loc 1 84 0
  56 0010 40F20003 		movw	r3, #:lower16:pifBuf
  57 0014 C0F20003 		movt	r3, #:upper16:pifBuf
  58 0018 4FF04002 		mov	r2, #64
  59 001c DA70     		strb	r2, [r3, #3]
  60 001e 06E0     		b	.L3
  61              	.L2:
  85:.\commandprocessor.c **** 	}
  86:.\commandprocessor.c **** 	else
  87:.\commandprocessor.c **** 	{
  88:.\commandprocessor.c **** 		pifBuf[3] = ACK_POWER_NOT_DETECTED;
  62              		.loc 1 88 0
  63 0020 40F20003 		movw	r3, #:lower16:pifBuf
  64 0024 C0F20003 		movt	r3, #:upper16:pifBuf
  65 0028 4FF00002 		mov	r2, #0
  66 002c DA70     		strb	r2, [r3, #3]
  67              	.L3:
  89:.\commandprocessor.c **** 	}
  90:.\commandprocessor.c **** 	
  91:.\commandprocessor.c **** 	/* Power is supplied by the programmer. Works on inverse logic. 0x00 for power supplied and 0x01 f
  92:.\commandprocessor.c ****     pifBuf[4] = POWER_SUPPLIED_INVERSE;
  68              		.loc 1 92 0
  69 002e 40F20003 		movw	r3, #:lower16:pifBuf
  70 0032 C0F20003 		movt	r3, #:upper16:pifBuf
  71 0036 4FF00002 		mov	r2, #0
  72 003a 1A71     		strb	r2, [r3, #4]
  93:.\commandprocessor.c **** }
  73              		.loc 1 93 0
  74 003c 80BD     		pop	{r7, pc}
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 4


  75              		.cfi_endproc
  76              	.LFE29:
  77              		.size	CmdStatus, .-CmdStatus
  78 003e 00BF     		.section	.text.CmdReset,"ax",%progbits
  79              		.align	2
  80              		.global	CmdReset
  81              		.thumb
  82              		.thumb_func
  83              		.type	CmdReset, %function
  84              	CmdReset:
  85              	.LFB30:
  94:.\commandprocessor.c **** /*******************************************************************************
  95:.\commandprocessor.c **** * Function Name: cmdReset()
  96:.\commandprocessor.c **** ********************************************************************************
  97:.\commandprocessor.c **** * Summary:
  98:.\commandprocessor.c **** *  Resets the PSoC 4 
  99:.\commandprocessor.c **** *
 100:.\commandprocessor.c **** * Parameters:
 101:.\commandprocessor.c **** *  void
 102:.\commandprocessor.c **** *
 103:.\commandprocessor.c **** * Return:
 104:.\commandprocessor.c **** *  void
 105:.\commandprocessor.c **** *
 106:.\commandprocessor.c **** *******************************************************************************/
 107:.\commandprocessor.c **** void CmdReset(void)
 108:.\commandprocessor.c **** {
  86              		.loc 1 108 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 80B5     		push	{r7, lr}
  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 8
  93 0002 00AF     		add	r7, sp, #0
  94              		.cfi_offset 14, -4
  95              		.cfi_offset 7, -8
  96              	.LCFI3:
  97              		.cfi_def_cfa_register 7
 109:.\commandprocessor.c **** 	/* Set the pins to Strong drive state */
 110:.\commandprocessor.c **** 	SWD_SET_XRES_OUT;
  98              		.loc 1 110 0
  99 0004 45F21403 		movw	r3, #:lower16:1073762324
 100 0008 C4F20003 		movt	r3, #:upper16:1073762324
 101 000c 45F21402 		movw	r2, #:lower16:1073762324
 102 0010 C4F20002 		movt	r2, #:upper16:1073762324
 103 0014 1278     		ldrb	r2, [r2, #0]
 104 0016 D2B2     		uxtb	r2, r2
 105 0018 D2B2     		uxtb	r2, r2
 106 001a 02F0F102 		and	r2, r2, #241
 107 001e 42F00C02 		orr	r2, r2, #12
 108 0022 D2B2     		uxtb	r2, r2
 109 0024 D2B2     		uxtb	r2, r2
 110 0026 1A70     		strb	r2, [r3, #0]
 111:.\commandprocessor.c **** 	
 112:.\commandprocessor.c **** //	/* Ensure that current state is high */
 113:.\commandprocessor.c **** //    SWD_SET_XRES_HI;	
 114:.\commandprocessor.c **** //    CyDelayUs(50);
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 5


 115:.\commandprocessor.c **** 	
 116:.\commandprocessor.c **** 	/* Set low to reset */
 117:.\commandprocessor.c ****     SWD_SET_XRES_LO; 
 111              		.loc 1 117 0
 112 0028 45F21403 		movw	r3, #:lower16:1073762324
 113 002c C4F20003 		movt	r3, #:upper16:1073762324
 114 0030 45F21402 		movw	r2, #:lower16:1073762324
 115 0034 C4F20002 		movt	r2, #:upper16:1073762324
 116 0038 1278     		ldrb	r2, [r2, #0]
 117 003a D2B2     		uxtb	r2, r2
 118 003c 02F0FE02 		and	r2, r2, #254
 119 0040 1A70     		strb	r2, [r3, #0]
 118:.\commandprocessor.c ****     CyDelayUs(400);
 120              		.loc 1 118 0
 121 0042 4FF4C870 		mov	r0, #400
 122 0046 FFF7FEFF 		bl	CyDelayUs
 119:.\commandprocessor.c **** 	
 120:.\commandprocessor.c **** //	/* Return to high to release */
 121:.\commandprocessor.c **** //    SWD_SET_XRES_HI;
 122:.\commandprocessor.c **** //    CyDelayUs(50);
 123:.\commandprocessor.c **** 	
 124:.\commandprocessor.c **** 	/* Set the pins to High-Z state */
 125:.\commandprocessor.c **** 	SWD_SET_XRES_IN;
 123              		.loc 1 125 0
 124 004a 45F21403 		movw	r3, #:lower16:1073762324
 125 004e C4F20003 		movt	r3, #:upper16:1073762324
 126 0052 45F21402 		movw	r2, #:lower16:1073762324
 127 0056 C4F20002 		movt	r2, #:upper16:1073762324
 128 005a 1278     		ldrb	r2, [r2, #0]
 129 005c D2B2     		uxtb	r2, r2
 130 005e D2B2     		uxtb	r2, r2
 131 0060 02F0F102 		and	r2, r2, #241
 132 0064 42F00202 		orr	r2, r2, #2
 133 0068 D2B2     		uxtb	r2, r2
 134 006a D2B2     		uxtb	r2, r2
 135 006c 1A70     		strb	r2, [r3, #0]
 126:.\commandprocessor.c **** 	
 127:.\commandprocessor.c **** 	SWDHalt();
 136              		.loc 1 127 0
 137 006e FFF7FEFF 		bl	SWDHalt
 128:.\commandprocessor.c **** 	return;
 129:.\commandprocessor.c **** }
 138              		.loc 1 129 0
 139 0072 80BD     		pop	{r7, pc}
 140              		.cfi_endproc
 141              	.LFE30:
 142              		.size	CmdReset, .-CmdReset
 143              		.section	.text.SWDComm,"ax",%progbits
 144              		.align	2
 145              		.global	SWDComm
 146              		.thumb
 147              		.thumb_func
 148              		.type	SWDComm, %function
 149              	SWDComm:
 150              	.LFB31:
 130:.\commandprocessor.c **** /*******************************************************************************
 131:.\commandprocessor.c **** * Function Name: SWDComm()
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 6


 132:.\commandprocessor.c **** ********************************************************************************
 133:.\commandprocessor.c **** * Summary:
 134:.\commandprocessor.c **** * Checks the command received through the USB control endpoint and invokes 
 135:.\commandprocessor.c **** * apporpriate functions.
 136:.\commandprocessor.c **** *
 137:.\commandprocessor.c **** * Parameters:
 138:.\commandprocessor.c **** *  void
 139:.\commandprocessor.c **** *
 140:.\commandprocessor.c **** * Return:
 141:.\commandprocessor.c **** *  void
 142:.\commandprocessor.c **** *
 143:.\commandprocessor.c **** *******************************************************************************/
 144:.\commandprocessor.c **** void SWDComm(void)
 145:.\commandprocessor.c **** {
 151              		.loc 1 145 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 8
 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155 0000 80B5     		push	{r7, lr}
 156              	.LCFI4:
 157              		.cfi_def_cfa_offset 8
 158 0002 82B0     		sub	sp, sp, #8
 159              	.LCFI5:
 160              		.cfi_def_cfa_offset 16
 161 0004 00AF     		add	r7, sp, #0
 162              		.cfi_offset 14, -4
 163              		.cfi_offset 7, -8
 164              	.LCFI6:
 165              		.cfi_def_cfa_register 7
 146:.\commandprocessor.c ****     uint8 progProtocol = 0u;
 166              		.loc 1 146 0
 167 0006 4FF00003 		mov	r3, #0
 168 000a FB71     		strb	r3, [r7, #7]
 147:.\commandprocessor.c **** 	/* Global variable pendingOp is set inside the function VendorCmd() defined in USBFS_commandInterf
 148:.\commandprocessor.c **** 	if(pendingOp)
 169              		.loc 1 148 0
 170 000c 40F20003 		movw	r3, #:lower16:pendingOp
 171 0010 C0F20003 		movt	r3, #:upper16:pendingOp
 172 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 173 0016 002B     		cmp	r3, #0
 174 0018 63D0     		beq	.L8
 149:.\commandprocessor.c ****     {
 150:.\commandprocessor.c ****         switch(pendingOp)
 175              		.loc 1 150 0
 176 001a 40F20003 		movw	r3, #:lower16:pendingOp
 177 001e C0F20003 		movt	r3, #:upper16:pendingOp
 178 0022 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 179 0024 402B     		cmp	r3, #64
 180 0026 13D0     		beq	.L12
 181 0028 402B     		cmp	r3, #64
 182 002a 04DC     		bgt	.L16
 183 002c 012B     		cmp	r3, #1
 184 002e 09D0     		beq	.L10
 185 0030 042B     		cmp	r3, #4
 186 0032 0AD0     		beq	.L11
 187 0034 47E0     		b	.L9
 188              	.L16:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 7


 189 0036 422B     		cmp	r3, #66
 190 0038 39D0     		beq	.L14
 191 003a 422B     		cmp	r3, #66
 192 003c 21DB     		blt	.L13
 193 003e 432B     		cmp	r3, #67
 194 0040 38D0     		beq	.L15
 195 0042 40E0     		b	.L9
 196              	.L10:
 151:.\commandprocessor.c ****         {
 152:.\commandprocessor.c **** 			/* Command = 0x01, programmer polls the status (connected, powered) of the KitProg */
 153:.\commandprocessor.c **** 			case CMD_STATUS:
 154:.\commandprocessor.c **** 					CmdStatus();
 197              		.loc 1 154 0
 198 0044 FFF7FEFF 		bl	CmdStatus
 155:.\commandprocessor.c **** 					break;
 199              		.loc 1 155 0
 200 0048 3DE0     		b	.L9
 201              	.L11:
 156:.\commandprocessor.c **** 			
 157:.\commandprocessor.c **** 			/* Command = 0x04, to reset the PSoC 4 */
 158:.\commandprocessor.c ****             case CMD_RESET:
 159:.\commandprocessor.c **** 					CmdReset();
 202              		.loc 1 159 0
 203 004a FFF7FEFF 		bl	CmdReset
 160:.\commandprocessor.c ****                     break;	
 204              		.loc 1 160 0
 205 004e 3AE0     		b	.L9
 206              	.L12:
 161:.\commandprocessor.c **** 			
 162:.\commandprocessor.c **** 			/* Command = 0x40, sets the protocol to be SWD */		
 163:.\commandprocessor.c **** 			case CMD_SET_PROTOCOL: 
 164:.\commandprocessor.c ****                     progProtocol = pifData[0];
 207              		.loc 1 164 0
 208 0050 40F20003 		movw	r3, #:lower16:pifData
 209 0054 C0F20003 		movt	r3, #:upper16:pifData
 210 0058 1B78     		ldrb	r3, [r3, #0]
 211 005a FB71     		strb	r3, [r7, #7]
 165:.\commandprocessor.c ****                     /* If protocol is SWD set the flag. Otherwise ignore the command. */
 166:.\commandprocessor.c ****                     if (progProtocol == 1)
 212              		.loc 1 166 0
 213 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 214 005e 012B     		cmp	r3, #1
 215 0060 07D1     		bne	.L17
 167:.\commandprocessor.c ****                     {
 168:.\commandprocessor.c ****                         SWDFlag = SET;
 216              		.loc 1 168 0
 217 0062 40F20003 		movw	r3, #:lower16:SWDFlag
 218 0066 C0F20003 		movt	r3, #:upper16:SWDFlag
 219 006a 4FF00102 		mov	r2, #1
 220 006e 1A70     		strb	r2, [r3, #0]
 169:.\commandprocessor.c **** 					} 
 170:.\commandprocessor.c **** 					else 
 171:.\commandprocessor.c **** 					{
 172:.\commandprocessor.c ****                         SWDFlag = NOT_SET;
 173:.\commandprocessor.c **** 					}
 174:.\commandprocessor.c **** 					break;
 221              		.loc 1 174 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 8


 222 0070 29E0     		b	.L9
 223              	.L17:
 224              		.loc 1 172 0
 225 0072 40F20003 		movw	r3, #:lower16:SWDFlag
 226 0076 C0F20003 		movt	r3, #:upper16:SWDFlag
 227 007a 4FF00002 		mov	r2, #0
 228 007e 1A70     		strb	r2, [r3, #0]
 229              		.loc 1 174 0
 230 0080 21E0     		b	.L9
 231              	.L13:
 175:.\commandprocessor.c **** 					
 176:.\commandprocessor.c ****             /* Command = 0x41, synchronise data transfer of the data endpoints with control endpoin
 177:.\commandprocessor.c ****             case CMD_SWD_SYNC: 
 178:.\commandprocessor.c ****                     bufOutOffset = 0;
 232              		.loc 1 178 0
 233 0082 40F20003 		movw	r3, #:lower16:bufOutOffset
 234 0086 C0F20003 		movt	r3, #:upper16:bufOutOffset
 235 008a 4FF00002 		mov	r2, #0
 236 008e 1A80     		strh	r2, [r3, #0]	@ movhi
 179:.\commandprocessor.c ****                     bufInOffset = 0;
 237              		.loc 1 179 0
 238 0090 40F20003 		movw	r3, #:lower16:bufInOffset
 239 0094 C0F20003 		movt	r3, #:upper16:bufInOffset
 240 0098 4FF00002 		mov	r2, #0
 241 009c 1A80     		strh	r2, [r3, #0]	@ movhi
 180:.\commandprocessor.c ****                     bufOutLen = 0;
 242              		.loc 1 180 0
 243 009e 40F20003 		movw	r3, #:lower16:bufOutLen
 244 00a2 C0F20003 		movt	r3, #:upper16:bufOutLen
 245 00a6 4FF00002 		mov	r2, #0
 246 00aa 1A80     		strh	r2, [r3, #0]	@ movhi
 181:.\commandprocessor.c ****                     break;
 247              		.loc 1 181 0
 248 00ac 0BE0     		b	.L9
 249              	.L14:
 182:.\commandprocessor.c **** 					
 183:.\commandprocessor.c ****             /* Command = 0x42, Acquires PSoC 3/4/5. CmdSWDAcquire() defined in swd.c  */
 184:.\commandprocessor.c ****             case CMD_SWD_ACQUIRE: 
 185:.\commandprocessor.c ****                     CmdSWDAcquire();
 250              		.loc 1 185 0
 251 00ae FFF7FEFF 		bl	CmdSWDAcquire
 186:.\commandprocessor.c ****                     break;
 252              		.loc 1 186 0
 253 00b2 08E0     		b	.L9
 254              	.L15:
 187:.\commandprocessor.c **** 					
 188:.\commandprocessor.c ****             /* Command = 0x43, to reset the SWD bus. SWDResetBus() defined in swd.c */
 189:.\commandprocessor.c ****             case CMD_SWD_SPECIAL: 
 190:.\commandprocessor.c ****                     if(pifData[0] == 0)
 255              		.loc 1 190 0
 256 00b4 40F20003 		movw	r3, #:lower16:pifData
 257 00b8 C0F20003 		movt	r3, #:upper16:pifData
 258 00bc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 259 00be 002B     		cmp	r3, #0
 260 00c0 01D1     		bne	.L9
 191:.\commandprocessor.c **** 					{
 192:.\commandprocessor.c ****                         SWDResetBus();
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 9


 261              		.loc 1 192 0
 262 00c2 FFF7FEFF 		bl	SWDResetBus
 263              	.L9:
 193:.\commandprocessor.c ****                     } 
 194:.\commandprocessor.c ****                     break;
 195:.\commandprocessor.c **** 
 196:.\commandprocessor.c ****             default:
 197:.\commandprocessor.c **** 			/* Ignore other commands for now */
 198:.\commandprocessor.c **** 					break;
 199:.\commandprocessor.c ****         }		
 200:.\commandprocessor.c **** 
 201:.\commandprocessor.c ****         pendingOp = CLEAR_OP;
 264              		.loc 1 201 0
 265 00c6 40F20003 		movw	r3, #:lower16:pendingOp
 266 00ca C0F20003 		movt	r3, #:upper16:pendingOp
 267 00ce 4FF00002 		mov	r2, #0
 268 00d2 1A70     		strb	r2, [r3, #0]
 202:.\commandprocessor.c ****         fTcBusy = CLEAR_BUSY;
 269              		.loc 1 202 0
 270 00d4 40F20003 		movw	r3, #:lower16:fTcBusy
 271 00d8 C0F20003 		movt	r3, #:upper16:fTcBusy
 272 00dc 4FF00002 		mov	r2, #0
 273 00e0 1A70     		strb	r2, [r3, #0]
 274              	.L8:
 203:.\commandprocessor.c ****     }
 204:.\commandprocessor.c **** 	/* If a packet is received in the OUT endpoint */
 205:.\commandprocessor.c ****     if(USBFS_bGetEPAckState(SWD_OUT_EP))
 275              		.loc 1 205 0
 276 00e2 4FF00200 		mov	r0, #2
 277 00e6 FFF7FEFF 		bl	USBFS_GetEPAckState
 278 00ea 0346     		mov	r3, r0
 279 00ec 002B     		cmp	r3, #0
 280 00ee 08D0     		beq	.L20
 206:.\commandprocessor.c ****     {
 207:.\commandprocessor.c **** 		/* If protocol is SWD, then use FSM algorithm for 64-bytes packets on SWD-commands */
 208:.\commandprocessor.c ****         if(SWDFlag == SET) 
 281              		.loc 1 208 0
 282 00f0 40F20003 		movw	r3, #:lower16:SWDFlag
 283 00f4 C0F20003 		movt	r3, #:upper16:SWDFlag
 284 00f8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 285 00fa 012B     		cmp	r3, #1
 286 00fc 01D1     		bne	.L20
 209:.\commandprocessor.c ****         {
 210:.\commandprocessor.c ****             /* Handles the swd commands. Defined in swd.c */
 211:.\commandprocessor.c **** 			HandleSWDRequest();
 287              		.loc 1 211 0
 288 00fe FFF7FEFF 		bl	HandleSWDRequest
 289              	.L20:
 212:.\commandprocessor.c ****         }
 213:.\commandprocessor.c ****         
 214:.\commandprocessor.c ****     }
 215:.\commandprocessor.c **** 	
 216:.\commandprocessor.c **** 	return;
 217:.\commandprocessor.c **** }
 290              		.loc 1 217 0
 291 0102 07F10807 		add	r7, r7, #8
 292 0106 BD46     		mov	sp, r7
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 10


 293 0108 80BD     		pop	{r7, pc}
 294              		.cfi_endproc
 295              	.LFE31:
 296              		.size	SWDComm, .-SWDComm
 297 010a 00BF     		.text
 298              	.Letext0:
 299              		.section	.debug_loc,"",%progbits
 300              	.Ldebug_loc0:
 301              	.LLST0:
 302 0000 00000000 		.4byte	.LFB29
 303 0004 02000000 		.4byte	.LCFI0
 304 0008 0100     		.2byte	0x1
 305 000a 5D       		.byte	0x5d
 306 000b 02000000 		.4byte	.LCFI0
 307 000f 04000000 		.4byte	.LCFI1
 308 0013 0200     		.2byte	0x2
 309 0015 7D       		.byte	0x7d
 310 0016 08       		.sleb128 8
 311 0017 04000000 		.4byte	.LCFI1
 312 001b 3E000000 		.4byte	.LFE29
 313 001f 0200     		.2byte	0x2
 314 0021 77       		.byte	0x77
 315 0022 08       		.sleb128 8
 316 0023 00000000 		.4byte	0x0
 317 0027 00000000 		.4byte	0x0
 318              	.LLST1:
 319 002b 00000000 		.4byte	.LFB30
 320 002f 02000000 		.4byte	.LCFI2
 321 0033 0100     		.2byte	0x1
 322 0035 5D       		.byte	0x5d
 323 0036 02000000 		.4byte	.LCFI2
 324 003a 04000000 		.4byte	.LCFI3
 325 003e 0200     		.2byte	0x2
 326 0040 7D       		.byte	0x7d
 327 0041 08       		.sleb128 8
 328 0042 04000000 		.4byte	.LCFI3
 329 0046 74000000 		.4byte	.LFE30
 330 004a 0200     		.2byte	0x2
 331 004c 77       		.byte	0x77
 332 004d 08       		.sleb128 8
 333 004e 00000000 		.4byte	0x0
 334 0052 00000000 		.4byte	0x0
 335              	.LLST2:
 336 0056 00000000 		.4byte	.LFB31
 337 005a 02000000 		.4byte	.LCFI4
 338 005e 0100     		.2byte	0x1
 339 0060 5D       		.byte	0x5d
 340 0061 02000000 		.4byte	.LCFI4
 341 0065 04000000 		.4byte	.LCFI5
 342 0069 0200     		.2byte	0x2
 343 006b 7D       		.byte	0x7d
 344 006c 08       		.sleb128 8
 345 006d 04000000 		.4byte	.LCFI5
 346 0071 06000000 		.4byte	.LCFI6
 347 0075 0200     		.2byte	0x2
 348 0077 7D       		.byte	0x7d
 349 0078 10       		.sleb128 16
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 11


 350 0079 06000000 		.4byte	.LCFI6
 351 007d 0A010000 		.4byte	.LFE31
 352 0081 0200     		.2byte	0x2
 353 0083 77       		.byte	0x77
 354 0084 10       		.sleb128 16
 355 0085 00000000 		.4byte	0x0
 356 0089 00000000 		.4byte	0x0
 357              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 358              		.file 3 "./Generated_Source/PSoC5/core_cm3.h"
 359              		.file 4 ".\\/USBFS_commandinterface.h"
 360              		.file 5 ".\\/swd.h"
 361              		.section	.debug_info
 362 0000 8C010000 		.4byte	0x18c
 363 0004 0200     		.2byte	0x2
 364 0006 00000000 		.4byte	.Ldebug_abbrev0
 365 000a 04       		.byte	0x4
 366 000b 01       		.uleb128 0x1
 367 000c C1000000 		.4byte	.LASF25
 368 0010 01       		.byte	0x1
 369 0011 EC000000 		.4byte	.LASF26
 370 0015 32010000 		.4byte	.LASF27
 371 0019 00000000 		.4byte	0x0
 372 001d 00000000 		.4byte	0x0
 373 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 374 0025 00000000 		.4byte	.Ldebug_line0
 375 0029 02       		.uleb128 0x2
 376 002a 01       		.byte	0x1
 377 002b 06       		.byte	0x6
 378 002c 26010000 		.4byte	.LASF0
 379 0030 02       		.uleb128 0x2
 380 0031 01       		.byte	0x1
 381 0032 08       		.byte	0x8
 382 0033 35000000 		.4byte	.LASF1
 383 0037 02       		.uleb128 0x2
 384 0038 02       		.byte	0x2
 385 0039 05       		.byte	0x5
 386 003a 0D010000 		.4byte	.LASF2
 387 003e 02       		.uleb128 0x2
 388 003f 02       		.byte	0x2
 389 0040 07       		.byte	0x7
 390 0041 5B000000 		.4byte	.LASF3
 391 0045 02       		.uleb128 0x2
 392 0046 04       		.byte	0x4
 393 0047 05       		.byte	0x5
 394 0048 1D010000 		.4byte	.LASF4
 395 004c 02       		.uleb128 0x2
 396 004d 04       		.byte	0x4
 397 004e 07       		.byte	0x7
 398 004f 49000000 		.4byte	.LASF5
 399 0053 02       		.uleb128 0x2
 400 0054 08       		.byte	0x8
 401 0055 05       		.byte	0x5
 402 0056 00000000 		.4byte	.LASF6
 403 005a 02       		.uleb128 0x2
 404 005b 08       		.byte	0x8
 405 005c 07       		.byte	0x7
 406 005d AA000000 		.4byte	.LASF7
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 12


 407 0061 03       		.uleb128 0x3
 408 0062 04       		.byte	0x4
 409 0063 05       		.byte	0x5
 410 0064 696E7400 		.ascii	"int\000"
 411 0068 02       		.uleb128 0x2
 412 0069 04       		.byte	0x4
 413 006a 07       		.byte	0x7
 414 006b 9D000000 		.4byte	.LASF8
 415 006f 04       		.uleb128 0x4
 416 0070 17010000 		.4byte	.LASF9
 417 0074 02       		.byte	0x2
 418 0075 4C       		.byte	0x4c
 419 0076 30000000 		.4byte	0x30
 420 007a 04       		.uleb128 0x4
 421 007b 43000000 		.4byte	.LASF10
 422 007f 02       		.byte	0x2
 423 0080 50       		.byte	0x50
 424 0081 37000000 		.4byte	0x37
 425 0085 02       		.uleb128 0x2
 426 0086 04       		.byte	0x4
 427 0087 04       		.byte	0x4
 428 0088 2F000000 		.4byte	.LASF11
 429 008c 02       		.uleb128 0x2
 430 008d 08       		.byte	0x8
 431 008e 04       		.byte	0x4
 432 008f 7B000000 		.4byte	.LASF12
 433 0093 02       		.uleb128 0x2
 434 0094 01       		.byte	0x1
 435 0095 08       		.byte	0x8
 436 0096 E7000000 		.4byte	.LASF13
 437 009a 05       		.uleb128 0x5
 438 009b 04       		.byte	0x4
 439 009c 07       		.byte	0x7
 440 009d 06       		.uleb128 0x6
 441 009e 01       		.byte	0x1
 442 009f 78010000 		.4byte	.LASF14
 443 00a3 01       		.byte	0x1
 444 00a4 4F       		.byte	0x4f
 445 00a5 01       		.byte	0x1
 446 00a6 00000000 		.4byte	.LFB29
 447 00aa 3E000000 		.4byte	.LFE29
 448 00ae 00000000 		.4byte	.LLST0
 449 00b2 06       		.uleb128 0x6
 450 00b3 01       		.byte	0x1
 451 00b4 8A000000 		.4byte	.LASF15
 452 00b8 01       		.byte	0x1
 453 00b9 6B       		.byte	0x6b
 454 00ba 01       		.byte	0x1
 455 00bb 00000000 		.4byte	.LFB30
 456 00bf 74000000 		.4byte	.LFE30
 457 00c3 2B000000 		.4byte	.LLST1
 458 00c7 07       		.uleb128 0x7
 459 00c8 01       		.byte	0x1
 460 00c9 82000000 		.4byte	.LASF28
 461 00cd 01       		.byte	0x1
 462 00ce 90       		.byte	0x90
 463 00cf 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 13


 464 00d0 00000000 		.4byte	.LFB31
 465 00d4 0A010000 		.4byte	.LFE31
 466 00d8 56000000 		.4byte	.LLST2
 467 00dc EF000000 		.4byte	0xef
 468 00e0 08       		.uleb128 0x8
 469 00e1 CD000000 		.4byte	.LASF29
 470 00e5 01       		.byte	0x1
 471 00e6 92       		.byte	0x92
 472 00e7 6F000000 		.4byte	0x6f
 473 00eb 02       		.byte	0x2
 474 00ec 91       		.byte	0x91
 475 00ed 77       		.sleb128 -9
 476 00ee 00       		.byte	0x0
 477 00ef 09       		.uleb128 0x9
 478 00f0 6E000000 		.4byte	.LASF16
 479 00f4 03       		.byte	0x3
 480 00f5 CE06     		.2byte	0x6ce
 481 00f7 FD000000 		.4byte	0xfd
 482 00fb 01       		.byte	0x1
 483 00fc 01       		.byte	0x1
 484 00fd 0A       		.uleb128 0xa
 485 00fe 61000000 		.4byte	0x61
 486 0102 0B       		.uleb128 0xb
 487 0103 93000000 		.4byte	.LASF17
 488 0107 04       		.byte	0x4
 489 0108 47       		.byte	0x47
 490 0109 6F000000 		.4byte	0x6f
 491 010d 01       		.byte	0x1
 492 010e 01       		.byte	0x1
 493 010f 0B       		.uleb128 0xb
 494 0110 0E000000 		.4byte	.LASF18
 495 0114 04       		.byte	0x4
 496 0115 48       		.byte	0x48
 497 0116 6F000000 		.4byte	0x6f
 498 011a 01       		.byte	0x1
 499 011b 01       		.byte	0x1
 500 011c 0C       		.uleb128 0xc
 501 011d 6F000000 		.4byte	0x6f
 502 0121 2C010000 		.4byte	0x12c
 503 0125 0D       		.uleb128 0xd
 504 0126 9A000000 		.4byte	0x9a
 505 012a 01       		.byte	0x1
 506 012b 00       		.byte	0x0
 507 012c 0B       		.uleb128 0xb
 508 012d 16000000 		.4byte	.LASF19
 509 0131 04       		.byte	0x4
 510 0132 49       		.byte	0x49
 511 0133 1C010000 		.4byte	0x11c
 512 0137 01       		.byte	0x1
 513 0138 01       		.byte	0x1
 514 0139 0C       		.uleb128 0xc
 515 013a 6F000000 		.4byte	0x6f
 516 013e 49010000 		.4byte	0x149
 517 0142 0D       		.uleb128 0xd
 518 0143 9A000000 		.4byte	0x9a
 519 0147 3F       		.byte	0x3f
 520 0148 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 14


 521 0149 0B       		.uleb128 0xb
 522 014a 1E000000 		.4byte	.LASF20
 523 014e 04       		.byte	0x4
 524 014f 4A       		.byte	0x4a
 525 0150 39010000 		.4byte	0x139
 526 0154 01       		.byte	0x1
 527 0155 01       		.byte	0x1
 528 0156 0B       		.uleb128 0xb
 529 0157 DA000000 		.4byte	.LASF21
 530 015b 05       		.byte	0x5
 531 015c 8B       		.byte	0x8b
 532 015d 7A000000 		.4byte	0x7a
 533 0161 01       		.byte	0x1
 534 0162 01       		.byte	0x1
 535 0163 0B       		.uleb128 0xb
 536 0164 01010000 		.4byte	.LASF22
 537 0168 05       		.byte	0x5
 538 0169 8C       		.byte	0x8c
 539 016a 7A000000 		.4byte	0x7a
 540 016e 01       		.byte	0x1
 541 016f 01       		.byte	0x1
 542 0170 0B       		.uleb128 0xb
 543 0171 25000000 		.4byte	.LASF23
 544 0175 05       		.byte	0x5
 545 0176 8D       		.byte	0x8d
 546 0177 7A000000 		.4byte	0x7a
 547 017b 01       		.byte	0x1
 548 017c 01       		.byte	0x1
 549 017d 0E       		.uleb128 0xe
 550 017e 70010000 		.4byte	.LASF24
 551 0182 01       		.byte	0x1
 552 0183 40       		.byte	0x40
 553 0184 6F000000 		.4byte	0x6f
 554 0188 01       		.byte	0x1
 555 0189 05       		.byte	0x5
 556 018a 03       		.byte	0x3
 557 018b 00000000 		.4byte	SWDFlag
 558 018f 00       		.byte	0x0
 559              		.section	.debug_abbrev
 560 0000 01       		.uleb128 0x1
 561 0001 11       		.uleb128 0x11
 562 0002 01       		.byte	0x1
 563 0003 25       		.uleb128 0x25
 564 0004 0E       		.uleb128 0xe
 565 0005 13       		.uleb128 0x13
 566 0006 0B       		.uleb128 0xb
 567 0007 03       		.uleb128 0x3
 568 0008 0E       		.uleb128 0xe
 569 0009 1B       		.uleb128 0x1b
 570 000a 0E       		.uleb128 0xe
 571 000b 11       		.uleb128 0x11
 572 000c 01       		.uleb128 0x1
 573 000d 52       		.uleb128 0x52
 574 000e 01       		.uleb128 0x1
 575 000f 55       		.uleb128 0x55
 576 0010 06       		.uleb128 0x6
 577 0011 10       		.uleb128 0x10
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 15


 578 0012 06       		.uleb128 0x6
 579 0013 00       		.byte	0x0
 580 0014 00       		.byte	0x0
 581 0015 02       		.uleb128 0x2
 582 0016 24       		.uleb128 0x24
 583 0017 00       		.byte	0x0
 584 0018 0B       		.uleb128 0xb
 585 0019 0B       		.uleb128 0xb
 586 001a 3E       		.uleb128 0x3e
 587 001b 0B       		.uleb128 0xb
 588 001c 03       		.uleb128 0x3
 589 001d 0E       		.uleb128 0xe
 590 001e 00       		.byte	0x0
 591 001f 00       		.byte	0x0
 592 0020 03       		.uleb128 0x3
 593 0021 24       		.uleb128 0x24
 594 0022 00       		.byte	0x0
 595 0023 0B       		.uleb128 0xb
 596 0024 0B       		.uleb128 0xb
 597 0025 3E       		.uleb128 0x3e
 598 0026 0B       		.uleb128 0xb
 599 0027 03       		.uleb128 0x3
 600 0028 08       		.uleb128 0x8
 601 0029 00       		.byte	0x0
 602 002a 00       		.byte	0x0
 603 002b 04       		.uleb128 0x4
 604 002c 16       		.uleb128 0x16
 605 002d 00       		.byte	0x0
 606 002e 03       		.uleb128 0x3
 607 002f 0E       		.uleb128 0xe
 608 0030 3A       		.uleb128 0x3a
 609 0031 0B       		.uleb128 0xb
 610 0032 3B       		.uleb128 0x3b
 611 0033 0B       		.uleb128 0xb
 612 0034 49       		.uleb128 0x49
 613 0035 13       		.uleb128 0x13
 614 0036 00       		.byte	0x0
 615 0037 00       		.byte	0x0
 616 0038 05       		.uleb128 0x5
 617 0039 24       		.uleb128 0x24
 618 003a 00       		.byte	0x0
 619 003b 0B       		.uleb128 0xb
 620 003c 0B       		.uleb128 0xb
 621 003d 3E       		.uleb128 0x3e
 622 003e 0B       		.uleb128 0xb
 623 003f 00       		.byte	0x0
 624 0040 00       		.byte	0x0
 625 0041 06       		.uleb128 0x6
 626 0042 2E       		.uleb128 0x2e
 627 0043 00       		.byte	0x0
 628 0044 3F       		.uleb128 0x3f
 629 0045 0C       		.uleb128 0xc
 630 0046 03       		.uleb128 0x3
 631 0047 0E       		.uleb128 0xe
 632 0048 3A       		.uleb128 0x3a
 633 0049 0B       		.uleb128 0xb
 634 004a 3B       		.uleb128 0x3b
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 16


 635 004b 0B       		.uleb128 0xb
 636 004c 27       		.uleb128 0x27
 637 004d 0C       		.uleb128 0xc
 638 004e 11       		.uleb128 0x11
 639 004f 01       		.uleb128 0x1
 640 0050 12       		.uleb128 0x12
 641 0051 01       		.uleb128 0x1
 642 0052 40       		.uleb128 0x40
 643 0053 06       		.uleb128 0x6
 644 0054 00       		.byte	0x0
 645 0055 00       		.byte	0x0
 646 0056 07       		.uleb128 0x7
 647 0057 2E       		.uleb128 0x2e
 648 0058 01       		.byte	0x1
 649 0059 3F       		.uleb128 0x3f
 650 005a 0C       		.uleb128 0xc
 651 005b 03       		.uleb128 0x3
 652 005c 0E       		.uleb128 0xe
 653 005d 3A       		.uleb128 0x3a
 654 005e 0B       		.uleb128 0xb
 655 005f 3B       		.uleb128 0x3b
 656 0060 0B       		.uleb128 0xb
 657 0061 27       		.uleb128 0x27
 658 0062 0C       		.uleb128 0xc
 659 0063 11       		.uleb128 0x11
 660 0064 01       		.uleb128 0x1
 661 0065 12       		.uleb128 0x12
 662 0066 01       		.uleb128 0x1
 663 0067 40       		.uleb128 0x40
 664 0068 06       		.uleb128 0x6
 665 0069 01       		.uleb128 0x1
 666 006a 13       		.uleb128 0x13
 667 006b 00       		.byte	0x0
 668 006c 00       		.byte	0x0
 669 006d 08       		.uleb128 0x8
 670 006e 34       		.uleb128 0x34
 671 006f 00       		.byte	0x0
 672 0070 03       		.uleb128 0x3
 673 0071 0E       		.uleb128 0xe
 674 0072 3A       		.uleb128 0x3a
 675 0073 0B       		.uleb128 0xb
 676 0074 3B       		.uleb128 0x3b
 677 0075 0B       		.uleb128 0xb
 678 0076 49       		.uleb128 0x49
 679 0077 13       		.uleb128 0x13
 680 0078 02       		.uleb128 0x2
 681 0079 0A       		.uleb128 0xa
 682 007a 00       		.byte	0x0
 683 007b 00       		.byte	0x0
 684 007c 09       		.uleb128 0x9
 685 007d 34       		.uleb128 0x34
 686 007e 00       		.byte	0x0
 687 007f 03       		.uleb128 0x3
 688 0080 0E       		.uleb128 0xe
 689 0081 3A       		.uleb128 0x3a
 690 0082 0B       		.uleb128 0xb
 691 0083 3B       		.uleb128 0x3b
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 17


 692 0084 05       		.uleb128 0x5
 693 0085 49       		.uleb128 0x49
 694 0086 13       		.uleb128 0x13
 695 0087 3F       		.uleb128 0x3f
 696 0088 0C       		.uleb128 0xc
 697 0089 3C       		.uleb128 0x3c
 698 008a 0C       		.uleb128 0xc
 699 008b 00       		.byte	0x0
 700 008c 00       		.byte	0x0
 701 008d 0A       		.uleb128 0xa
 702 008e 35       		.uleb128 0x35
 703 008f 00       		.byte	0x0
 704 0090 49       		.uleb128 0x49
 705 0091 13       		.uleb128 0x13
 706 0092 00       		.byte	0x0
 707 0093 00       		.byte	0x0
 708 0094 0B       		.uleb128 0xb
 709 0095 34       		.uleb128 0x34
 710 0096 00       		.byte	0x0
 711 0097 03       		.uleb128 0x3
 712 0098 0E       		.uleb128 0xe
 713 0099 3A       		.uleb128 0x3a
 714 009a 0B       		.uleb128 0xb
 715 009b 3B       		.uleb128 0x3b
 716 009c 0B       		.uleb128 0xb
 717 009d 49       		.uleb128 0x49
 718 009e 13       		.uleb128 0x13
 719 009f 3F       		.uleb128 0x3f
 720 00a0 0C       		.uleb128 0xc
 721 00a1 3C       		.uleb128 0x3c
 722 00a2 0C       		.uleb128 0xc
 723 00a3 00       		.byte	0x0
 724 00a4 00       		.byte	0x0
 725 00a5 0C       		.uleb128 0xc
 726 00a6 01       		.uleb128 0x1
 727 00a7 01       		.byte	0x1
 728 00a8 49       		.uleb128 0x49
 729 00a9 13       		.uleb128 0x13
 730 00aa 01       		.uleb128 0x1
 731 00ab 13       		.uleb128 0x13
 732 00ac 00       		.byte	0x0
 733 00ad 00       		.byte	0x0
 734 00ae 0D       		.uleb128 0xd
 735 00af 21       		.uleb128 0x21
 736 00b0 00       		.byte	0x0
 737 00b1 49       		.uleb128 0x49
 738 00b2 13       		.uleb128 0x13
 739 00b3 2F       		.uleb128 0x2f
 740 00b4 0B       		.uleb128 0xb
 741 00b5 00       		.byte	0x0
 742 00b6 00       		.byte	0x0
 743 00b7 0E       		.uleb128 0xe
 744 00b8 34       		.uleb128 0x34
 745 00b9 00       		.byte	0x0
 746 00ba 03       		.uleb128 0x3
 747 00bb 0E       		.uleb128 0xe
 748 00bc 3A       		.uleb128 0x3a
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 18


 749 00bd 0B       		.uleb128 0xb
 750 00be 3B       		.uleb128 0x3b
 751 00bf 0B       		.uleb128 0xb
 752 00c0 49       		.uleb128 0x49
 753 00c1 13       		.uleb128 0x13
 754 00c2 3F       		.uleb128 0x3f
 755 00c3 0C       		.uleb128 0xc
 756 00c4 02       		.uleb128 0x2
 757 00c5 0A       		.uleb128 0xa
 758 00c6 00       		.byte	0x0
 759 00c7 00       		.byte	0x0
 760 00c8 00       		.byte	0x0
 761              		.section	.debug_pubnames,"",%progbits
 762 0000 41000000 		.4byte	0x41
 763 0004 0200     		.2byte	0x2
 764 0006 00000000 		.4byte	.Ldebug_info0
 765 000a 90010000 		.4byte	0x190
 766 000e 9D000000 		.4byte	0x9d
 767 0012 436D6453 		.ascii	"CmdStatus\000"
 767      74617475 
 767      7300
 768 001c B2000000 		.4byte	0xb2
 769 0020 436D6452 		.ascii	"CmdReset\000"
 769      65736574 
 769      00
 770 0029 C7000000 		.4byte	0xc7
 771 002d 53574443 		.ascii	"SWDComm\000"
 771      6F6D6D00 
 772 0035 7D010000 		.4byte	0x17d
 773 0039 53574446 		.ascii	"SWDFlag\000"
 773      6C616700 
 774 0041 00000000 		.4byte	0x0
 775              		.section	.debug_aranges,"",%progbits
 776 0000 2C000000 		.4byte	0x2c
 777 0004 0200     		.2byte	0x2
 778 0006 00000000 		.4byte	.Ldebug_info0
 779 000a 04       		.byte	0x4
 780 000b 00       		.byte	0x0
 781 000c 0000     		.2byte	0x0
 782 000e 0000     		.2byte	0x0
 783 0010 00000000 		.4byte	.LFB29
 784 0014 3E000000 		.4byte	.LFE29-.LFB29
 785 0018 00000000 		.4byte	.LFB30
 786 001c 74000000 		.4byte	.LFE30-.LFB30
 787 0020 00000000 		.4byte	.LFB31
 788 0024 0A010000 		.4byte	.LFE31-.LFB31
 789 0028 00000000 		.4byte	0x0
 790 002c 00000000 		.4byte	0x0
 791              		.section	.debug_ranges,"",%progbits
 792              	.Ldebug_ranges0:
 793 0000 00000000 		.4byte	.Ltext0
 794 0004 00000000 		.4byte	.Letext0
 795 0008 00000000 		.4byte	.LFB29
 796 000c 3E000000 		.4byte	.LFE29
 797 0010 00000000 		.4byte	.LFB30
 798 0014 74000000 		.4byte	.LFE30
 799 0018 00000000 		.4byte	.LFB31
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 19


 800 001c 0A010000 		.4byte	.LFE31
 801 0020 00000000 		.4byte	0x0
 802 0024 00000000 		.4byte	0x0
 803              		.section	.debug_str,"MS",%progbits,1
 804              	.LASF6:
 805 0000 6C6F6E67 		.ascii	"long long int\000"
 805      206C6F6E 
 805      6720696E 
 805      7400
 806              	.LASF18:
 807 000e 66546342 		.ascii	"fTcBusy\000"
 807      75737900 
 808              	.LASF19:
 809 0016 70696644 		.ascii	"pifData\000"
 809      61746100 
 810              	.LASF20:
 811 001e 70696642 		.ascii	"pifBuf\000"
 811      756600
 812              	.LASF23:
 813 0025 6275664F 		.ascii	"bufOutLen\000"
 813      75744C65 
 813      6E00
 814              	.LASF11:
 815 002f 666C6F61 		.ascii	"float\000"
 815      7400
 816              	.LASF1:
 817 0035 756E7369 		.ascii	"unsigned char\000"
 817      676E6564 
 817      20636861 
 817      7200
 818              	.LASF10:
 819 0043 696E7431 		.ascii	"int16\000"
 819      3600
 820              	.LASF5:
 821 0049 6C6F6E67 		.ascii	"long unsigned int\000"
 821      20756E73 
 821      69676E65 
 821      6420696E 
 821      7400
 822              	.LASF3:
 823 005b 73686F72 		.ascii	"short unsigned int\000"
 823      7420756E 
 823      7369676E 
 823      65642069 
 823      6E7400
 824              	.LASF16:
 825 006e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 825      52784275 
 825      66666572 
 825      00
 826              	.LASF12:
 827 007b 646F7562 		.ascii	"double\000"
 827      6C6500
 828              	.LASF28:
 829 0082 53574443 		.ascii	"SWDComm\000"
 829      6F6D6D00 
 830              	.LASF15:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 20


 831 008a 436D6452 		.ascii	"CmdReset\000"
 831      65736574 
 831      00
 832              	.LASF17:
 833 0093 70656E64 		.ascii	"pendingOp\000"
 833      696E674F 
 833      7000
 834              	.LASF8:
 835 009d 756E7369 		.ascii	"unsigned int\000"
 835      676E6564 
 835      20696E74 
 835      00
 836              	.LASF7:
 837 00aa 6C6F6E67 		.ascii	"long long unsigned int\000"
 837      206C6F6E 
 837      6720756E 
 837      7369676E 
 837      65642069 
 838              	.LASF25:
 839 00c1 474E5520 		.ascii	"GNU C 4.4.1\000"
 839      4320342E 
 839      342E3100 
 840              	.LASF29:
 841 00cd 70726F67 		.ascii	"progProtocol\000"
 841      50726F74 
 841      6F636F6C 
 841      00
 842              	.LASF21:
 843 00da 6275664F 		.ascii	"bufOutOffset\000"
 843      75744F66 
 843      66736574 
 843      00
 844              	.LASF13:
 845 00e7 63686172 		.ascii	"char\000"
 845      00
 846              	.LASF26:
 847 00ec 2E5C636F 		.ascii	".\\commandprocessor.c\000"
 847      6D6D616E 
 847      6470726F 
 847      63657373 
 847      6F722E63 
 848              	.LASF22:
 849 0101 62756649 		.ascii	"bufInOffset\000"
 849      6E4F6666 
 849      73657400 
 850              	.LASF2:
 851 010d 73686F72 		.ascii	"short int\000"
 851      7420696E 
 851      7400
 852              	.LASF9:
 853 0117 75696E74 		.ascii	"uint8\000"
 853      3800
 854              	.LASF4:
 855 011d 6C6F6E67 		.ascii	"long int\000"
 855      20696E74 
 855      00
 856              	.LASF0:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccEpqQo0.s 			page 21


 857 0126 7369676E 		.ascii	"signed char\000"
 857      65642063 
 857      68617200 
 858              	.LASF27:
 859 0132 5C5C7073 		.ascii	"\\\\psf\\Home\\Desktop\\KitProg version 2_03\\KitPr"
 859      665C486F 
 859      6D655C44 
 859      65736B74 
 859      6F705C4B 
 860 015f 6F675C4B 		.ascii	"og\\KitProg.cydsn\000"
 860      69745072 
 860      6F672E63 
 860      7964736E 
 860      00
 861              	.LASF24:
 862 0170 53574446 		.ascii	"SWDFlag\000"
 862      6C616700 
 863              	.LASF14:
 864 0178 436D6453 		.ascii	"CmdStatus\000"
 864      74617475 
 864      7300
 865              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
