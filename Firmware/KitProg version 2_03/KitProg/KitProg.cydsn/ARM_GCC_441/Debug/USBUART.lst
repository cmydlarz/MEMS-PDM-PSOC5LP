ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"USBUART.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 C8000000 		.text
  20      02008200 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.UARTBridgeComm,"ax",%progbits
  24              		.align	2
  25              		.global	UARTBridgeComm
  26              		.thumb
  27              		.thumb_func
  28              		.type	UARTBridgeComm, %function
  29              	UARTBridgeComm:
  30              	.LFB29:
  31              		.file 1 ".\\USBUART.c"
   1:.\USBUART.c   **** /*****************************************************************************
   2:.\USBUART.c   **** * File Name: USBUART.c
   3:.\USBUART.c   **** * Version 2.03
   4:.\USBUART.c   **** *
   5:.\USBUART.c   **** * Description:
   6:.\USBUART.c   **** *  This file provides the source code to handle USBUART Bridge functionality
   7:.\USBUART.c   **** *
   8:.\USBUART.c   **** * Owner:
   9:.\USBUART.c   **** *	Sree Harsha Angara, Applications Engineer (sreh@cypress.com)
  10:.\USBUART.c   **** *
  11:.\USBUART.c   **** * Related Document:
  12:.\USBUART.c   **** * 	001-85925 CY8CKIT-042 IROS
  13:.\USBUART.c   **** *
  14:.\USBUART.c   **** * Hardware Dependency:
  15:.\USBUART.c   **** * 	CY8CKIT-042 REV 1 
  16:.\USBUART.c   **** *
  17:.\USBUART.c   **** * Code Tested With:
  18:.\USBUART.c   **** * 	Creator 2.2
  19:.\USBUART.c   **** *	GCC1 4.4.1
  20:.\USBUART.c   **** *	CY8CKIT-042 REV 1
  21:.\USBUART.c   **** * 
  22:.\USBUART.c   **** ******************************************************************************
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 2


  23:.\USBUART.c   **** * Copyright (2013), Cypress Semiconductor Corporation.
  24:.\USBUART.c   **** ******************************************************************************
  25:.\USBUART.c   **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  26:.\USBUART.c   **** * protected by and subject to worldwide patent protection (United States and
  27:.\USBUART.c   **** * foreign), United States copyright laws and international treaty provisions.
  28:.\USBUART.c   **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  29:.\USBUART.c   **** * license to copy, use, modify, create derivative works of, and compile the
  30:.\USBUART.c   **** * Cypress Source Code and derivative works for the sole purpose of creating
  31:.\USBUART.c   **** * custom software in support of licensee product to be used only in conjunction
  32:.\USBUART.c   **** * with a Cypress integrated circuit as specified in the applicable agreement.
  33:.\USBUART.c   **** * Any reproduction, modification, translation, compilation, or representation of
  34:.\USBUART.c   **** * this software except as specified above is prohibited without the express
  35:.\USBUART.c   **** * written permission of Cypress.
  36:.\USBUART.c   **** *
  37:.\USBUART.c   **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  38:.\USBUART.c   **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  39:.\USBUART.c   **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  40:.\USBUART.c   **** * Cypress reserves the right to make changes without further notice to the
  41:.\USBUART.c   **** * materials described herein. Cypress does not assume any liability arising out
  42:.\USBUART.c   **** * of the application or use of any product or circuit described herein. Cypress
  43:.\USBUART.c   **** * does not authorize its products for use as critical components in life-support
  44:.\USBUART.c   **** * systems where a malfunction or failure may reasonably be expected to result in
  45:.\USBUART.c   **** * significant injury to the user. The inclusion of Cypress' product in a life-
  46:.\USBUART.c   **** * support systems application implies that the manufacturer assumes all risk of
  47:.\USBUART.c   **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  48:.\USBUART.c   **** * limited by and subject to the applicable Cypress software license agreement.
  49:.\USBUART.c   **** *****************************************************************************/
  50:.\USBUART.c   **** 
  51:.\USBUART.c   **** #include "kitprog.h"
  52:.\USBUART.c   **** 
  53:.\USBUART.c   **** /*******************************************************************************
  54:.\USBUART.c   **** * Macro Name: CheckLine
  55:.\USBUART.c   **** ********************************************************************************
  56:.\USBUART.c   **** * Summary:
  57:.\USBUART.c   **** * Checks for line change, Reconfigures the UART clock to match host baud rate
  58:.\USBUART.c   **** *******************************************************************************/
  59:.\USBUART.c   **** 
  60:.\USBUART.c   **** #define CheckLine() {																				\
  61:.\USBUART.c   **** 																									\
  62:.\USBUART.c   **** 	uint32 dDTERate;																				\
  63:.\USBUART.c   **** 	uint16 wDivider;																				\
  64:.\USBUART.c   **** 																									\
  65:.\USBUART.c   **** 	if(USBFS_IsLineChanged())																		\
  66:.\USBUART.c   **** 	{																								\
  67:.\USBUART.c   **** 		/* Get Baud Rate */																			\
  68:.\USBUART.c   **** 		dDTERate = USBFS_GetDTERate();  															\
  69:.\USBUART.c   **** 																									\
  70:.\USBUART.c   **** 		/* Check for Baud Rate Upper Limit */														\
  71:.\USBUART.c   **** 		if(dDTERate > 115200)																		\
  72:.\USBUART.c   **** 		{																							\
  73:.\USBUART.c   **** 			dDTERate  = 115200;																		\
  74:.\USBUART.c   **** 		}																							\
  75:.\USBUART.c   **** 																									\
  76:.\USBUART.c   **** 		/* Check for Baud Rate Lower Limit */														\
  77:.\USBUART.c   **** 		if(dDTERate < 1200)																			\
  78:.\USBUART.c   **** 		{																							\
  79:.\USBUART.c   **** 			dDTERate  = 1200;																		\
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 3


  80:.\USBUART.c   **** 		}																							\
  81:.\USBUART.c   **** 																									\
  82:.\USBUART.c   **** 		/* Sets the required Clock divider for UART */												\
  83:.\USBUART.c   **** 		switch(dDTERate)																			\
  84:.\USBUART.c   **** 	    {																							\
  85:.\USBUART.c   **** 																									\
  86:.\USBUART.c   **** 			case 115200:																			\
  87:.\USBUART.c   **** 	            wDivider = DIVIDER115200;															\
  88:.\USBUART.c   **** 	            break;																				\
  89:.\USBUART.c   **** 	        case 57600:																				\
  90:.\USBUART.c   **** 	            wDivider = DIVIDER57600;															\
  91:.\USBUART.c   **** 	            break;																				\
  92:.\USBUART.c   **** 	        case 38400:																				\
  93:.\USBUART.c   **** 	            wDivider = DIVIDER38400;															\
  94:.\USBUART.c   **** 	            break;																				\
  95:.\USBUART.c   **** 	        case 19200:																				\
  96:.\USBUART.c   **** 	            wDivider = DIVIDER19200;															\
  97:.\USBUART.c   **** 	            break;																				\
  98:.\USBUART.c   **** 	        case 9600:																				\
  99:.\USBUART.c   **** 	            wDivider = DIVIDER9600;																\
 100:.\USBUART.c   **** 	            break;																				\
 101:.\USBUART.c   **** 	        case 4800:																				\
 102:.\USBUART.c   **** 	            wDivider = DIVIDER4800;																\
 103:.\USBUART.c   **** 	            break;																				\
 104:.\USBUART.c   **** 	        case 2400:																				\
 105:.\USBUART.c   **** 	            wDivider = DIVIDER2400;																\
 106:.\USBUART.c   **** 	            break;																				\
 107:.\USBUART.c   **** 	        case 1200:																				\
 108:.\USBUART.c   **** 	            wDivider = DIVIDER1200;																\
 109:.\USBUART.c   **** 	            break;																				\
 110:.\USBUART.c   **** 	        default: 																				\
 111:.\USBUART.c   **** 	            wDivider = DIVIDER115200;															\
 112:.\USBUART.c   **** 	            break;																				\
 113:.\USBUART.c   **** 	    }																							\
 114:.\USBUART.c   **** 																									\
 115:.\USBUART.c   **** 		/* Stop UART for new Clock */																\
 116:.\USBUART.c   **** 	    UART_Bridge_Stop();   																		\
 117:.\USBUART.c   **** 	    																							\
 118:.\USBUART.c   **** 		/* Set new Clock Frequency */																\
 119:.\USBUART.c   **** 		Clock_UART_SetDivider(wDivider-1);															\
 120:.\USBUART.c   **** 	    																							\
 121:.\USBUART.c   **** 		/* Restart UART */																			\
 122:.\USBUART.c   **** 		UART_Bridge_Start();																		\
 123:.\USBUART.c   **** 		UART_Bridge_ClearRxBuffer();																\
 124:.\USBUART.c   **** 		UART_Bridge_ClearTxBuffer();																\
 125:.\USBUART.c   **** 	}																								\
 126:.\USBUART.c   **** }																									
 127:.\USBUART.c   **** 
 128:.\USBUART.c   **** /*******************************************************************************
 129:.\USBUART.c   **** * Macro Name: USBUARTTransmit
 130:.\USBUART.c   **** ********************************************************************************
 131:.\USBUART.c   **** * Summary:
 132:.\USBUART.c   **** * Checks if USB host has sent data and transfers it to the UART Transmitter 
 133:.\USBUART.c   **** *
 134:.\USBUART.c   **** *******************************************************************************/
 135:.\USBUART.c   **** 
 136:.\USBUART.c   **** #define USBUARTTransmit()   {																		\
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 4


 137:.\USBUART.c   **** 																									\
 138:.\USBUART.c   **** 	uint8 size;																						\
 139:.\USBUART.c   **** 	uint8 buffer[64]; 																				\
 140:.\USBUART.c   **** 																									\
 141:.\USBUART.c   **** 	/* Check for USB host packet */																	\
 142:.\USBUART.c   **** 	if(USBFS_GetEPState(UART_OUT_EP))						 										\
 143:.\USBUART.c   **** 	{  																								\
 144:.\USBUART.c   **** 		/* Get size of packet */ 																	\
 145:.\USBUART.c   **** 		size = USBFS_GetEPCount(UART_OUT_EP);										  				\
 146:.\USBUART.c   **** 																									\
 147:.\USBUART.c   **** 		/* Read from USB Buffer */ 																	\
 148:.\USBUART.c   **** 		USBFS_ReadOutEP(UART_OUT_EP,&buffer[0],size);												\
 149:.\USBUART.c   **** 																									\
 150:.\USBUART.c   **** 		/* Send to UART Tx */																		\
 151:.\USBUART.c   **** 		UART_Bridge_PutArray(&buffer[0] , size);								 					\
 152:.\USBUART.c   **** 	}																								\
 153:.\USBUART.c   **** }
 154:.\USBUART.c   **** 
 155:.\USBUART.c   **** 
 156:.\USBUART.c   **** /*******************************************************************************
 157:.\USBUART.c   **** * Macro Name: USBUARTReceive
 158:.\USBUART.c   **** ********************************************************************************
 159:.\USBUART.c   **** * Summary:
 160:.\USBUART.c   **** * Checks if the UART has received data and sends it to the USB host 
 161:.\USBUART.c   **** *******************************************************************************/
 162:.\USBUART.c   **** 
 163:.\USBUART.c   **** #define USBUARTReceive() {																											\
 164:.\USBUART.c   **** 																																	\
 165:.\USBUART.c   **** 	uint8 wCount; 																													\
 166:.\USBUART.c   **** 	uint8 wRxBufferRead;																											\
 167:.\USBUART.c   **** 	uint8 bIndex;																													\
 168:.\USBUART.c   **** 																																	\
 169:.\USBUART.c   **** 	if(UART_Bridge_ReadRxStatus() == UART_Bridge_RX_STS_SOFT_BUFF_OVER)																\
 170:.\USBUART.c   **** 	{																																\
 171:.\USBUART.c   **** 		UART_Bridge_ClearRxBuffer();																								\
 172:.\USBUART.c   **** 	}																																\
 173:.\USBUART.c   **** 																																	\
 174:.\USBUART.c   **** 	/* Get the Received UART data size */																							\
 175:.\USBUART.c   **** 	wCount = UART_Bridge_GetRxBufferSize();                  		 																\
 176:.\USBUART.c   **** 																																	\
 177:.\USBUART.c   **** 	/* Check if Rx has data and USB has finished sending old data */																\
 178:.\USBUART.c   **** 	if( (wCount != 0) && 																											\
 179:.\USBUART.c   **** 	( USBFS_bGetEPState(UART_IN_EP) == USBFS_IN_BUFFER_EMPTY ))																		\
 180:.\USBUART.c   **** 	{																																\
 181:.\USBUART.c   **** 	    /* Limit data size to USB EP Packet Size */																					\
 182:.\USBUART.c   **** 		if( wCount > USBINPACKETSIZE )																								\
 183:.\USBUART.c   **** 	    {																															\
 184:.\USBUART.c   **** 	        wCount = USBINPACKETSIZE;                       																		\
 185:.\USBUART.c   **** 	    }																															\
 186:.\USBUART.c   **** 	    																															\
 187:.\USBUART.c   **** 	    /* Read current Rx Buffer pointer to a temporary pointer */ 																\
 188:.\USBUART.c   **** 		wRxBufferRead = UART_Bridge_rxBufferRead;																					\
 189:.\USBUART.c   **** 	    																															\
 190:.\USBUART.c   **** 	    for( bIndex = 0; bIndex < wCount; bIndex++, wRxBufferRead++)																\
 191:.\USBUART.c   **** 	    {																															\
 192:.\USBUART.c   **** 	        /* Reset temporary Buffer pointer on overflow */ 																		\
 193:.\USBUART.c   **** 	        if(wRxBufferRead >= UART_Bridge_RXBUFFERSIZE)																			\
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 5


 194:.\USBUART.c   **** 	        {																														\
 195:.\USBUART.c   **** 	            wRxBufferRead = 0u;																									\
 196:.\USBUART.c   **** 	        }																														\
 197:.\USBUART.c   **** 			/*Load from UART RX Buffer to USB */ 																					\
 198:.\USBUART.c   **** 	        CY_SET_REG8((uint8 *)USBUART_INEP_WRITE_DATA_PTR,  UART_Bridge_rxBuffer[wRxBufferRead]); 	
 199:.\USBUART.c   **** 	    }																															\
 200:.\USBUART.c   **** 	  																																\
 201:.\USBUART.c   **** 		/* Send out data */																											\
 202:.\USBUART.c   **** 	    TransmittoUSBHost();                  																						\
 203:.\USBUART.c   **** 																																	\
 204:.\USBUART.c   **** 		/* Load new Rx Buffer Pointer */																							\
 205:.\USBUART.c   **** 	    UART_Bridge_rxBufferRead = wRxBufferRead;																					\
 206:.\USBUART.c   **** 		UART_Bridge_rxBufferLoopDetect = 0;																							\
 207:.\USBUART.c   **** 																																	\
 208:.\USBUART.c   **** 	}																																\
 209:.\USBUART.c   **** }
 210:.\USBUART.c   **** 
 211:.\USBUART.c   **** 
 212:.\USBUART.c   **** 
 213:.\USBUART.c   **** /*******************************************************************************
 214:.\USBUART.c   **** * Macro Name: TransmittoUSBHost
 215:.\USBUART.c   **** ********************************************************************************
 216:.\USBUART.c   **** * Summary:
 217:.\USBUART.c   **** * Sets registers to transmit from USB INEP Buffer
 218:.\USBUART.c   **** *
 219:.\USBUART.c   **** *******************************************************************************/
 220:.\USBUART.c   **** 
 221:.\USBUART.c   **** #define TransmittoUSBHost() {																		\
 222:.\USBUART.c   ****     																								\
 223:.\USBUART.c   **** 	/* Write WAx */ 																				\
 224:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_WRITE_PTR,     USBFS_EP[UART_IN_EP].buffOffset & 0xFFu);				\
 225:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_WRITE_MSB_PTR, (USBFS_EP[UART_IN_EP].buffOffset >> 8u));				\
 226:.\USBUART.c   ****     																								\
 227:.\USBUART.c   **** 	/* Set the count and data toggle */																\
 228:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_CNT0_PTR, (wCount >> 8u) | (USBFS_EP[UART_IN_EP].epToggle)); 			\
 229:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_CNT1_PTR,  wCount & 0xFFu); 											\
 230:.\USBUART.c   ****     																								\
 231:.\USBUART.c   **** 	/* Write the RAx */ 																			\
 232:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_READ_PTR,     USBFS_EP[UART_IN_EP].buffOffset & 0xFFu); 				\
 233:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_READ_MSB_PTR, (USBFS_EP[UART_IN_EP].buffOffset >> 8u)); 				\
 234:.\USBUART.c   **** 																									\
 235:.\USBUART.c   **** 	USBFS_EP[USBFS_EP6].apiEpState = USBFS_NO_EVENT_PENDING; 										\
 236:.\USBUART.c   ****     																								\
 237:.\USBUART.c   **** 	/* Write the Mode register */ 																	\
 238:.\USBUART.c   ****     CY_SET_REG8(USBUART_INEP_MODE_REG_PTR, USBFS_EP[UART_IN_EP].epMode); 							\
 239:.\USBUART.c   **** }
 240:.\USBUART.c   **** 
 241:.\USBUART.c   **** 
 242:.\USBUART.c   **** /*******************************************************************************
 243:.\USBUART.c   **** * Function Name: UARTBridgeComm()
 244:.\USBUART.c   **** ********************************************************************************
 245:.\USBUART.c   **** * Summary:
 246:.\USBUART.c   **** * This function handles the USB-UART bridge interface.
 247:.\USBUART.c   **** * It handles,
 248:.\USBUART.c   **** * a) Selection of UART clock based on host baud rate
 249:.\USBUART.c   **** * b) Transmit host packet to UART TX
 250:.\USBUART.c   **** * c) Transmit UART RX packet to host
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 6


 251:.\USBUART.c   **** *
 252:.\USBUART.c   **** * Parameters:
 253:.\USBUART.c   **** *  void
 254:.\USBUART.c   **** *
 255:.\USBUART.c   **** * Return:
 256:.\USBUART.c   **** *  void
 257:.\USBUART.c   **** *
 258:.\USBUART.c   **** *******************************************************************************/
 259:.\USBUART.c   **** 
 260:.\USBUART.c   **** void UARTBridgeComm (void)
 261:.\USBUART.c   **** {
  32              		.loc 1 261 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 80
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39 0002 94B0     		sub	sp, sp, #80
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 88
  42 0004 00AF     		add	r7, sp, #0
  43              		.cfi_offset 14, -4
  44              		.cfi_offset 7, -8
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 7
  47              	.LBB2:
 262:.\USBUART.c   **** 	/* Check for Line configuration change, Reconfigure UART based on host parameters */
 263:.\USBUART.c   **** 	CheckLine();
  48              		.loc 1 263 0
  49 0006 FFF7FEFF 		bl	USBFS_IsLineChanged
  50 000a 0346     		mov	r3, r0
  51 000c 002B     		cmp	r3, #0
  52 000e 71D0     		beq	.L2
  53 0010 FFF7FEFF 		bl	USBFS_GetDTERate
  54 0014 0346     		mov	r3, r0
  55 0016 7B64     		str	r3, [r7, #68]
  56 0018 7B6C     		ldr	r3, [r7, #68]
  57 001a B3F5E13F 		cmp	r3, #115200
  58 001e 02D9     		bls	.L3
  59 0020 4FF4E133 		mov	r3, #115200
  60 0024 7B64     		str	r3, [r7, #68]
  61              	.L3:
  62 0026 7A6C     		ldr	r2, [r7, #68]
  63 0028 40F2AF43 		movw	r3, #1199
  64 002c 9A42     		cmp	r2, r3
  65 002e 02D8     		bhi	.L4
  66 0030 4FF49663 		mov	r3, #1200
  67 0034 7B64     		str	r3, [r7, #68]
  68              	.L4:
  69 0036 7B6C     		ldr	r3, [r7, #68]
  70 0038 B3F5165F 		cmp	r3, #9600
  71 003c 30D0     		beq	.L9
  72 003e B3F5165F 		cmp	r3, #9600
  73 0042 09D8     		bhi	.L14
  74 0044 B3F5166F 		cmp	r3, #2400
  75 0048 34D0     		beq	.L7
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 7


  76 004a B3F5965F 		cmp	r3, #4800
  77 004e 2CD0     		beq	.L8
  78 0050 B3F5966F 		cmp	r3, #1200
  79 0054 33D0     		beq	.L6
  80 0056 37E0     		b	.L5
  81              	.L14:
  82 0058 B3F5164F 		cmp	r3, #38400
  83 005c 16D0     		beq	.L11
  84 005e B3F5164F 		cmp	r3, #38400
  85 0062 03D8     		bhi	.L15
  86 0064 B3F5964F 		cmp	r3, #19200
  87 0068 15D0     		beq	.L10
  88 006a 2DE0     		b	.L5
  89              	.L15:
  90 006c B3F5614F 		cmp	r3, #57600
  91 0070 07D0     		beq	.L12
  92 0072 B3F5E13F 		cmp	r3, #115200
  93 0076 27D1     		bne	.L5
  94              	.L13:
  95 0078 4FF01A03 		mov	r3, #26
  96 007c A7F84A30 		strh	r3, [r7, #74]	@ movhi
  97 0080 26E0     		b	.L16
  98              	.L12:
  99 0082 4FF03403 		mov	r3, #52
 100 0086 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 101 008a 21E0     		b	.L16
 102              	.L11:
 103 008c 4FF04E03 		mov	r3, #78
 104 0090 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 105 0094 1CE0     		b	.L16
 106              	.L10:
 107 0096 4FF09C03 		mov	r3, #156
 108 009a A7F84A30 		strh	r3, [r7, #74]	@ movhi
 109 009e 17E0     		b	.L16
 110              	.L9:
 111 00a0 4FF49C73 		mov	r3, #312
 112 00a4 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 113 00a8 12E0     		b	.L16
 114              	.L8:
 115 00aa 40F27123 		movw	r3, #625
 116 00ae A7F84A30 		strh	r3, [r7, #74]	@ movhi
 117 00b2 0DE0     		b	.L16
 118              	.L7:
 119 00b4 40F2E243 		movw	r3, #1250
 120 00b8 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 121 00bc 08E0     		b	.L16
 122              	.L6:
 123 00be 40F6C413 		movw	r3, #2500
 124 00c2 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 125 00c6 03E0     		b	.L16
 126              	.L5:
 127 00c8 4FF01A03 		mov	r3, #26
 128 00cc A7F84A30 		strh	r3, [r7, #74]	@ movhi
 129              	.L16:
 130 00d0 FFF7FEFF 		bl	UART_Bridge_Stop
 131 00d4 B7F84A30 		ldrh	r3, [r7, #74]	@ movhi
 132 00d8 03F1FF33 		add	r3, r3, #-1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 8


 133 00dc 9BB2     		uxth	r3, r3
 134 00de 1846     		mov	r0, r3
 135 00e0 4FF00101 		mov	r1, #1
 136 00e4 FFF7FEFF 		bl	Clock_UART_SetDividerRegister
 137 00e8 FFF7FEFF 		bl	UART_Bridge_Start
 138 00ec FFF7FEFF 		bl	UART_Bridge_ClearRxBuffer
 139 00f0 FFF7FEFF 		bl	UART_Bridge_ClearTxBuffer
 140              	.L2:
 141              	.LBE2:
 142              	.LBB3:
 264:.\USBUART.c   **** 	
 265:.\USBUART.c   **** 	/* USB to UART Transmit */
 266:.\USBUART.c   **** 	USBUARTTransmit();
 143              		.loc 1 266 0
 144 00f4 4FF00700 		mov	r0, #7
 145 00f8 FFF7FEFF 		bl	USBFS_GetEPState
 146 00fc 0346     		mov	r3, r0
 147 00fe 002B     		cmp	r3, #0
 148 0100 18D0     		beq	.L17
 149 0102 4FF00700 		mov	r0, #7
 150 0106 FFF7FEFF 		bl	USBFS_GetEPCount
 151 010a 0346     		mov	r3, r0
 152 010c 87F84C30 		strb	r3, [r7, #76]
 153 0110 97F84C30 		ldrb	r3, [r7, #76]	@ zero_extendqisi2
 154 0114 07F10402 		add	r2, r7, #4
 155 0118 4FF00700 		mov	r0, #7
 156 011c 1146     		mov	r1, r2
 157 011e 1A46     		mov	r2, r3
 158 0120 FFF7FEFF 		bl	USBFS_ReadOutEP
 159 0124 07F10402 		add	r2, r7, #4
 160 0128 97F84C30 		ldrb	r3, [r7, #76]	@ zero_extendqisi2
 161 012c 1046     		mov	r0, r2
 162 012e 1946     		mov	r1, r3
 163 0130 FFF7FEFF 		bl	UART_Bridge_PutArray
 164              	.L17:
 165              	.LBE3:
 166              	.LBB4:
 267:.\USBUART.c   **** 	
 268:.\USBUART.c   ****     /* UART to USB Receive */
 269:.\USBUART.c   **** 	USBUARTReceive();
 167              		.loc 1 269 0
 168 0134 FFF7FEFF 		bl	UART_Bridge_ReadRxStatus
 169 0138 0346     		mov	r3, r0
 170 013a 802B     		cmp	r3, #128
 171 013c 01D1     		bne	.L18
 172 013e FFF7FEFF 		bl	UART_Bridge_ClearRxBuffer
 173              	.L18:
 174 0142 FFF7FEFF 		bl	UART_Bridge_GetRxBufferSize
 175 0146 0346     		mov	r3, r0
 176 0148 87F84D30 		strb	r3, [r7, #77]
 177 014c 97F84D30 		ldrb	r3, [r7, #77]	@ zero_extendqisi2
 178 0150 002B     		cmp	r3, #0
 179 0152 00F0BC80 		beq	.L24
 180 0156 4FF00600 		mov	r0, #6
 181 015a FFF7FEFF 		bl	USBFS_GetEPState
 182 015e 0346     		mov	r3, r0
 183 0160 012B     		cmp	r3, #1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 9


 184 0162 40F0B480 		bne	.L24
 185 0166 97F84D30 		ldrb	r3, [r7, #77]	@ zero_extendqisi2
 186 016a 402B     		cmp	r3, #64
 187 016c 03D9     		bls	.L20
 188 016e 4FF04003 		mov	r3, #64
 189 0172 87F84D30 		strb	r3, [r7, #77]
 190              	.L20:
 191 0176 40F20003 		movw	r3, #:lower16:UART_Bridge_rxBufferRead
 192 017a C0F20003 		movt	r3, #:upper16:UART_Bridge_rxBufferRead
 193 017e 1B78     		ldrb	r3, [r3, #0]
 194 0180 87F84E30 		strb	r3, [r7, #78]
 195 0184 4FF00003 		mov	r3, #0
 196 0188 87F84F30 		strb	r3, [r7, #79]
 197 018c 21E0     		b	.L21
 198              	.L23:
 199 018e 97F84E30 		ldrb	r3, [r7, #78]	@ zero_extendqisi2
 200 0192 5BB2     		sxtb	r3, r3
 201 0194 002B     		cmp	r3, #0
 202 0196 03DA     		bge	.L22
 203 0198 4FF00003 		mov	r3, #0
 204 019c 87F84E30 		strb	r3, [r7, #78]
 205              	.L22:
 206 01a0 46F2D803 		movw	r3, #:lower16:1073766616
 207 01a4 C4F20003 		movt	r3, #:upper16:1073766616
 208 01a8 97F84E10 		ldrb	r1, [r7, #78]	@ zero_extendqisi2
 209 01ac 40F20002 		movw	r2, #:lower16:UART_Bridge_rxBuffer
 210 01b0 C0F20002 		movt	r2, #:upper16:UART_Bridge_rxBuffer
 211 01b4 525C     		ldrb	r2, [r2, r1]
 212 01b6 D2B2     		uxtb	r2, r2
 213 01b8 1A70     		strb	r2, [r3, #0]
 214 01ba 97F84F30 		ldrb	r3, [r7, #79]
 215 01be 03F10103 		add	r3, r3, #1
 216 01c2 87F84F30 		strb	r3, [r7, #79]
 217 01c6 97F84E30 		ldrb	r3, [r7, #78]
 218 01ca 03F10103 		add	r3, r3, #1
 219 01ce 87F84E30 		strb	r3, [r7, #78]
 220              	.L21:
 221 01d2 97F84F20 		ldrb	r2, [r7, #79]	@ zero_extendqisi2
 222 01d6 97F84D30 		ldrb	r3, [r7, #77]	@ zero_extendqisi2
 223 01da 9A42     		cmp	r2, r3
 224 01dc D7D3     		bcc	.L23
 225 01de 46F2D403 		movw	r3, #:lower16:1073766612
 226 01e2 C4F20003 		movt	r3, #:upper16:1073766612
 227 01e6 40F20002 		movw	r2, #:lower16:USBFS_EP
 228 01ea C0F20002 		movt	r2, #:upper16:USBFS_EP
 229 01ee B2F84E20 		ldrh	r2, [r2, #78]	@ movhi
 230 01f2 92B2     		uxth	r2, r2
 231 01f4 D2B2     		uxtb	r2, r2
 232 01f6 1A70     		strb	r2, [r3, #0]
 233 01f8 46F2D503 		movw	r3, #:lower16:1073766613
 234 01fc C4F20003 		movt	r3, #:upper16:1073766613
 235 0200 40F20002 		movw	r2, #:lower16:USBFS_EP
 236 0204 C0F20002 		movt	r2, #:upper16:USBFS_EP
 237 0208 B2F84E20 		ldrh	r2, [r2, #78]	@ movhi
 238 020c 92B2     		uxth	r2, r2
 239 020e 4FEA1222 		lsr	r2, r2, #8
 240 0212 92B2     		uxth	r2, r2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 10


 241 0214 D2B2     		uxtb	r2, r2
 242 0216 1A70     		strb	r2, [r3, #0]
 243 0218 46F25C03 		movw	r3, #:lower16:1073766492
 244 021c C4F20003 		movt	r3, #:upper16:1073766492
 245 0220 97F84D20 		ldrb	r2, [r7, #77]	@ zero_extendqisi2
 246 0224 4FEA2222 		asr	r2, r2, #8
 247 0228 D1B2     		uxtb	r1, r2
 248 022a 40F20002 		movw	r2, #:lower16:USBFS_EP
 249 022e C0F20002 		movt	r2, #:upper16:USBFS_EP
 250 0232 92F84B20 		ldrb	r2, [r2, #75]
 251 0236 D2B2     		uxtb	r2, r2
 252 0238 41EA0202 		orr	r2, r1, r2
 253 023c D2B2     		uxtb	r2, r2
 254 023e D2B2     		uxtb	r2, r2
 255 0240 1A70     		strb	r2, [r3, #0]
 256 0242 46F25D03 		movw	r3, #:lower16:1073766493
 257 0246 C4F20003 		movt	r3, #:upper16:1073766493
 258 024a 97F84D20 		ldrb	r2, [r7, #77]
 259 024e 1A70     		strb	r2, [r3, #0]
 260 0250 46F2D603 		movw	r3, #:lower16:1073766614
 261 0254 C4F20003 		movt	r3, #:upper16:1073766614
 262 0258 40F20002 		movw	r2, #:lower16:USBFS_EP
 263 025c C0F20002 		movt	r2, #:upper16:USBFS_EP
 264 0260 B2F84E20 		ldrh	r2, [r2, #78]	@ movhi
 265 0264 92B2     		uxth	r2, r2
 266 0266 D2B2     		uxtb	r2, r2
 267 0268 1A70     		strb	r2, [r3, #0]
 268 026a 46F2D703 		movw	r3, #:lower16:1073766615
 269 026e C4F20003 		movt	r3, #:upper16:1073766615
 270 0272 40F20002 		movw	r2, #:lower16:USBFS_EP
 271 0276 C0F20002 		movt	r2, #:upper16:USBFS_EP
 272 027a B2F84E20 		ldrh	r2, [r2, #78]	@ movhi
 273 027e 92B2     		uxth	r2, r2
 274 0280 4FEA1222 		lsr	r2, r2, #8
 275 0284 92B2     		uxth	r2, r2
 276 0286 D2B2     		uxtb	r2, r2
 277 0288 1A70     		strb	r2, [r3, #0]
 278 028a 40F20003 		movw	r3, #:lower16:USBFS_EP
 279 028e C0F20003 		movt	r3, #:upper16:USBFS_EP
 280 0292 4FF00002 		mov	r2, #0
 281 0296 83F84920 		strb	r2, [r3, #73]
 282 029a 46F25E03 		movw	r3, #:lower16:1073766494
 283 029e C4F20003 		movt	r3, #:upper16:1073766494
 284 02a2 40F20002 		movw	r2, #:lower16:USBFS_EP
 285 02a6 C0F20002 		movt	r2, #:upper16:USBFS_EP
 286 02aa 92F84D20 		ldrb	r2, [r2, #77]
 287 02ae D2B2     		uxtb	r2, r2
 288 02b0 1A70     		strb	r2, [r3, #0]
 289 02b2 40F20003 		movw	r3, #:lower16:UART_Bridge_rxBufferRead
 290 02b6 C0F20003 		movt	r3, #:upper16:UART_Bridge_rxBufferRead
 291 02ba 97F84E20 		ldrb	r2, [r7, #78]
 292 02be 1A70     		strb	r2, [r3, #0]
 293 02c0 40F20003 		movw	r3, #:lower16:UART_Bridge_rxBufferLoopDetect
 294 02c4 C0F20003 		movt	r3, #:upper16:UART_Bridge_rxBufferLoopDetect
 295 02c8 4FF00002 		mov	r2, #0
 296 02cc 1A70     		strb	r2, [r3, #0]
 297              	.L24:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 11


 298              	.LBE4:
 270:.\USBUART.c   **** 
 271:.\USBUART.c   **** 	return;
 272:.\USBUART.c   **** 
 273:.\USBUART.c   **** }
 299              		.loc 1 273 0
 300 02ce 07F15007 		add	r7, r7, #80
 301 02d2 BD46     		mov	sp, r7
 302 02d4 80BD     		pop	{r7, pc}
 303              		.cfi_endproc
 304              	.LFE29:
 305              		.size	UARTBridgeComm, .-UARTBridgeComm
 306 02d6 00BF     		.section	.text.USBUARTInit,"ax",%progbits
 307              		.align	2
 308              		.global	USBUARTInit
 309              		.thumb
 310              		.thumb_func
 311              		.type	USBUARTInit, %function
 312              	USBUARTInit:
 313              	.LFB30:
 274:.\USBUART.c   **** 
 275:.\USBUART.c   **** 
 276:.\USBUART.c   **** /*******************************************************************************
 277:.\USBUART.c   **** * Function Name: USBUARTInit()
 278:.\USBUART.c   **** ********************************************************************************
 279:.\USBUART.c   **** * Summary:
 280:.\USBUART.c   **** * Starts the UART, sets Tx Pin to HiZ to save power during enumeration
 281:.\USBUART.c   **** *
 282:.\USBUART.c   **** * Parameters:
 283:.\USBUART.c   **** *  void
 284:.\USBUART.c   **** *
 285:.\USBUART.c   **** * Return:
 286:.\USBUART.c   **** *  void
 287:.\USBUART.c   **** *
 288:.\USBUART.c   **** *******************************************************************************/
 289:.\USBUART.c   **** 
 290:.\USBUART.c   **** void USBUARTInit (void)
 291:.\USBUART.c   **** {
 314              		.loc 1 291 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318 0000 80B5     		push	{r7, lr}
 319              	.LCFI3:
 320              		.cfi_def_cfa_offset 8
 321 0002 00AF     		add	r7, sp, #0
 322              		.cfi_offset 14, -4
 323              		.cfi_offset 7, -8
 324              	.LCFI4:
 325              		.cfi_def_cfa_register 7
 292:.\USBUART.c   **** 
 293:.\USBUART.c   **** 	UART_Bridge_Start();
 326              		.loc 1 293 0
 327 0004 FFF7FEFF 		bl	UART_Bridge_Start
 294:.\USBUART.c   **** 	Pin_UART_Tx_SetDriveMode(Pin_UART_Tx_DM_DIG_HIZ);
 328              		.loc 1 294 0
 329 0008 4FF00200 		mov	r0, #2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 12


 330 000c FFF7FEFF 		bl	Pin_UART_Tx_SetDriveMode
 295:.\USBUART.c   **** 
 296:.\USBUART.c   **** }
 331              		.loc 1 296 0
 332 0010 80BD     		pop	{r7, pc}
 333              		.cfi_endproc
 334              	.LFE30:
 335              		.size	USBUARTInit, .-USBUARTInit
 336 0012 00BF     		.section	.text.USBUARTStart,"ax",%progbits
 337              		.align	2
 338              		.global	USBUARTStart
 339              		.thumb
 340              		.thumb_func
 341              		.type	USBUARTStart, %function
 342              	USBUARTStart:
 343              	.LFB31:
 297:.\USBUART.c   **** 
 298:.\USBUART.c   **** /*******************************************************************************
 299:.\USBUART.c   **** * Function Name: USBUARTStart()
 300:.\USBUART.c   **** ********************************************************************************
 301:.\USBUART.c   **** * Summary:
 302:.\USBUART.c   **** * Initializes CDC Interface, Sets Tx Pin to Strong Drive
 303:.\USBUART.c   **** *
 304:.\USBUART.c   **** * Parameters:
 305:.\USBUART.c   **** *  void
 306:.\USBUART.c   **** *
 307:.\USBUART.c   **** * Return:
 308:.\USBUART.c   **** *  void
 309:.\USBUART.c   **** *
 310:.\USBUART.c   **** *******************************************************************************/
 311:.\USBUART.c   **** 
 312:.\USBUART.c   **** void USBUARTStart (void)
 313:.\USBUART.c   **** {
 344              		.loc 1 313 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              	.LCFI5:
 350              		.cfi_def_cfa_offset 8
 351 0002 00AF     		add	r7, sp, #0
 352              		.cfi_offset 14, -4
 353              		.cfi_offset 7, -8
 354              	.LCFI6:
 355              		.cfi_def_cfa_register 7
 314:.\USBUART.c   **** 	/* Initialize CDC Interface for USB-UART Bridge */
 315:.\USBUART.c   **** 	USBFS_CDC_Init();
 356              		.loc 1 315 0
 357 0004 FFF7FEFF 		bl	USBFS_CDC_Init
 316:.\USBUART.c   **** 	Pin_UART_Tx_SetDriveMode(Pin_UART_Tx_DM_STRONG);
 358              		.loc 1 316 0
 359 0008 4FF00C00 		mov	r0, #12
 360 000c FFF7FEFF 		bl	Pin_UART_Tx_SetDriveMode
 317:.\USBUART.c   **** 
 318:.\USBUART.c   **** }
 361              		.loc 1 318 0
 362 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 13


 363              		.cfi_endproc
 364              	.LFE31:
 365              		.size	USBUARTStart, .-USBUARTStart
 366 0012 00BF     		.text
 367              	.Letext0:
 368              		.section	.debug_loc,"",%progbits
 369              	.Ldebug_loc0:
 370              	.LLST0:
 371 0000 00000000 		.4byte	.LFB29
 372 0004 02000000 		.4byte	.LCFI0
 373 0008 0100     		.2byte	0x1
 374 000a 5D       		.byte	0x5d
 375 000b 02000000 		.4byte	.LCFI0
 376 000f 04000000 		.4byte	.LCFI1
 377 0013 0200     		.2byte	0x2
 378 0015 7D       		.byte	0x7d
 379 0016 08       		.sleb128 8
 380 0017 04000000 		.4byte	.LCFI1
 381 001b 06000000 		.4byte	.LCFI2
 382 001f 0300     		.2byte	0x3
 383 0021 7D       		.byte	0x7d
 384 0022 D800     		.sleb128 88
 385 0024 06000000 		.4byte	.LCFI2
 386 0028 D6020000 		.4byte	.LFE29
 387 002c 0300     		.2byte	0x3
 388 002e 77       		.byte	0x77
 389 002f D800     		.sleb128 88
 390 0031 00000000 		.4byte	0x0
 391 0035 00000000 		.4byte	0x0
 392              	.LLST1:
 393 0039 00000000 		.4byte	.LFB30
 394 003d 02000000 		.4byte	.LCFI3
 395 0041 0100     		.2byte	0x1
 396 0043 5D       		.byte	0x5d
 397 0044 02000000 		.4byte	.LCFI3
 398 0048 04000000 		.4byte	.LCFI4
 399 004c 0200     		.2byte	0x2
 400 004e 7D       		.byte	0x7d
 401 004f 08       		.sleb128 8
 402 0050 04000000 		.4byte	.LCFI4
 403 0054 12000000 		.4byte	.LFE30
 404 0058 0200     		.2byte	0x2
 405 005a 77       		.byte	0x77
 406 005b 08       		.sleb128 8
 407 005c 00000000 		.4byte	0x0
 408 0060 00000000 		.4byte	0x0
 409              	.LLST2:
 410 0064 00000000 		.4byte	.LFB31
 411 0068 02000000 		.4byte	.LCFI5
 412 006c 0100     		.2byte	0x1
 413 006e 5D       		.byte	0x5d
 414 006f 02000000 		.4byte	.LCFI5
 415 0073 04000000 		.4byte	.LCFI6
 416 0077 0200     		.2byte	0x2
 417 0079 7D       		.byte	0x7d
 418 007a 08       		.sleb128 8
 419 007b 04000000 		.4byte	.LCFI6
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 14


 420 007f 12000000 		.4byte	.LFE31
 421 0083 0200     		.2byte	0x2
 422 0085 77       		.byte	0x77
 423 0086 08       		.sleb128 8
 424 0087 00000000 		.4byte	0x0
 425 008b 00000000 		.4byte	0x0
 426              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 427              		.file 3 "./Generated_Source/PSoC5/USBFS.h"
 428              		.file 4 "./Generated_Source/PSoC5/UART_Bridge.h"
 429              		.file 5 "./Generated_Source/PSoC5/core_cm3.h"
 430              		.file 6 ".\\/USBUART.h"
 431              		.section	.debug_info
 432 0000 96020000 		.4byte	0x296
 433 0004 0200     		.2byte	0x2
 434 0006 00000000 		.4byte	.Ldebug_abbrev0
 435 000a 04       		.byte	0x4
 436 000b 01       		.uleb128 0x1
 437 000c A5010000 		.4byte	.LASF39
 438 0010 01       		.byte	0x1
 439 0011 99010000 		.4byte	.LASF40
 440 0015 FE010000 		.4byte	.LASF41
 441 0019 00000000 		.4byte	0x0
 442 001d 00000000 		.4byte	0x0
 443 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 444 0025 00000000 		.4byte	.Ldebug_line0
 445 0029 02       		.uleb128 0x2
 446 002a 01       		.byte	0x1
 447 002b 06       		.byte	0x6
 448 002c F2010000 		.4byte	.LASF0
 449 0030 02       		.uleb128 0x2
 450 0031 01       		.byte	0x1
 451 0032 08       		.byte	0x8
 452 0033 DF000000 		.4byte	.LASF1
 453 0037 02       		.uleb128 0x2
 454 0038 02       		.byte	0x2
 455 0039 05       		.byte	0x5
 456 003a C1010000 		.4byte	.LASF2
 457 003e 02       		.uleb128 0x2
 458 003f 02       		.byte	0x2
 459 0040 07       		.byte	0x7
 460 0041 52000000 		.4byte	.LASF3
 461 0045 02       		.uleb128 0x2
 462 0046 04       		.byte	0x4
 463 0047 05       		.byte	0x5
 464 0048 E2010000 		.4byte	.LASF4
 465 004c 02       		.uleb128 0x2
 466 004d 04       		.byte	0x4
 467 004e 07       		.byte	0x7
 468 004f B2000000 		.4byte	.LASF5
 469 0053 02       		.uleb128 0x2
 470 0054 08       		.byte	0x8
 471 0055 05       		.byte	0x5
 472 0056 00000000 		.4byte	.LASF6
 473 005a 02       		.uleb128 0x2
 474 005b 08       		.byte	0x8
 475 005c 07       		.byte	0x7
 476 005d 58010000 		.4byte	.LASF7
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 15


 477 0061 03       		.uleb128 0x3
 478 0062 04       		.byte	0x4
 479 0063 05       		.byte	0x5
 480 0064 696E7400 		.ascii	"int\000"
 481 0068 02       		.uleb128 0x2
 482 0069 04       		.byte	0x4
 483 006a 07       		.byte	0x7
 484 006b 4B010000 		.4byte	.LASF8
 485 006f 04       		.uleb128 0x4
 486 0070 D2010000 		.4byte	.LASF9
 487 0074 02       		.byte	0x2
 488 0075 4C       		.byte	0x4c
 489 0076 30000000 		.4byte	0x30
 490 007a 04       		.uleb128 0x4
 491 007b 32010000 		.4byte	.LASF10
 492 007f 02       		.byte	0x2
 493 0080 4D       		.byte	0x4d
 494 0081 3E000000 		.4byte	0x3e
 495 0085 04       		.uleb128 0x4
 496 0086 44010000 		.4byte	.LASF11
 497 008a 02       		.byte	0x2
 498 008b 4E       		.byte	0x4e
 499 008c 4C000000 		.4byte	0x4c
 500 0090 02       		.uleb128 0x2
 501 0091 04       		.byte	0x4
 502 0092 04       		.byte	0x4
 503 0093 9E000000 		.4byte	.LASF12
 504 0097 02       		.uleb128 0x2
 505 0098 08       		.byte	0x8
 506 0099 04       		.byte	0x4
 507 009a FA000000 		.4byte	.LASF13
 508 009e 02       		.uleb128 0x2
 509 009f 01       		.byte	0x1
 510 00a0 08       		.byte	0x8
 511 00a1 B1010000 		.4byte	.LASF14
 512 00a5 05       		.uleb128 0x5
 513 00a6 6F000000 		.4byte	0x6f
 514 00aa 06       		.uleb128 0x6
 515 00ab 04       		.byte	0x4
 516 00ac 07       		.byte	0x7
 517 00ad 07       		.uleb128 0x7
 518 00ae 79010000 		.4byte	.LASF42
 519 00b2 0C       		.byte	0xc
 520 00b3 03       		.byte	0x3
 521 00b4 7B       		.byte	0x7b
 522 00b5 38010000 		.4byte	0x138
 523 00b9 08       		.uleb128 0x8
 524 00ba 01010000 		.4byte	.LASF15
 525 00be 03       		.byte	0x3
 526 00bf 7C       		.byte	0x7c
 527 00c0 6F000000 		.4byte	0x6f
 528 00c4 02       		.byte	0x2
 529 00c5 23       		.byte	0x23
 530 00c6 00       		.uleb128 0x0
 531 00c7 08       		.uleb128 0x8
 532 00c8 39010000 		.4byte	.LASF16
 533 00cc 03       		.byte	0x3
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 16


 534 00cd 7D       		.byte	0x7d
 535 00ce 6F000000 		.4byte	0x6f
 536 00d2 02       		.byte	0x2
 537 00d3 23       		.byte	0x23
 538 00d4 01       		.uleb128 0x1
 539 00d5 08       		.uleb128 0x8
 540 00d6 6F010000 		.4byte	.LASF17
 541 00da 03       		.byte	0x3
 542 00db 7E       		.byte	0x7e
 543 00dc 6F000000 		.4byte	0x6f
 544 00e0 02       		.byte	0x2
 545 00e1 23       		.byte	0x23
 546 00e2 02       		.uleb128 0x2
 547 00e3 08       		.uleb128 0x8
 548 00e4 A4000000 		.4byte	.LASF18
 549 00e8 03       		.byte	0x3
 550 00e9 7F       		.byte	0x7f
 551 00ea 6F000000 		.4byte	0x6f
 552 00ee 02       		.byte	0x2
 553 00ef 23       		.byte	0x23
 554 00f0 03       		.uleb128 0x3
 555 00f1 08       		.uleb128 0x8
 556 00f2 C4000000 		.4byte	.LASF19
 557 00f6 03       		.byte	0x3
 558 00f7 80       		.byte	0x80
 559 00f8 6F000000 		.4byte	0x6f
 560 00fc 02       		.byte	0x2
 561 00fd 23       		.byte	0x23
 562 00fe 04       		.uleb128 0x4
 563 00ff 08       		.uleb128 0x8
 564 0100 EB010000 		.4byte	.LASF20
 565 0104 03       		.byte	0x3
 566 0105 81       		.byte	0x81
 567 0106 6F000000 		.4byte	0x6f
 568 010a 02       		.byte	0x2
 569 010b 23       		.byte	0x23
 570 010c 05       		.uleb128 0x5
 571 010d 08       		.uleb128 0x8
 572 010e 08010000 		.4byte	.LASF21
 573 0112 03       		.byte	0x3
 574 0113 82       		.byte	0x82
 575 0114 7A000000 		.4byte	0x7a
 576 0118 02       		.byte	0x2
 577 0119 23       		.byte	0x23
 578 011a 06       		.uleb128 0x6
 579 011b 08       		.uleb128 0x8
 580 011c B6010000 		.4byte	.LASF22
 581 0120 03       		.byte	0x3
 582 0121 83       		.byte	0x83
 583 0122 7A000000 		.4byte	0x7a
 584 0126 02       		.byte	0x2
 585 0127 23       		.byte	0x23
 586 0128 08       		.uleb128 0x8
 587 0129 08       		.uleb128 0x8
 588 012a D8010000 		.4byte	.LASF23
 589 012e 03       		.byte	0x3
 590 012f 84       		.byte	0x84
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 17


 591 0130 6F000000 		.4byte	0x6f
 592 0134 02       		.byte	0x2
 593 0135 23       		.byte	0x23
 594 0136 0A       		.uleb128 0xa
 595 0137 00       		.byte	0x0
 596 0138 04       		.uleb128 0x4
 597 0139 6E000000 		.4byte	.LASF24
 598 013d 03       		.byte	0x3
 599 013e 85       		.byte	0x85
 600 013f AD000000 		.4byte	0xad
 601 0143 09       		.uleb128 0x9
 602 0144 01       		.byte	0x1
 603 0145 83000000 		.4byte	.LASF43
 604 0149 01       		.byte	0x1
 605 014a 0401     		.2byte	0x104
 606 014c 01       		.byte	0x1
 607 014d 00000000 		.4byte	.LFB29
 608 0151 D6020000 		.4byte	.LFE29
 609 0155 00000000 		.4byte	.LLST0
 610 0159 EE010000 		.4byte	0x1ee
 611 015d 0A       		.uleb128 0xa
 612 015e 06000000 		.4byte	.LBB2
 613 0162 F4000000 		.4byte	.LBE2
 614 0166 89010000 		.4byte	0x189
 615 016a 0B       		.uleb128 0xb
 616 016b 27000000 		.4byte	.LASF25
 617 016f 01       		.byte	0x1
 618 0170 0701     		.2byte	0x107
 619 0172 85000000 		.4byte	0x85
 620 0176 02       		.byte	0x2
 621 0177 91       		.byte	0x91
 622 0178 6C       		.sleb128 -20
 623 0179 0B       		.uleb128 0xb
 624 017a 65000000 		.4byte	.LASF26
 625 017e 01       		.byte	0x1
 626 017f 0701     		.2byte	0x107
 627 0181 7A000000 		.4byte	0x7a
 628 0185 02       		.byte	0x2
 629 0186 91       		.byte	0x91
 630 0187 72       		.sleb128 -14
 631 0188 00       		.byte	0x0
 632 0189 0A       		.uleb128 0xa
 633 018a F4000000 		.4byte	.LBB3
 634 018e 34010000 		.4byte	.LBE3
 635 0192 B6010000 		.4byte	0x1b6
 636 0196 0B       		.uleb128 0xb
 637 0197 AD000000 		.4byte	.LASF27
 638 019b 01       		.byte	0x1
 639 019c 0A01     		.2byte	0x10a
 640 019e 6F000000 		.4byte	0x6f
 641 01a2 02       		.byte	0x2
 642 01a3 91       		.byte	0x91
 643 01a4 74       		.sleb128 -12
 644 01a5 0B       		.uleb128 0xb
 645 01a6 CB010000 		.4byte	.LASF28
 646 01aa 01       		.byte	0x1
 647 01ab 0A01     		.2byte	0x10a
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 18


 648 01ad EE010000 		.4byte	0x1ee
 649 01b1 03       		.byte	0x3
 650 01b2 91       		.byte	0x91
 651 01b3 AC7F     		.sleb128 -84
 652 01b5 00       		.byte	0x0
 653 01b6 0C       		.uleb128 0xc
 654 01b7 34010000 		.4byte	.LBB4
 655 01bb CE020000 		.4byte	.LBE4
 656 01bf 0B       		.uleb128 0xb
 657 01c0 30000000 		.4byte	.LASF29
 658 01c4 01       		.byte	0x1
 659 01c5 0D01     		.2byte	0x10d
 660 01c7 6F000000 		.4byte	0x6f
 661 01cb 02       		.byte	0x2
 662 01cc 91       		.byte	0x91
 663 01cd 75       		.sleb128 -11
 664 01ce 0B       		.uleb128 0xb
 665 01cf 8B010000 		.4byte	.LASF30
 666 01d3 01       		.byte	0x1
 667 01d4 0D01     		.2byte	0x10d
 668 01d6 6F000000 		.4byte	0x6f
 669 01da 02       		.byte	0x2
 670 01db 91       		.byte	0x91
 671 01dc 76       		.sleb128 -10
 672 01dd 0B       		.uleb128 0xb
 673 01de 4B000000 		.4byte	.LASF31
 674 01e2 01       		.byte	0x1
 675 01e3 0D01     		.2byte	0x10d
 676 01e5 6F000000 		.4byte	0x6f
 677 01e9 02       		.byte	0x2
 678 01ea 91       		.byte	0x91
 679 01eb 77       		.sleb128 -9
 680 01ec 00       		.byte	0x0
 681 01ed 00       		.byte	0x0
 682 01ee 0D       		.uleb128 0xd
 683 01ef 6F000000 		.4byte	0x6f
 684 01f3 FE010000 		.4byte	0x1fe
 685 01f7 0E       		.uleb128 0xe
 686 01f8 AA000000 		.4byte	0xaa
 687 01fc 3F       		.byte	0x3f
 688 01fd 00       		.byte	0x0
 689 01fe 0F       		.uleb128 0xf
 690 01ff 01       		.byte	0x1
 691 0200 92000000 		.4byte	.LASF32
 692 0204 01       		.byte	0x1
 693 0205 2201     		.2byte	0x122
 694 0207 01       		.byte	0x1
 695 0208 00000000 		.4byte	.LFB30
 696 020c 12000000 		.4byte	.LFE30
 697 0210 39000000 		.4byte	.LLST1
 698 0214 0F       		.uleb128 0xf
 699 0215 01       		.byte	0x1
 700 0216 ED000000 		.4byte	.LASF33
 701 021a 01       		.byte	0x1
 702 021b 3801     		.2byte	0x138
 703 021d 01       		.byte	0x1
 704 021e 00000000 		.4byte	.LFB31
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 19


 705 0222 12000000 		.4byte	.LFE31
 706 0226 64000000 		.4byte	.LLST2
 707 022a 0D       		.uleb128 0xd
 708 022b 6F000000 		.4byte	0x6f
 709 022f 3A020000 		.4byte	0x23a
 710 0233 0E       		.uleb128 0xe
 711 0234 AA000000 		.4byte	0xaa
 712 0238 7F       		.byte	0x7f
 713 0239 00       		.byte	0x0
 714 023a 10       		.uleb128 0x10
 715 023b 36000000 		.4byte	.LASF34
 716 023f 04       		.byte	0x4
 717 0240 5201     		.2byte	0x152
 718 0242 48020000 		.4byte	0x248
 719 0246 01       		.byte	0x1
 720 0247 01       		.byte	0x1
 721 0248 05       		.uleb128 0x5
 722 0249 2A020000 		.4byte	0x22a
 723 024d 10       		.uleb128 0x10
 724 024e 0E000000 		.4byte	.LASF35
 725 0252 04       		.byte	0x4
 726 0253 5301     		.2byte	0x153
 727 0255 A5000000 		.4byte	0xa5
 728 0259 01       		.byte	0x1
 729 025a 01       		.byte	0x1
 730 025b 10       		.uleb128 0x10
 731 025c 13010000 		.4byte	.LASF36
 732 0260 04       		.byte	0x4
 733 0261 5501     		.2byte	0x155
 734 0263 A5000000 		.4byte	0xa5
 735 0267 01       		.byte	0x1
 736 0268 01       		.byte	0x1
 737 0269 10       		.uleb128 0x10
 738 026a C9000000 		.4byte	.LASF37
 739 026e 05       		.byte	0x5
 740 026f CE06     		.2byte	0x6ce
 741 0271 77020000 		.4byte	0x277
 742 0275 01       		.byte	0x1
 743 0276 01       		.byte	0x1
 744 0277 05       		.uleb128 0x5
 745 0278 61000000 		.4byte	0x61
 746 027c 0D       		.uleb128 0xd
 747 027d 38010000 		.4byte	0x138
 748 0281 87020000 		.4byte	0x287
 749 0285 11       		.uleb128 0x11
 750 0286 00       		.byte	0x0
 751 0287 12       		.uleb128 0x12
 752 0288 D6000000 		.4byte	.LASF38
 753 028c 06       		.byte	0x6
 754 028d 69       		.byte	0x69
 755 028e 94020000 		.4byte	0x294
 756 0292 01       		.byte	0x1
 757 0293 01       		.byte	0x1
 758 0294 05       		.uleb128 0x5
 759 0295 7C020000 		.4byte	0x27c
 760 0299 00       		.byte	0x0
 761              		.section	.debug_abbrev
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 20


 762 0000 01       		.uleb128 0x1
 763 0001 11       		.uleb128 0x11
 764 0002 01       		.byte	0x1
 765 0003 25       		.uleb128 0x25
 766 0004 0E       		.uleb128 0xe
 767 0005 13       		.uleb128 0x13
 768 0006 0B       		.uleb128 0xb
 769 0007 03       		.uleb128 0x3
 770 0008 0E       		.uleb128 0xe
 771 0009 1B       		.uleb128 0x1b
 772 000a 0E       		.uleb128 0xe
 773 000b 11       		.uleb128 0x11
 774 000c 01       		.uleb128 0x1
 775 000d 52       		.uleb128 0x52
 776 000e 01       		.uleb128 0x1
 777 000f 55       		.uleb128 0x55
 778 0010 06       		.uleb128 0x6
 779 0011 10       		.uleb128 0x10
 780 0012 06       		.uleb128 0x6
 781 0013 00       		.byte	0x0
 782 0014 00       		.byte	0x0
 783 0015 02       		.uleb128 0x2
 784 0016 24       		.uleb128 0x24
 785 0017 00       		.byte	0x0
 786 0018 0B       		.uleb128 0xb
 787 0019 0B       		.uleb128 0xb
 788 001a 3E       		.uleb128 0x3e
 789 001b 0B       		.uleb128 0xb
 790 001c 03       		.uleb128 0x3
 791 001d 0E       		.uleb128 0xe
 792 001e 00       		.byte	0x0
 793 001f 00       		.byte	0x0
 794 0020 03       		.uleb128 0x3
 795 0021 24       		.uleb128 0x24
 796 0022 00       		.byte	0x0
 797 0023 0B       		.uleb128 0xb
 798 0024 0B       		.uleb128 0xb
 799 0025 3E       		.uleb128 0x3e
 800 0026 0B       		.uleb128 0xb
 801 0027 03       		.uleb128 0x3
 802 0028 08       		.uleb128 0x8
 803 0029 00       		.byte	0x0
 804 002a 00       		.byte	0x0
 805 002b 04       		.uleb128 0x4
 806 002c 16       		.uleb128 0x16
 807 002d 00       		.byte	0x0
 808 002e 03       		.uleb128 0x3
 809 002f 0E       		.uleb128 0xe
 810 0030 3A       		.uleb128 0x3a
 811 0031 0B       		.uleb128 0xb
 812 0032 3B       		.uleb128 0x3b
 813 0033 0B       		.uleb128 0xb
 814 0034 49       		.uleb128 0x49
 815 0035 13       		.uleb128 0x13
 816 0036 00       		.byte	0x0
 817 0037 00       		.byte	0x0
 818 0038 05       		.uleb128 0x5
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 21


 819 0039 35       		.uleb128 0x35
 820 003a 00       		.byte	0x0
 821 003b 49       		.uleb128 0x49
 822 003c 13       		.uleb128 0x13
 823 003d 00       		.byte	0x0
 824 003e 00       		.byte	0x0
 825 003f 06       		.uleb128 0x6
 826 0040 24       		.uleb128 0x24
 827 0041 00       		.byte	0x0
 828 0042 0B       		.uleb128 0xb
 829 0043 0B       		.uleb128 0xb
 830 0044 3E       		.uleb128 0x3e
 831 0045 0B       		.uleb128 0xb
 832 0046 00       		.byte	0x0
 833 0047 00       		.byte	0x0
 834 0048 07       		.uleb128 0x7
 835 0049 13       		.uleb128 0x13
 836 004a 01       		.byte	0x1
 837 004b 03       		.uleb128 0x3
 838 004c 0E       		.uleb128 0xe
 839 004d 0B       		.uleb128 0xb
 840 004e 0B       		.uleb128 0xb
 841 004f 3A       		.uleb128 0x3a
 842 0050 0B       		.uleb128 0xb
 843 0051 3B       		.uleb128 0x3b
 844 0052 0B       		.uleb128 0xb
 845 0053 01       		.uleb128 0x1
 846 0054 13       		.uleb128 0x13
 847 0055 00       		.byte	0x0
 848 0056 00       		.byte	0x0
 849 0057 08       		.uleb128 0x8
 850 0058 0D       		.uleb128 0xd
 851 0059 00       		.byte	0x0
 852 005a 03       		.uleb128 0x3
 853 005b 0E       		.uleb128 0xe
 854 005c 3A       		.uleb128 0x3a
 855 005d 0B       		.uleb128 0xb
 856 005e 3B       		.uleb128 0x3b
 857 005f 0B       		.uleb128 0xb
 858 0060 49       		.uleb128 0x49
 859 0061 13       		.uleb128 0x13
 860 0062 38       		.uleb128 0x38
 861 0063 0A       		.uleb128 0xa
 862 0064 00       		.byte	0x0
 863 0065 00       		.byte	0x0
 864 0066 09       		.uleb128 0x9
 865 0067 2E       		.uleb128 0x2e
 866 0068 01       		.byte	0x1
 867 0069 3F       		.uleb128 0x3f
 868 006a 0C       		.uleb128 0xc
 869 006b 03       		.uleb128 0x3
 870 006c 0E       		.uleb128 0xe
 871 006d 3A       		.uleb128 0x3a
 872 006e 0B       		.uleb128 0xb
 873 006f 3B       		.uleb128 0x3b
 874 0070 05       		.uleb128 0x5
 875 0071 27       		.uleb128 0x27
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 22


 876 0072 0C       		.uleb128 0xc
 877 0073 11       		.uleb128 0x11
 878 0074 01       		.uleb128 0x1
 879 0075 12       		.uleb128 0x12
 880 0076 01       		.uleb128 0x1
 881 0077 40       		.uleb128 0x40
 882 0078 06       		.uleb128 0x6
 883 0079 01       		.uleb128 0x1
 884 007a 13       		.uleb128 0x13
 885 007b 00       		.byte	0x0
 886 007c 00       		.byte	0x0
 887 007d 0A       		.uleb128 0xa
 888 007e 0B       		.uleb128 0xb
 889 007f 01       		.byte	0x1
 890 0080 11       		.uleb128 0x11
 891 0081 01       		.uleb128 0x1
 892 0082 12       		.uleb128 0x12
 893 0083 01       		.uleb128 0x1
 894 0084 01       		.uleb128 0x1
 895 0085 13       		.uleb128 0x13
 896 0086 00       		.byte	0x0
 897 0087 00       		.byte	0x0
 898 0088 0B       		.uleb128 0xb
 899 0089 34       		.uleb128 0x34
 900 008a 00       		.byte	0x0
 901 008b 03       		.uleb128 0x3
 902 008c 0E       		.uleb128 0xe
 903 008d 3A       		.uleb128 0x3a
 904 008e 0B       		.uleb128 0xb
 905 008f 3B       		.uleb128 0x3b
 906 0090 05       		.uleb128 0x5
 907 0091 49       		.uleb128 0x49
 908 0092 13       		.uleb128 0x13
 909 0093 02       		.uleb128 0x2
 910 0094 0A       		.uleb128 0xa
 911 0095 00       		.byte	0x0
 912 0096 00       		.byte	0x0
 913 0097 0C       		.uleb128 0xc
 914 0098 0B       		.uleb128 0xb
 915 0099 01       		.byte	0x1
 916 009a 11       		.uleb128 0x11
 917 009b 01       		.uleb128 0x1
 918 009c 12       		.uleb128 0x12
 919 009d 01       		.uleb128 0x1
 920 009e 00       		.byte	0x0
 921 009f 00       		.byte	0x0
 922 00a0 0D       		.uleb128 0xd
 923 00a1 01       		.uleb128 0x1
 924 00a2 01       		.byte	0x1
 925 00a3 49       		.uleb128 0x49
 926 00a4 13       		.uleb128 0x13
 927 00a5 01       		.uleb128 0x1
 928 00a6 13       		.uleb128 0x13
 929 00a7 00       		.byte	0x0
 930 00a8 00       		.byte	0x0
 931 00a9 0E       		.uleb128 0xe
 932 00aa 21       		.uleb128 0x21
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 23


 933 00ab 00       		.byte	0x0
 934 00ac 49       		.uleb128 0x49
 935 00ad 13       		.uleb128 0x13
 936 00ae 2F       		.uleb128 0x2f
 937 00af 0B       		.uleb128 0xb
 938 00b0 00       		.byte	0x0
 939 00b1 00       		.byte	0x0
 940 00b2 0F       		.uleb128 0xf
 941 00b3 2E       		.uleb128 0x2e
 942 00b4 00       		.byte	0x0
 943 00b5 3F       		.uleb128 0x3f
 944 00b6 0C       		.uleb128 0xc
 945 00b7 03       		.uleb128 0x3
 946 00b8 0E       		.uleb128 0xe
 947 00b9 3A       		.uleb128 0x3a
 948 00ba 0B       		.uleb128 0xb
 949 00bb 3B       		.uleb128 0x3b
 950 00bc 05       		.uleb128 0x5
 951 00bd 27       		.uleb128 0x27
 952 00be 0C       		.uleb128 0xc
 953 00bf 11       		.uleb128 0x11
 954 00c0 01       		.uleb128 0x1
 955 00c1 12       		.uleb128 0x12
 956 00c2 01       		.uleb128 0x1
 957 00c3 40       		.uleb128 0x40
 958 00c4 06       		.uleb128 0x6
 959 00c5 00       		.byte	0x0
 960 00c6 00       		.byte	0x0
 961 00c7 10       		.uleb128 0x10
 962 00c8 34       		.uleb128 0x34
 963 00c9 00       		.byte	0x0
 964 00ca 03       		.uleb128 0x3
 965 00cb 0E       		.uleb128 0xe
 966 00cc 3A       		.uleb128 0x3a
 967 00cd 0B       		.uleb128 0xb
 968 00ce 3B       		.uleb128 0x3b
 969 00cf 05       		.uleb128 0x5
 970 00d0 49       		.uleb128 0x49
 971 00d1 13       		.uleb128 0x13
 972 00d2 3F       		.uleb128 0x3f
 973 00d3 0C       		.uleb128 0xc
 974 00d4 3C       		.uleb128 0x3c
 975 00d5 0C       		.uleb128 0xc
 976 00d6 00       		.byte	0x0
 977 00d7 00       		.byte	0x0
 978 00d8 11       		.uleb128 0x11
 979 00d9 21       		.uleb128 0x21
 980 00da 00       		.byte	0x0
 981 00db 00       		.byte	0x0
 982 00dc 00       		.byte	0x0
 983 00dd 12       		.uleb128 0x12
 984 00de 34       		.uleb128 0x34
 985 00df 00       		.byte	0x0
 986 00e0 03       		.uleb128 0x3
 987 00e1 0E       		.uleb128 0xe
 988 00e2 3A       		.uleb128 0x3a
 989 00e3 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 24


 990 00e4 3B       		.uleb128 0x3b
 991 00e5 0B       		.uleb128 0xb
 992 00e6 49       		.uleb128 0x49
 993 00e7 13       		.uleb128 0x13
 994 00e8 3F       		.uleb128 0x3f
 995 00e9 0C       		.uleb128 0xc
 996 00ea 3C       		.uleb128 0x3c
 997 00eb 0C       		.uleb128 0xc
 998 00ec 00       		.byte	0x0
 999 00ed 00       		.byte	0x0
 1000 00ee 00       		.byte	0x0
 1001              		.section	.debug_pubnames,"",%progbits
 1002 0000 42000000 		.4byte	0x42
 1003 0004 0200     		.2byte	0x2
 1004 0006 00000000 		.4byte	.Ldebug_info0
 1005 000a 9A020000 		.4byte	0x29a
 1006 000e 43010000 		.4byte	0x143
 1007 0012 55415254 		.ascii	"UARTBridgeComm\000"
 1007      42726964 
 1007      6765436F 
 1007      6D6D00
 1008 0021 FE010000 		.4byte	0x1fe
 1009 0025 55534255 		.ascii	"USBUARTInit\000"
 1009      41525449 
 1009      6E697400 
 1010 0031 14020000 		.4byte	0x214
 1011 0035 55534255 		.ascii	"USBUARTStart\000"
 1011      41525453 
 1011      74617274 
 1011      00
 1012 0042 00000000 		.4byte	0x0
 1013              		.section	.debug_aranges,"",%progbits
 1014 0000 2C000000 		.4byte	0x2c
 1015 0004 0200     		.2byte	0x2
 1016 0006 00000000 		.4byte	.Ldebug_info0
 1017 000a 04       		.byte	0x4
 1018 000b 00       		.byte	0x0
 1019 000c 0000     		.2byte	0x0
 1020 000e 0000     		.2byte	0x0
 1021 0010 00000000 		.4byte	.LFB29
 1022 0014 D6020000 		.4byte	.LFE29-.LFB29
 1023 0018 00000000 		.4byte	.LFB30
 1024 001c 12000000 		.4byte	.LFE30-.LFB30
 1025 0020 00000000 		.4byte	.LFB31
 1026 0024 12000000 		.4byte	.LFE31-.LFB31
 1027 0028 00000000 		.4byte	0x0
 1028 002c 00000000 		.4byte	0x0
 1029              		.section	.debug_ranges,"",%progbits
 1030              	.Ldebug_ranges0:
 1031 0000 00000000 		.4byte	.Ltext0
 1032 0004 00000000 		.4byte	.Letext0
 1033 0008 00000000 		.4byte	.LFB29
 1034 000c D6020000 		.4byte	.LFE29
 1035 0010 00000000 		.4byte	.LFB30
 1036 0014 12000000 		.4byte	.LFE30
 1037 0018 00000000 		.4byte	.LFB31
 1038 001c 12000000 		.4byte	.LFE31
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 25


 1039 0020 00000000 		.4byte	0x0
 1040 0024 00000000 		.4byte	0x0
 1041              		.section	.debug_str,"MS",%progbits,1
 1042              	.LASF6:
 1043 0000 6C6F6E67 		.ascii	"long long int\000"
 1043      206C6F6E 
 1043      6720696E 
 1043      7400
 1044              	.LASF35:
 1045 000e 55415254 		.ascii	"UART_Bridge_rxBufferRead\000"
 1045      5F427269 
 1045      6467655F 
 1045      72784275 
 1045      66666572 
 1046              	.LASF25:
 1047 0027 64445445 		.ascii	"dDTERate\000"
 1047      52617465 
 1047      00
 1048              	.LASF29:
 1049 0030 636F756E 		.ascii	"count\000"
 1049      7400
 1050              	.LASF34:
 1051 0036 55415254 		.ascii	"UART_Bridge_rxBuffer\000"
 1051      5F427269 
 1051      6467655F 
 1051      72784275 
 1051      66666572 
 1052              	.LASF31:
 1053 004b 62496E64 		.ascii	"bIndex\000"
 1053      657800
 1054              	.LASF3:
 1055 0052 73686F72 		.ascii	"short unsigned int\000"
 1055      7420756E 
 1055      7369676E 
 1055      65642069 
 1055      6E7400
 1056              	.LASF26:
 1057 0065 77446976 		.ascii	"wDivider\000"
 1057      69646572 
 1057      00
 1058              	.LASF24:
 1059 006e 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 1059      4246535F 
 1059      45505F43 
 1059      544C5F42 
 1059      4C4F434B 
 1060              	.LASF43:
 1061 0083 55415254 		.ascii	"UARTBridgeComm\000"
 1061      42726964 
 1061      6765436F 
 1061      6D6D00
 1062              	.LASF32:
 1063 0092 55534255 		.ascii	"USBUARTInit\000"
 1063      41525449 
 1063      6E697400 
 1064              	.LASF12:
 1065 009e 666C6F61 		.ascii	"float\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 26


 1065      7400
 1066              	.LASF18:
 1067 00a4 6570546F 		.ascii	"epToggle\000"
 1067      67676C65 
 1067      00
 1068              	.LASF27:
 1069 00ad 73697A65 		.ascii	"size\000"
 1069      00
 1070              	.LASF5:
 1071 00b2 6C6F6E67 		.ascii	"long unsigned int\000"
 1071      20756E73 
 1071      69676E65 
 1071      6420696E 
 1071      7400
 1072              	.LASF19:
 1073 00c4 61646472 		.ascii	"addr\000"
 1073      00
 1074              	.LASF37:
 1075 00c9 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1075      52784275 
 1075      66666572 
 1075      00
 1076              	.LASF38:
 1077 00d6 55534246 		.ascii	"USBFS_EP\000"
 1077      535F4550 
 1077      00
 1078              	.LASF1:
 1079 00df 756E7369 		.ascii	"unsigned char\000"
 1079      676E6564 
 1079      20636861 
 1079      7200
 1080              	.LASF33:
 1081 00ed 55534255 		.ascii	"USBUARTStart\000"
 1081      41525453 
 1081      74617274 
 1081      00
 1082              	.LASF13:
 1083 00fa 646F7562 		.ascii	"double\000"
 1083      6C6500
 1084              	.LASF15:
 1085 0101 61747472 		.ascii	"attrib\000"
 1085      696200
 1086              	.LASF21:
 1087 0108 62756666 		.ascii	"buffOffset\000"
 1087      4F666673 
 1087      657400
 1088              	.LASF36:
 1089 0113 55415254 		.ascii	"UART_Bridge_rxBufferLoopDetect\000"
 1089      5F427269 
 1089      6467655F 
 1089      72784275 
 1089      66666572 
 1090              	.LASF10:
 1091 0132 75696E74 		.ascii	"uint16\000"
 1091      313600
 1092              	.LASF16:
 1093 0139 61706945 		.ascii	"apiEpState\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 27


 1093      70537461 
 1093      746500
 1094              	.LASF11:
 1095 0144 75696E74 		.ascii	"uint32\000"
 1095      333200
 1096              	.LASF8:
 1097 014b 756E7369 		.ascii	"unsigned int\000"
 1097      676E6564 
 1097      20696E74 
 1097      00
 1098              	.LASF7:
 1099 0158 6C6F6E67 		.ascii	"long long unsigned int\000"
 1099      206C6F6E 
 1099      6720756E 
 1099      7369676E 
 1099      65642069 
 1100              	.LASF17:
 1101 016f 68774570 		.ascii	"hwEpState\000"
 1101      53746174 
 1101      6500
 1102              	.LASF42:
 1103 0179 5F555342 		.ascii	"_USBFS_EpCtlBlock\000"
 1103      46535F45 
 1103      7043746C 
 1103      426C6F63 
 1103      6B00
 1104              	.LASF30:
 1105 018b 77527842 		.ascii	"wRxBufferRead\000"
 1105      75666665 
 1105      72526561 
 1105      6400
 1106              	.LASF40:
 1107 0199 2E5C5553 		.ascii	".\\USBUART.c\000"
 1107      42554152 
 1107      542E6300 
 1108              	.LASF39:
 1109 01a5 474E5520 		.ascii	"GNU C 4.4.1\000"
 1109      4320342E 
 1109      342E3100 
 1110              	.LASF14:
 1111 01b1 63686172 		.ascii	"char\000"
 1111      00
 1112              	.LASF22:
 1113 01b6 62756666 		.ascii	"bufferSize\000"
 1113      65725369 
 1113      7A6500
 1114              	.LASF2:
 1115 01c1 73686F72 		.ascii	"short int\000"
 1115      7420696E 
 1115      7400
 1116              	.LASF28:
 1117 01cb 62756666 		.ascii	"buffer\000"
 1117      657200
 1118              	.LASF9:
 1119 01d2 75696E74 		.ascii	"uint8\000"
 1119      3800
 1120              	.LASF23:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccVGVA3e.s 			page 28


 1121 01d8 696E7465 		.ascii	"interface\000"
 1121      72666163 
 1121      6500
 1122              	.LASF4:
 1123 01e2 6C6F6E67 		.ascii	"long int\000"
 1123      20696E74 
 1123      00
 1124              	.LASF20:
 1125 01eb 65704D6F 		.ascii	"epMode\000"
 1125      646500
 1126              	.LASF0:
 1127 01f2 7369676E 		.ascii	"signed char\000"
 1127      65642063 
 1127      68617200 
 1128              	.LASF41:
 1129 01fe 5C5C7073 		.ascii	"\\\\psf\\Home\\Desktop\\KitProg version 2_03\\KitPr"
 1129      665C486F 
 1129      6D655C44 
 1129      65736B74 
 1129      6F705C4B 
 1130 022b 6F675C4B 		.ascii	"og\\KitProg.cydsn\000"
 1130      69745072 
 1130      6F672E63 
 1130      7964736E 
 1130      00
 1131              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
