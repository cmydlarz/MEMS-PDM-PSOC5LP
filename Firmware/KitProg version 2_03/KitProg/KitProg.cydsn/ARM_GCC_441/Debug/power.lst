ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"power.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 1E010000 		.text
  20      02006200 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	checkActivityFlag
  24              		.bss
  25              		.type	checkActivityFlag, %object
  26              		.size	checkActivityFlag, 1
  27              	checkActivityFlag:
  28 0000 00       		.space	1
  29              		.global	range
  30              		.data
  31              		.type	range, %object
  32              		.size	range, 1
  33              	range:
  34 0000 01       		.byte	1
  35              		.global	result
  36              		.bss
  37 0001 00       		.align	1
  38              		.type	result, %object
  39              		.size	result, 2
  40              	result:
  41 0002 0000     		.space	2
  42              		.section	.text.VoltageMonitorInit,"ax",%progbits
  43              		.align	2
  44              		.global	VoltageMonitorInit
  45              		.thumb
  46              		.thumb_func
  47              		.type	VoltageMonitorInit, %function
  48              	VoltageMonitorInit:
  49              	.LFB29:
  50              		.file 1 ".\\power.c"
   1:.\power.c     **** /*****************************************************************************
   2:.\power.c     **** * File Name: power.c
   3:.\power.c     **** * 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 2


   4:.\power.c     **** * Version 2.03
   5:.\power.c     **** *
   6:.\power.c     **** * Description:
   7:.\power.c     **** *  This file provides the source code to handle the power routines for PSoC 5LP.
   8:.\power.c     **** *
   9:.\power.c     **** * Owner:
  10:.\power.c     **** *	Ranjith M, Applications Engineer (rnjt@cypress.com)
  11:.\power.c     **** *
  12:.\power.c     **** * Related Document:
  13:.\power.c     **** * 	001-85925 - CY8CKIT-042 PSoC 4 Pioneer Kit IROS
  14:.\power.c     **** *
  15:.\power.c     **** * Hardware Dependency:
  16:.\power.c     **** * 	CY8CKIT-042 (KitProg) 
  17:.\power.c     **** *
  18:.\power.c     **** * Code Tested With:
  19:.\power.c     **** * 	Creator 2.2
  20:.\power.c     **** *	GCC1 4.4.1
  21:.\power.c     **** *	CY8CKIT-042 Rev 1
  22:.\power.c     **** *
  23:.\power.c     **** ******************************************************************************
  24:.\power.c     **** * Copyright (2013), Cypress Semiconductor Corporation.
  25:.\power.c     **** ******************************************************************************
  26:.\power.c     **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  27:.\power.c     **** * protected by and subject to worldwide patent protection (United States and
  28:.\power.c     **** * foreign), United States copyright laws and international treaty provisions.
  29:.\power.c     **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  30:.\power.c     **** * license to copy, use, modify, create derivative works of, and compile the
  31:.\power.c     **** * Cypress Source Code and derivative works for the sole purpose of creating
  32:.\power.c     **** * custom software in support of licensee product to be used only in conjunction
  33:.\power.c     **** * with a Cypress integrated circuit as specified in the applicable agreement.
  34:.\power.c     **** * Any reproduction, modification, translation, compilation, or representation of
  35:.\power.c     **** * this software except as specified above is prohibited without the express
  36:.\power.c     **** * written permission of Cypress.
  37:.\power.c     **** *
  38:.\power.c     **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  39:.\power.c     **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  40:.\power.c     **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  41:.\power.c     **** * Cypress reserves the right to make changes without further notice to the
  42:.\power.c     **** * materials described herein. Cypress does not assume any liability arising out
  43:.\power.c     **** * of the application or use of any product or circuit described herein. Cypress
  44:.\power.c     **** * does not authorize its products for use as critical components in life-support
  45:.\power.c     **** * systems where a malfunction or failure may reasonably be expected to result in
  46:.\power.c     **** * significant injury to the user. The inclusion of Cypress' product in a life-
  47:.\power.c     **** * support systems application implies that the manufacturer assumes all risk of
  48:.\power.c     **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  49:.\power.c     **** * limited by and subject to the applicable Cypress software license agreement.
  50:.\power.c     **** *****************************************************************************/
  51:.\power.c     **** 
  52:.\power.c     **** #include "KitProg.h"
  53:.\power.c     **** 
  54:.\power.c     **** /*****************************************************************************
  55:.\power.c     **** * Local Function Prototypes
  56:.\power.c     **** *****************************************************************************/
  57:.\power.c     **** void VoltageMonitorInit(void);
  58:.\power.c     **** uint16 GetVoltage(void);
  59:.\power.c     **** void GetRange(void);
  60:.\power.c     **** uint16 Convert_To_milliVolts(uint16 counts);
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 3


  61:.\power.c     **** void SendPSoCToSleep(void);
  62:.\power.c     **** void ResumeFromSleep(void);
  63:.\power.c     **** void HandleUSBSuspend(void);
  64:.\power.c     **** 
  65:.\power.c     **** /*****************************************************************************
  66:.\power.c     **** * Global Variable Declarations
  67:.\power.c     **** *****************************************************************************/
  68:.\power.c     **** uint8 checkActivityFlag = FALSE;
  69:.\power.c     **** 
  70:.\power.c     **** /*****************************************************************************
  71:.\power.c     **** * Local Global Variable Declarations
  72:.\power.c     **** *****************************************************************************/
  73:.\power.c     **** uint8 range = RANGE_5V0;
  74:.\power.c     **** uint16 result = 0;
  75:.\power.c     **** /*******************************************************************************
  76:.\power.c     **** * Function Name: VoltageMonitorInit()
  77:.\power.c     **** ********************************************************************************
  78:.\power.c     **** * Summary:
  79:.\power.c     **** * Initialize the ADC for voltage monitoring.
  80:.\power.c     **** *
  81:.\power.c     **** * Parameters:
  82:.\power.c     **** *  void
  83:.\power.c     **** *
  84:.\power.c     **** * Return:
  85:.\power.c     **** *  void
  86:.\power.c     **** *
  87:.\power.c     **** *******************************************************************************/
  88:.\power.c     **** void VoltageMonitorInit(void)
  89:.\power.c     **** {
  51              		.loc 1 89 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 1, uses_anonymous_args = 0
  55 0000 80B5     		push	{r7, lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 8
  58 0002 00AF     		add	r7, sp, #0
  59              		.cfi_offset 14, -4
  60              		.cfi_offset 7, -8
  61              	.LCFI1:
  62              		.cfi_def_cfa_register 7
  90:.\power.c     **** 	//ADC_Voltage_Target_Start();
  91:.\power.c     **** 	//ADC_Voltage_Target_StartConvert();
  92:.\power.c     **** 	GetRange();
  63              		.loc 1 92 0
  64 0004 FFF7FEFF 		bl	GetRange
  93:.\power.c     **** }
  65              		.loc 1 93 0
  66 0008 80BD     		pop	{r7, pc}
  67              		.cfi_endproc
  68              	.LFE29:
  69              		.size	VoltageMonitorInit, .-VoltageMonitorInit
  70 000a 00BF     		.section	.text.GetRange,"ax",%progbits
  71              		.align	2
  72              		.global	GetRange
  73              		.thumb
  74              		.thumb_func
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 4


  75              		.type	GetRange, %function
  76              	GetRange:
  77              	.LFB30:
  94:.\power.c     **** 
  95:.\power.c     **** /*******************************************************************************
  96:.\power.c     **** * Function Name: CalADC()
  97:.\power.c     **** ********************************************************************************
  98:.\power.c     **** * Summary:
  99:.\power.c     **** * Get the VDD Range.
 100:.\power.c     **** *
 101:.\power.c     **** * Parameters:
 102:.\power.c     **** *  void
 103:.\power.c     **** *
 104:.\power.c     **** * Return:
 105:.\power.c     **** *  void
 106:.\power.c     **** *
 107:.\power.c     **** *******************************************************************************/
 108:.\power.c     **** void GetRange(void)
 109:.\power.c     **** {
  78              		.loc 1 109 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0000 80B4     		push	{r7}
  84              	.LCFI2:
  85              		.cfi_def_cfa_offset 4
  86 0002 00AF     		add	r7, sp, #0
  87              		.cfi_offset 7, -4
  88              	.LCFI3:
  89              		.cfi_def_cfa_register 7
 110:.\power.c     **** 	/* Select the known voltage source VRef for the ADC */
 111:.\power.c     **** 	//AMux_Select(0);
 112:.\power.c     **** 	
 113:.\power.c     **** 	/* Calculate the counts for the known voltage source */
 114:.\power.c     **** 	//ADC_Voltage_Target_IsEndConversion(ADC_Voltage_Target_WAIT_FOR_RESULT);
 115:.\power.c     **** 	//result = ADC_Voltage_Target_GetResult16();
 116:.\power.c     **** 	
 117:.\power.c     **** 	/* Determine the VDD range based on the count value for known input source */
 118:.\power.c     **** 	if(result < THRESHOLD)
  90              		.loc 1 118 0
  91 0004 40F20003 		movw	r3, #:lower16:result
  92 0008 C0F20003 		movt	r3, #:upper16:result
  93 000c 1A88     		ldrh	r2, [r3, #0]
  94 000e 40F2E733 		movw	r3, #999
  95 0012 9A42     		cmp	r2, r3
  96 0014 07D8     		bhi	.L4
 119:.\power.c     **** 	{
 120:.\power.c     **** 		range = RANGE_5V0;
  97              		.loc 1 120 0
  98 0016 40F20003 		movw	r3, #:lower16:range
  99 001a C0F20003 		movt	r3, #:upper16:range
 100 001e 4FF00102 		mov	r2, #1
 101 0022 1A70     		strb	r2, [r3, #0]
 102 0024 06E0     		b	.L6
 103              	.L4:
 121:.\power.c     **** 	}
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 5


 122:.\power.c     **** 	else
 123:.\power.c     **** 	{
 124:.\power.c     **** 		range = RANGE_3V3;
 104              		.loc 1 124 0
 105 0026 40F20003 		movw	r3, #:lower16:range
 106 002a C0F20003 		movt	r3, #:upper16:range
 107 002e 4FF00002 		mov	r2, #0
 108 0032 1A70     		strb	r2, [r3, #0]
 109              	.L6:
 125:.\power.c     **** 	}
 126:.\power.c     **** }
 110              		.loc 1 126 0
 111 0034 BD46     		mov	sp, r7
 112 0036 80BC     		pop	{r7}
 113 0038 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE30:
 116              		.size	GetRange, .-GetRange
 117 003a 00BF     		.section	.text.GetVoltage,"ax",%progbits
 118              		.align	2
 119              		.global	GetVoltage
 120              		.thumb
 121              		.thumb_func
 122              		.type	GetVoltage, %function
 123              	GetVoltage:
 124              	.LFB31:
 127:.\power.c     **** /*******************************************************************************
 128:.\power.c     **** * Function Name: GetVoltage()
 129:.\power.c     **** ********************************************************************************
 130:.\power.c     **** * Summary:
 131:.\power.c     **** * Calculates the VDD of the PSoC 4
 132:.\power.c     **** *
 133:.\power.c     **** * Parameters:
 134:.\power.c     **** *  void
 135:.\power.c     **** *
 136:.\power.c     **** * Return:
 137:.\power.c     **** *  Voltage in millivolts.
 138:.\power.c     **** *
 139:.\power.c     **** *******************************************************************************/
 140:.\power.c     **** uint16 GetVoltage(void)
 141:.\power.c     **** {
 125              		.loc 1 141 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 8
 128              		@ frame_needed = 1, uses_anonymous_args = 0
 129 0000 80B5     		push	{r7, lr}
 130              	.LCFI4:
 131              		.cfi_def_cfa_offset 8
 132 0002 82B0     		sub	sp, sp, #8
 133              	.LCFI5:
 134              		.cfi_def_cfa_offset 16
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_offset 14, -4
 137              		.cfi_offset 7, -8
 138              	.LCFI6:
 139              		.cfi_def_cfa_register 7
 142:.\power.c     **** 	uint16 targetVoltage = ZERO;
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 6


 140              		.loc 1 142 0
 141 0006 4FF00003 		mov	r3, #0
 142 000a BB80     		strh	r3, [r7, #4]	@ movhi
 143:.\power.c     **** 	uint16 targetValue = ZERO;	
 143              		.loc 1 143 0
 144 000c 4FF00003 		mov	r3, #0
 145 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 144:.\power.c     **** 	
 145:.\power.c     **** 	/* Seelct the Vtarget input */
 146:.\power.c     **** 	//AMux_Select(1);
 147:.\power.c     **** 	
 148:.\power.c     **** 	/* Calculate the ADC input value */
 149:.\power.c     **** 	//ADC_Voltage_Target_IsEndConversion(ADC_Voltage_Target_WAIT_FOR_RESULT);
 150:.\power.c     **** 	//targetValue = ADC_Voltage_Target_GetResult16();
 151:.\power.c     **** 	
 152:.\power.c     **** 	/* Convert to milliVolts */
 153:.\power.c     **** 	targetVoltage = Convert_To_milliVolts(targetValue);
 146              		.loc 1 153 0
 147 0012 FB88     		ldrh	r3, [r7, #6]
 148 0014 1846     		mov	r0, r3
 149 0016 FFF7FEFF 		bl	Convert_To_milliVolts
 150 001a 0346     		mov	r3, r0
 151 001c BB80     		strh	r3, [r7, #4]	@ movhi
 154:.\power.c     **** 	
 155:.\power.c     **** 	/* Account for the resistive divider in the hardware used to sample 
 156:.\power.c     **** 	* the input voltage (1.5K + 3K) */
 157:.\power.c     **** 	targetVoltage = targetVoltage * 3;
 152              		.loc 1 157 0
 153 001e BB88     		ldrh	r3, [r7, #4]	@ movhi
 154 0020 1A46     		mov	r2, r3	@ movhi
 155 0022 4FEA4202 		lsl	r2, r2, #1
 156 0026 1344     		add	r3, r2, r3
 157 0028 BB80     		strh	r3, [r7, #4]	@ movhi
 158:.\power.c     **** 	targetVoltage = targetVoltage/2;
 158              		.loc 1 158 0
 159 002a BB88     		ldrh	r3, [r7, #4]
 160 002c 4FEA5303 		lsr	r3, r3, #1
 161 0030 BB80     		strh	r3, [r7, #4]	@ movhi
 159:.\power.c     **** 	
 160:.\power.c     **** 	return(targetVoltage);
 162              		.loc 1 160 0
 163 0032 BB88     		ldrh	r3, [r7, #4]
 161:.\power.c     **** }
 164              		.loc 1 161 0
 165 0034 1846     		mov	r0, r3
 166 0036 07F10807 		add	r7, r7, #8
 167 003a BD46     		mov	sp, r7
 168 003c 80BD     		pop	{r7, pc}
 169              		.cfi_endproc
 170              	.LFE31:
 171              		.size	GetVoltage, .-GetVoltage
 172 003e 00BF     		.section	.text.Convert_To_milliVolts,"ax",%progbits
 173              		.align	2
 174              		.global	Convert_To_milliVolts
 175              		.thumb
 176              		.thumb_func
 177              		.type	Convert_To_milliVolts, %function
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 7


 178              	Convert_To_milliVolts:
 179              	.LFB32:
 162:.\power.c     **** /*******************************************************************************
 163:.\power.c     **** * Function Name: Convert_To_milliVolts()
 164:.\power.c     **** ********************************************************************************
 165:.\power.c     **** * Summary:
 166:.\power.c     **** * Converts the ADC output counts to millivolts. Calcultaion is: 
 167:.\power.c     **** * mV = (counts*5000)/(2^12) or (counts*3300)/(2^12) depending on the voltage range.
 168:.\power.c     **** *
 169:.\power.c     **** * Parameters:
 170:.\power.c     **** *  counts: ADC 12-bit count value
 171:.\power.c     **** *
 172:.\power.c     **** * Return:
 173:.\power.c     **** *  Voltage in millivolts.
 174:.\power.c     **** *
 175:.\power.c     **** *******************************************************************************/
 176:.\power.c     **** uint16 Convert_To_milliVolts(uint16 counts)
 177:.\power.c     **** {
 180              		.loc 1 177 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 16
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 0000 80B4     		push	{r7}
 186              	.LCFI7:
 187              		.cfi_def_cfa_offset 4
 188 0002 85B0     		sub	sp, sp, #20
 189              	.LCFI8:
 190              		.cfi_def_cfa_offset 24
 191 0004 00AF     		add	r7, sp, #0
 192              		.cfi_offset 7, -4
 193              	.LCFI9:
 194              		.cfi_def_cfa_register 7
 195 0006 0346     		mov	r3, r0
 196 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 178:.\power.c     **** 	uint16 voltage = ZERO;
 197              		.loc 1 178 0
 198 000a 4FF00003 		mov	r3, #0
 199 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 179:.\power.c     **** 	uint32 intermediate = ZERO;
 200              		.loc 1 179 0
 201 0010 4FF00003 		mov	r3, #0
 202 0014 FB60     		str	r3, [r7, #12]
 180:.\power.c     **** 	
 181:.\power.c     **** 	/*Convert to millivolts based on the input voltage range */
 182:.\power.c     **** 	if(range == RANGE_5V0)
 203              		.loc 1 182 0
 204 0016 40F20003 		movw	r3, #:lower16:range
 205 001a C0F20003 		movt	r3, #:upper16:range
 206 001e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 207 0020 012B     		cmp	r3, #1
 208 0022 06D1     		bne	.L10
 183:.\power.c     **** 	{
 184:.\power.c     **** 		intermediate = counts * FIVE_VOLT_MULTIPLIER;
 209              		.loc 1 184 0
 210 0024 FB88     		ldrh	r3, [r7, #6]
 211 0026 41F28832 		movw	r2, #5000
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 8


 212 002a 02FB03F3 		mul	r3, r2, r3
 213 002e FB60     		str	r3, [r7, #12]
 214 0030 05E0     		b	.L11
 215              	.L10:
 185:.\power.c     **** 	}
 186:.\power.c     **** 	else
 187:.\power.c     **** 	{
 188:.\power.c     **** 		intermediate = counts * THREE_VOLT_MULTIPLIER;
 216              		.loc 1 188 0
 217 0032 FB88     		ldrh	r3, [r7, #6]
 218 0034 40F6E442 		movw	r2, #3300
 219 0038 02FB03F3 		mul	r3, r2, r3
 220 003c FB60     		str	r3, [r7, #12]
 221              	.L11:
 189:.\power.c     **** 	}
 190:.\power.c     **** 	intermediate = intermediate/TWELVE_BIT_DIVIDER;
 222              		.loc 1 190 0
 223 003e FB68     		ldr	r3, [r7, #12]
 224 0040 4FEA1333 		lsr	r3, r3, #12
 225 0044 FB60     		str	r3, [r7, #12]
 191:.\power.c     **** 	
 192:.\power.c     **** 	/* Convert to 16-bit value */
 193:.\power.c     **** 	voltage = (uint16)intermediate;	
 226              		.loc 1 193 0
 227 0046 FB68     		ldr	r3, [r7, #12]
 228 0048 7B81     		strh	r3, [r7, #10]	@ movhi
 194:.\power.c     **** 	
 195:.\power.c     **** 	return(voltage);
 229              		.loc 1 195 0
 230 004a 7B89     		ldrh	r3, [r7, #10]
 196:.\power.c     **** }
 231              		.loc 1 196 0
 232 004c 1846     		mov	r0, r3
 233 004e 07F11407 		add	r7, r7, #20
 234 0052 BD46     		mov	sp, r7
 235 0054 80BC     		pop	{r7}
 236 0056 7047     		bx	lr
 237              		.cfi_endproc
 238              	.LFE32:
 239              		.size	Convert_To_milliVolts, .-Convert_To_milliVolts
 240              		.section	.text.VoltageMonitorStop,"ax",%progbits
 241              		.align	2
 242              		.global	VoltageMonitorStop
 243              		.thumb
 244              		.thumb_func
 245              		.type	VoltageMonitorStop, %function
 246              	VoltageMonitorStop:
 247              	.LFB33:
 197:.\power.c     **** /*******************************************************************************
 198:.\power.c     **** * Function Name: VoltageMonitorStop()
 199:.\power.c     **** ********************************************************************************
 200:.\power.c     **** * Summary:
 201:.\power.c     **** *  Stops the ADC component used for target voltage monitoring.
 202:.\power.c     **** *
 203:.\power.c     **** * Parameters:
 204:.\power.c     **** *  None
 205:.\power.c     **** *
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 9


 206:.\power.c     **** * Return:
 207:.\power.c     **** *  None
 208:.\power.c     **** *
 209:.\power.c     **** *******************************************************************************/
 210:.\power.c     **** void VoltageMonitorStop(void)
 211:.\power.c     **** {
 248              		.loc 1 211 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253 0000 80B4     		push	{r7}
 254              	.LCFI10:
 255              		.cfi_def_cfa_offset 4
 256 0002 00AF     		add	r7, sp, #0
 257              		.cfi_offset 7, -4
 258              	.LCFI11:
 259              		.cfi_def_cfa_register 7
 212:.\power.c     **** 	//ADC_Voltage_Target_Sleep();
 213:.\power.c     **** }
 260              		.loc 1 213 0
 261 0004 BD46     		mov	sp, r7
 262 0006 80BC     		pop	{r7}
 263 0008 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE33:
 266              		.size	VoltageMonitorStop, .-VoltageMonitorStop
 267 000a 00BF     		.section	.text.SendPSoCToSleep,"ax",%progbits
 268              		.align	2
 269              		.global	SendPSoCToSleep
 270              		.thumb
 271              		.thumb_func
 272              		.type	SendPSoCToSleep, %function
 273              	SendPSoCToSleep:
 274              	.LFB34:
 214:.\power.c     **** /*******************************************************************************
 215:.\power.c     **** * Function Name: SendPSoCToSleep()
 216:.\power.c     **** ********************************************************************************
 217:.\power.c     **** * Summary:
 218:.\power.c     **** *  Prepares the PSoC 5LP device for sleep and puts the device in low power mode.
 219:.\power.c     **** *
 220:.\power.c     **** * Parameters:
 221:.\power.c     **** *  None
 222:.\power.c     **** *
 223:.\power.c     **** * Return:
 224:.\power.c     **** *  None
 225:.\power.c     **** *
 226:.\power.c     **** *******************************************************************************/
 227:.\power.c     **** void SendPSoCToSleep(void)
 228:.\power.c     **** {
 275              		.loc 1 228 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
 280              	.LCFI12:
 281              		.cfi_def_cfa_offset 8
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 10


 282 0002 00AF     		add	r7, sp, #0
 283              		.cfi_offset 14, -4
 284              		.cfi_offset 7, -8
 285              	.LCFI13:
 286              		.cfi_def_cfa_register 7
 229:.\power.c     **** 	Pin_StatusLED_Write(1);
 287              		.loc 1 229 0
 288 0004 4FF00100 		mov	r0, #1
 289 0008 FFF7FEFF 		bl	Pin_StatusLED_Write
 230:.\power.c     **** 	Timer_UsbSuspend_Stop();	
 290              		.loc 1 230 0
 291 000c FFF7FEFF 		bl	Timer_UsbSuspend_Stop
 231:.\power.c     **** 	UART_Bridge_Stop();
 292              		.loc 1 231 0
 293 0010 FFF7FEFF 		bl	UART_Bridge_Stop
 232:.\power.c     ****     VoltageMonitorStop();
 294              		.loc 1 232 0
 295 0014 FFF7FEFF 		bl	VoltageMonitorStop
 233:.\power.c     **** 	SWDHalt();
 296              		.loc 1 233 0
 297 0018 FFF7FEFF 		bl	SWDHalt
 234:.\power.c     **** 	HostCommStop();
 298              		.loc 1 234 0
 299 001c FFF7FEFF 		bl	HostCommStop
 235:.\power.c     **** 	I2CPullUpDisable();		
 300              		.loc 1 235 0
 301 0020 FFF7FEFF 		bl	I2CPullUpDisable
 236:.\power.c     **** 	CyPmSaveClocks();
 302              		.loc 1 236 0
 303 0024 FFF7FEFF 		bl	CyPmSaveClocks
 237:.\power.c     **** 	CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_PICU);	
 304              		.loc 1 237 0
 305 0028 4FF00000 		mov	r0, #0
 306 002c 4FF04001 		mov	r1, #64
 307 0030 FFF7FEFF 		bl	CyPmSleep
 238:.\power.c     **** }
 308              		.loc 1 238 0
 309 0034 80BD     		pop	{r7, pc}
 310              		.cfi_endproc
 311              	.LFE34:
 312              		.size	SendPSoCToSleep, .-SendPSoCToSleep
 313              		.section	.text.ResumeFromSleep,"ax",%progbits
 314              		.align	2
 315              		.global	ResumeFromSleep
 316              		.thumb
 317              		.thumb_func
 318              		.type	ResumeFromSleep, %function
 319              	ResumeFromSleep:
 320              	.LFB35:
 239:.\power.c     **** /*******************************************************************************
 240:.\power.c     **** * Function Name: ResumeFromSleep()
 241:.\power.c     **** ********************************************************************************
 242:.\power.c     **** * Summary:
 243:.\power.c     **** *  Restores the configurations of PSoC 5LP after resuming from sleep.
 244:.\power.c     **** *
 245:.\power.c     **** * Parameters:
 246:.\power.c     **** *  None
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 11


 247:.\power.c     **** *
 248:.\power.c     **** * Return:
 249:.\power.c     **** *  None
 250:.\power.c     **** *
 251:.\power.c     **** *******************************************************************************/
 252:.\power.c     **** void ResumeFromSleep(void)
 253:.\power.c     **** {
 321              		.loc 1 253 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 1, uses_anonymous_args = 0
 325 0000 80B5     		push	{r7, lr}
 326              	.LCFI14:
 327              		.cfi_def_cfa_offset 8
 328 0002 00AF     		add	r7, sp, #0
 329              		.cfi_offset 14, -4
 330              		.cfi_offset 7, -8
 331              	.LCFI15:
 332              		.cfi_def_cfa_register 7
 254:.\power.c     **** 	CyPmRestoreClocks();
 333              		.loc 1 254 0
 334 0004 FFF7FEFF 		bl	CyPmRestoreClocks
 255:.\power.c     **** 	ProgramInit();
 335              		.loc 1 255 0
 336 0008 FFF7FEFF 		bl	ProgramInit
 256:.\power.c     **** 	HostCommInit();
 337              		.loc 1 256 0
 338 000c FFF7FEFF 		bl	HostCommInit
 257:.\power.c     **** 	SWDInit();
 339              		.loc 1 257 0
 340 0010 FFF7FEFF 		bl	SWDInit
 258:.\power.c     **** 	//ADC_Voltage_Target_Wakeup();
 259:.\power.c     **** 	//ADC_Voltage_Target_StartConvert();
 260:.\power.c     **** 	
 261:.\power.c     **** 	/* Initializes USB-UART interface */
 262:.\power.c     ****     USBUARTInit();
 341              		.loc 1 262 0
 342 0014 FFF7FEFF 		bl	USBUARTInit
 263:.\power.c     **** 	
 264:.\power.c     **** 	/* Initializes the timer for handling the USBFS Suspend Activity */
 265:.\power.c     **** 	Timer_UsbSuspend_Start();
 343              		.loc 1 265 0
 344 0018 FFF7FEFF 		bl	Timer_UsbSuspend_Start
 266:.\power.c     **** 	bUSBResetDetected = TRUE;
 345              		.loc 1 266 0
 346 001c 40F20003 		movw	r3, #:lower16:bUSBResetDetected
 347 0020 C0F20003 		movt	r3, #:upper16:bUSBResetDetected
 348 0024 4FF00102 		mov	r2, #1
 349 0028 1A70     		strb	r2, [r3, #0]
 267:.\power.c     **** 	Pin_StatusLED_Write(0);
 350              		.loc 1 267 0
 351 002a 4FF00000 		mov	r0, #0
 352 002e FFF7FEFF 		bl	Pin_StatusLED_Write
 268:.\power.c     **** }
 353              		.loc 1 268 0
 354 0032 80BD     		pop	{r7, pc}
 355              		.cfi_endproc
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 12


 356              	.LFE35:
 357              		.size	ResumeFromSleep, .-ResumeFromSleep
 358              		.section	.text.HandleUSBSuspend,"ax",%progbits
 359              		.align	2
 360              		.global	HandleUSBSuspend
 361              		.thumb
 362              		.thumb_func
 363              		.type	HandleUSBSuspend, %function
 364              	HandleUSBSuspend:
 365              	.LFB36:
 269:.\power.c     **** /*******************************************************************************
 270:.\power.c     **** * Function Name: HandleUSBSuspend()
 271:.\power.c     **** ********************************************************************************
 272:.\power.c     **** * Summary:
 273:.\power.c     **** * 	Handles the USB suspend Event
 274:.\power.c     **** *
 275:.\power.c     **** * Parameters:
 276:.\power.c     **** *  None
 277:.\power.c     **** *
 278:.\power.c     **** * Return:
 279:.\power.c     **** *  None
 280:.\power.c     **** *
 281:.\power.c     **** *******************************************************************************/
 282:.\power.c     **** void HandleUSBSuspend(void)
 283:.\power.c     **** {
 366              		.loc 1 283 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370 0000 80B5     		push	{r7, lr}
 371              	.LCFI16:
 372              		.cfi_def_cfa_offset 8
 373 0002 00AF     		add	r7, sp, #0
 374              		.cfi_offset 14, -4
 375              		.cfi_offset 7, -8
 376              	.LCFI17:
 377              		.cfi_def_cfa_register 7
 284:.\power.c     **** 	if(checkActivityFlag == TRUE)
 378              		.loc 1 284 0
 379 0004 40F20003 		movw	r3, #:lower16:checkActivityFlag
 380 0008 C0F20003 		movt	r3, #:upper16:checkActivityFlag
 381 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 382 000e 012B     		cmp	r3, #1
 383 0010 13D1     		bne	.L22
 285:.\power.c     **** 	{	
 286:.\power.c     **** 		if(USBFS_CheckActivity() == 0)
 384              		.loc 1 286 0
 385 0012 FFF7FEFF 		bl	USBFS_CheckActivity
 386 0016 0346     		mov	r3, r0
 387 0018 002B     		cmp	r3, #0
 388 001a 07D1     		bne	.L21
 287:.\power.c     **** 		{
 288:.\power.c     **** 
 289:.\power.c     **** 			USBFS_Suspend();
 389              		.loc 1 289 0
 390 001c FFF7FEFF 		bl	USBFS_Suspend
 290:.\power.c     **** 			SendPSoCToSleep();
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 13


 391              		.loc 1 290 0
 392 0020 FFF7FEFF 		bl	SendPSoCToSleep
 291:.\power.c     **** 			ResumeFromSleep();
 393              		.loc 1 291 0
 394 0024 FFF7FEFF 		bl	ResumeFromSleep
 292:.\power.c     **** 			USBFS_Resume();
 395              		.loc 1 292 0
 396 0028 FFF7FEFF 		bl	USBFS_Resume
 397              	.L21:
 293:.\power.c     **** 		}
 294:.\power.c     **** 		else
 295:.\power.c     **** 		{
 296:.\power.c     **** 			/* Do nothing */
 297:.\power.c     **** 		}
 298:.\power.c     **** 		checkActivityFlag = FALSE;
 398              		.loc 1 298 0
 399 002c 40F20003 		movw	r3, #:lower16:checkActivityFlag
 400 0030 C0F20003 		movt	r3, #:upper16:checkActivityFlag
 401 0034 4FF00002 		mov	r2, #0
 402 0038 1A70     		strb	r2, [r3, #0]
 403              	.L22:
 299:.\power.c     **** 	}
 300:.\power.c     **** }
 404              		.loc 1 300 0
 405 003a 80BD     		pop	{r7, pc}
 406              		.cfi_endproc
 407              	.LFE36:
 408              		.size	HandleUSBSuspend, .-HandleUSBSuspend
 409              		.text
 410              	.Letext0:
 411              		.section	.debug_loc,"",%progbits
 412              	.Ldebug_loc0:
 413              	.LLST0:
 414 0000 00000000 		.4byte	.LFB29
 415 0004 02000000 		.4byte	.LCFI0
 416 0008 0100     		.2byte	0x1
 417 000a 5D       		.byte	0x5d
 418 000b 02000000 		.4byte	.LCFI0
 419 000f 04000000 		.4byte	.LCFI1
 420 0013 0200     		.2byte	0x2
 421 0015 7D       		.byte	0x7d
 422 0016 08       		.sleb128 8
 423 0017 04000000 		.4byte	.LCFI1
 424 001b 0A000000 		.4byte	.LFE29
 425 001f 0200     		.2byte	0x2
 426 0021 77       		.byte	0x77
 427 0022 08       		.sleb128 8
 428 0023 00000000 		.4byte	0x0
 429 0027 00000000 		.4byte	0x0
 430              	.LLST1:
 431 002b 00000000 		.4byte	.LFB30
 432 002f 02000000 		.4byte	.LCFI2
 433 0033 0100     		.2byte	0x1
 434 0035 5D       		.byte	0x5d
 435 0036 02000000 		.4byte	.LCFI2
 436 003a 04000000 		.4byte	.LCFI3
 437 003e 0200     		.2byte	0x2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 14


 438 0040 7D       		.byte	0x7d
 439 0041 04       		.sleb128 4
 440 0042 04000000 		.4byte	.LCFI3
 441 0046 3A000000 		.4byte	.LFE30
 442 004a 0200     		.2byte	0x2
 443 004c 77       		.byte	0x77
 444 004d 04       		.sleb128 4
 445 004e 00000000 		.4byte	0x0
 446 0052 00000000 		.4byte	0x0
 447              	.LLST2:
 448 0056 00000000 		.4byte	.LFB31
 449 005a 02000000 		.4byte	.LCFI4
 450 005e 0100     		.2byte	0x1
 451 0060 5D       		.byte	0x5d
 452 0061 02000000 		.4byte	.LCFI4
 453 0065 04000000 		.4byte	.LCFI5
 454 0069 0200     		.2byte	0x2
 455 006b 7D       		.byte	0x7d
 456 006c 08       		.sleb128 8
 457 006d 04000000 		.4byte	.LCFI5
 458 0071 06000000 		.4byte	.LCFI6
 459 0075 0200     		.2byte	0x2
 460 0077 7D       		.byte	0x7d
 461 0078 10       		.sleb128 16
 462 0079 06000000 		.4byte	.LCFI6
 463 007d 3E000000 		.4byte	.LFE31
 464 0081 0200     		.2byte	0x2
 465 0083 77       		.byte	0x77
 466 0084 10       		.sleb128 16
 467 0085 00000000 		.4byte	0x0
 468 0089 00000000 		.4byte	0x0
 469              	.LLST3:
 470 008d 00000000 		.4byte	.LFB32
 471 0091 02000000 		.4byte	.LCFI7
 472 0095 0100     		.2byte	0x1
 473 0097 5D       		.byte	0x5d
 474 0098 02000000 		.4byte	.LCFI7
 475 009c 04000000 		.4byte	.LCFI8
 476 00a0 0200     		.2byte	0x2
 477 00a2 7D       		.byte	0x7d
 478 00a3 04       		.sleb128 4
 479 00a4 04000000 		.4byte	.LCFI8
 480 00a8 06000000 		.4byte	.LCFI9
 481 00ac 0200     		.2byte	0x2
 482 00ae 7D       		.byte	0x7d
 483 00af 18       		.sleb128 24
 484 00b0 06000000 		.4byte	.LCFI9
 485 00b4 58000000 		.4byte	.LFE32
 486 00b8 0200     		.2byte	0x2
 487 00ba 77       		.byte	0x77
 488 00bb 18       		.sleb128 24
 489 00bc 00000000 		.4byte	0x0
 490 00c0 00000000 		.4byte	0x0
 491              	.LLST4:
 492 00c4 00000000 		.4byte	.LFB33
 493 00c8 02000000 		.4byte	.LCFI10
 494 00cc 0100     		.2byte	0x1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 15


 495 00ce 5D       		.byte	0x5d
 496 00cf 02000000 		.4byte	.LCFI10
 497 00d3 04000000 		.4byte	.LCFI11
 498 00d7 0200     		.2byte	0x2
 499 00d9 7D       		.byte	0x7d
 500 00da 04       		.sleb128 4
 501 00db 04000000 		.4byte	.LCFI11
 502 00df 0A000000 		.4byte	.LFE33
 503 00e3 0200     		.2byte	0x2
 504 00e5 77       		.byte	0x77
 505 00e6 04       		.sleb128 4
 506 00e7 00000000 		.4byte	0x0
 507 00eb 00000000 		.4byte	0x0
 508              	.LLST5:
 509 00ef 00000000 		.4byte	.LFB34
 510 00f3 02000000 		.4byte	.LCFI12
 511 00f7 0100     		.2byte	0x1
 512 00f9 5D       		.byte	0x5d
 513 00fa 02000000 		.4byte	.LCFI12
 514 00fe 04000000 		.4byte	.LCFI13
 515 0102 0200     		.2byte	0x2
 516 0104 7D       		.byte	0x7d
 517 0105 08       		.sleb128 8
 518 0106 04000000 		.4byte	.LCFI13
 519 010a 36000000 		.4byte	.LFE34
 520 010e 0200     		.2byte	0x2
 521 0110 77       		.byte	0x77
 522 0111 08       		.sleb128 8
 523 0112 00000000 		.4byte	0x0
 524 0116 00000000 		.4byte	0x0
 525              	.LLST6:
 526 011a 00000000 		.4byte	.LFB35
 527 011e 02000000 		.4byte	.LCFI14
 528 0122 0100     		.2byte	0x1
 529 0124 5D       		.byte	0x5d
 530 0125 02000000 		.4byte	.LCFI14
 531 0129 04000000 		.4byte	.LCFI15
 532 012d 0200     		.2byte	0x2
 533 012f 7D       		.byte	0x7d
 534 0130 08       		.sleb128 8
 535 0131 04000000 		.4byte	.LCFI15
 536 0135 34000000 		.4byte	.LFE35
 537 0139 0200     		.2byte	0x2
 538 013b 77       		.byte	0x77
 539 013c 08       		.sleb128 8
 540 013d 00000000 		.4byte	0x0
 541 0141 00000000 		.4byte	0x0
 542              	.LLST7:
 543 0145 00000000 		.4byte	.LFB36
 544 0149 02000000 		.4byte	.LCFI16
 545 014d 0100     		.2byte	0x1
 546 014f 5D       		.byte	0x5d
 547 0150 02000000 		.4byte	.LCFI16
 548 0154 04000000 		.4byte	.LCFI17
 549 0158 0200     		.2byte	0x2
 550 015a 7D       		.byte	0x7d
 551 015b 08       		.sleb128 8
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 16


 552 015c 04000000 		.4byte	.LCFI17
 553 0160 3C000000 		.4byte	.LFE36
 554 0164 0200     		.2byte	0x2
 555 0166 77       		.byte	0x77
 556 0167 08       		.sleb128 8
 557 0168 00000000 		.4byte	0x0
 558 016c 00000000 		.4byte	0x0
 559              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 560              		.file 3 "./Generated_Source/PSoC5/core_cm3.h"
 561              		.file 4 ".\\/power.h"
 562              		.section	.debug_info
 563 0000 01020000 		.4byte	0x201
 564 0004 0200     		.2byte	0x2
 565 0006 00000000 		.4byte	.Ldebug_abbrev0
 566 000a 04       		.byte	0x4
 567 000b 01       		.uleb128 0x1
 568 000c A9010000 		.4byte	.LASF32
 569 0010 01       		.byte	0x1
 570 0011 55000000 		.4byte	.LASF33
 571 0015 50010000 		.4byte	.LASF34
 572 0019 00000000 		.4byte	0x0
 573 001d 00000000 		.4byte	0x0
 574 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 575 0025 00000000 		.4byte	.Ldebug_line0
 576 0029 02       		.uleb128 0x2
 577 002a 01       		.byte	0x1
 578 002b 06       		.byte	0x6
 579 002c D3010000 		.4byte	.LASF0
 580 0030 02       		.uleb128 0x2
 581 0031 01       		.byte	0x1
 582 0032 08       		.byte	0x8
 583 0033 5F000000 		.4byte	.LASF1
 584 0037 02       		.uleb128 0x2
 585 0038 02       		.byte	0x2
 586 0039 05       		.byte	0x5
 587 003a BA010000 		.4byte	.LASF2
 588 003e 02       		.uleb128 0x2
 589 003f 02       		.byte	0x2
 590 0040 07       		.byte	0x7
 591 0041 7F000000 		.4byte	.LASF3
 592 0045 02       		.uleb128 0x2
 593 0046 04       		.byte	0x4
 594 0047 05       		.byte	0x5
 595 0048 CA010000 		.4byte	.LASF4
 596 004c 02       		.uleb128 0x2
 597 004d 04       		.byte	0x4
 598 004e 07       		.byte	0x7
 599 004f 6D000000 		.4byte	.LASF5
 600 0053 02       		.uleb128 0x2
 601 0054 08       		.byte	0x8
 602 0055 05       		.byte	0x5
 603 0056 00000000 		.4byte	.LASF6
 604 005a 02       		.uleb128 0x2
 605 005b 08       		.byte	0x8
 606 005c 07       		.byte	0x7
 607 005d 0F010000 		.4byte	.LASF7
 608 0061 03       		.uleb128 0x3
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 17


 609 0062 04       		.byte	0x4
 610 0063 05       		.byte	0x5
 611 0064 696E7400 		.ascii	"int\000"
 612 0068 02       		.uleb128 0x2
 613 0069 04       		.byte	0x4
 614 006a 07       		.byte	0x7
 615 006b FB000000 		.4byte	.LASF8
 616 006f 04       		.uleb128 0x4
 617 0070 C4010000 		.4byte	.LASF9
 618 0074 02       		.byte	0x2
 619 0075 4C       		.byte	0x4c
 620 0076 30000000 		.4byte	0x30
 621 007a 04       		.uleb128 0x4
 622 007b ED000000 		.4byte	.LASF10
 623 007f 02       		.byte	0x2
 624 0080 4D       		.byte	0x4d
 625 0081 3E000000 		.4byte	0x3e
 626 0085 04       		.uleb128 0x4
 627 0086 F4000000 		.4byte	.LASF11
 628 008a 02       		.byte	0x2
 629 008b 4E       		.byte	0x4e
 630 008c 4C000000 		.4byte	0x4c
 631 0090 02       		.uleb128 0x2
 632 0091 04       		.byte	0x4
 633 0092 04       		.byte	0x4
 634 0093 4F000000 		.4byte	.LASF12
 635 0097 02       		.uleb128 0x2
 636 0098 08       		.byte	0x8
 637 0099 04       		.byte	0x4
 638 009a 2B000000 		.4byte	.LASF13
 639 009e 02       		.uleb128 0x2
 640 009f 01       		.byte	0x1
 641 00a0 08       		.byte	0x8
 642 00a1 B5010000 		.4byte	.LASF14
 643 00a5 05       		.uleb128 0x5
 644 00a6 6F000000 		.4byte	0x6f
 645 00aa 06       		.uleb128 0x6
 646 00ab 04       		.byte	0x4
 647 00ac 07       		.byte	0x7
 648 00ad 07       		.uleb128 0x7
 649 00ae 01       		.byte	0x1
 650 00af EF010000 		.4byte	.LASF15
 651 00b3 01       		.byte	0x1
 652 00b4 58       		.byte	0x58
 653 00b5 01       		.byte	0x1
 654 00b6 00000000 		.4byte	.LFB29
 655 00ba 0A000000 		.4byte	.LFE29
 656 00be 00000000 		.4byte	.LLST0
 657 00c2 07       		.uleb128 0x7
 658 00c3 01       		.byte	0x1
 659 00c4 D1000000 		.4byte	.LASF16
 660 00c8 01       		.byte	0x1
 661 00c9 6C       		.byte	0x6c
 662 00ca 01       		.byte	0x1
 663 00cb 00000000 		.4byte	.LFB30
 664 00cf 3A000000 		.4byte	.LFE30
 665 00d3 2B000000 		.4byte	.LLST1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 18


 666 00d7 08       		.uleb128 0x8
 667 00d8 01       		.byte	0x1
 668 00d9 44000000 		.4byte	.LASF19
 669 00dd 01       		.byte	0x1
 670 00de 8C       		.byte	0x8c
 671 00df 01       		.byte	0x1
 672 00e0 7A000000 		.4byte	0x7a
 673 00e4 00000000 		.4byte	.LFB31
 674 00e8 3E000000 		.4byte	.LFE31
 675 00ec 56000000 		.4byte	.LLST2
 676 00f0 11010000 		.4byte	0x111
 677 00f4 09       		.uleb128 0x9
 678 00f5 AD000000 		.4byte	.LASF17
 679 00f9 01       		.byte	0x1
 680 00fa 8E       		.byte	0x8e
 681 00fb 7A000000 		.4byte	0x7a
 682 00ff 02       		.byte	0x2
 683 0100 91       		.byte	0x91
 684 0101 74       		.sleb128 -12
 685 0102 09       		.uleb128 0x9
 686 0103 02020000 		.4byte	.LASF18
 687 0107 01       		.byte	0x1
 688 0108 8F       		.byte	0x8f
 689 0109 7A000000 		.4byte	0x7a
 690 010d 02       		.byte	0x2
 691 010e 91       		.byte	0x91
 692 010f 76       		.sleb128 -10
 693 0110 00       		.byte	0x0
 694 0111 08       		.uleb128 0x8
 695 0112 01       		.byte	0x1
 696 0113 BB000000 		.4byte	.LASF20
 697 0117 01       		.byte	0x1
 698 0118 B0       		.byte	0xb0
 699 0119 01       		.byte	0x1
 700 011a 7A000000 		.4byte	0x7a
 701 011e 00000000 		.4byte	.LFB32
 702 0122 58000000 		.4byte	.LFE32
 703 0126 8D000000 		.4byte	.LLST3
 704 012a 59010000 		.4byte	0x159
 705 012e 0A       		.uleb128 0xa
 706 012f 08010000 		.4byte	.LASF35
 707 0133 01       		.byte	0x1
 708 0134 B0       		.byte	0xb0
 709 0135 7A000000 		.4byte	0x7a
 710 0139 02       		.byte	0x2
 711 013a 91       		.byte	0x91
 712 013b 6E       		.sleb128 -18
 713 013c 09       		.uleb128 0x9
 714 013d 92000000 		.4byte	.LASF21
 715 0141 01       		.byte	0x1
 716 0142 B2       		.byte	0xb2
 717 0143 7A000000 		.4byte	0x7a
 718 0147 02       		.byte	0x2
 719 0148 91       		.byte	0x91
 720 0149 72       		.sleb128 -14
 721 014a 09       		.uleb128 0x9
 722 014b 1E000000 		.4byte	.LASF22
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 19


 723 014f 01       		.byte	0x1
 724 0150 B3       		.byte	0xb3
 725 0151 85000000 		.4byte	0x85
 726 0155 02       		.byte	0x2
 727 0156 91       		.byte	0x91
 728 0157 74       		.sleb128 -12
 729 0158 00       		.byte	0x0
 730 0159 07       		.uleb128 0x7
 731 015a 01       		.byte	0x1
 732 015b DA000000 		.4byte	.LASF23
 733 015f 01       		.byte	0x1
 734 0160 D2       		.byte	0xd2
 735 0161 01       		.byte	0x1
 736 0162 00000000 		.4byte	.LFB33
 737 0166 0A000000 		.4byte	.LFE33
 738 016a C4000000 		.4byte	.LLST4
 739 016e 07       		.uleb128 0x7
 740 016f 01       		.byte	0x1
 741 0170 DF010000 		.4byte	.LASF24
 742 0174 01       		.byte	0x1
 743 0175 E3       		.byte	0xe3
 744 0176 01       		.byte	0x1
 745 0177 00000000 		.4byte	.LFB34
 746 017b 36000000 		.4byte	.LFE34
 747 017f EF000000 		.4byte	.LLST5
 748 0183 07       		.uleb128 0x7
 749 0184 01       		.byte	0x1
 750 0185 0E000000 		.4byte	.LASF25
 751 0189 01       		.byte	0x1
 752 018a FC       		.byte	0xfc
 753 018b 01       		.byte	0x1
 754 018c 00000000 		.4byte	.LFB35
 755 0190 34000000 		.4byte	.LFE35
 756 0194 1A010000 		.4byte	.LLST6
 757 0198 0B       		.uleb128 0xb
 758 0199 01       		.byte	0x1
 759 019a 2D010000 		.4byte	.LASF26
 760 019e 01       		.byte	0x1
 761 019f 1A01     		.2byte	0x11a
 762 01a1 01       		.byte	0x1
 763 01a2 00000000 		.4byte	.LFB36
 764 01a6 3C000000 		.4byte	.LFE36
 765 01aa 45010000 		.4byte	.LLST7
 766 01ae 0C       		.uleb128 0xc
 767 01af 9A000000 		.4byte	.LASF27
 768 01b3 03       		.byte	0x3
 769 01b4 CE06     		.2byte	0x6ce
 770 01b6 BC010000 		.4byte	0x1bc
 771 01ba 01       		.byte	0x1
 772 01bb 01       		.byte	0x1
 773 01bc 05       		.uleb128 0x5
 774 01bd 61000000 		.4byte	0x61
 775 01c1 0D       		.uleb128 0xd
 776 01c2 3E010000 		.4byte	.LASF28
 777 01c6 01       		.byte	0x1
 778 01c7 44       		.byte	0x44
 779 01c8 6F000000 		.4byte	0x6f
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 20


 780 01cc 01       		.byte	0x1
 781 01cd 05       		.byte	0x5
 782 01ce 03       		.byte	0x3
 783 01cf 00000000 		.4byte	checkActivityFlag
 784 01d3 0E       		.uleb128 0xe
 785 01d4 32000000 		.4byte	.LASF29
 786 01d8 04       		.byte	0x4
 787 01d9 4A       		.byte	0x4a
 788 01da A5000000 		.4byte	0xa5
 789 01de 01       		.byte	0x1
 790 01df 01       		.byte	0x1
 791 01e0 0D       		.uleb128 0xd
 792 01e1 A7000000 		.4byte	.LASF30
 793 01e5 01       		.byte	0x1
 794 01e6 49       		.byte	0x49
 795 01e7 6F000000 		.4byte	0x6f
 796 01eb 01       		.byte	0x1
 797 01ec 05       		.byte	0x5
 798 01ed 03       		.byte	0x3
 799 01ee 00000000 		.4byte	range
 800 01f2 0D       		.uleb128 0xd
 801 01f3 26010000 		.4byte	.LASF31
 802 01f7 01       		.byte	0x1
 803 01f8 4A       		.byte	0x4a
 804 01f9 7A000000 		.4byte	0x7a
 805 01fd 01       		.byte	0x1
 806 01fe 05       		.byte	0x5
 807 01ff 03       		.byte	0x3
 808 0200 00000000 		.4byte	result
 809 0204 00       		.byte	0x0
 810              		.section	.debug_abbrev
 811 0000 01       		.uleb128 0x1
 812 0001 11       		.uleb128 0x11
 813 0002 01       		.byte	0x1
 814 0003 25       		.uleb128 0x25
 815 0004 0E       		.uleb128 0xe
 816 0005 13       		.uleb128 0x13
 817 0006 0B       		.uleb128 0xb
 818 0007 03       		.uleb128 0x3
 819 0008 0E       		.uleb128 0xe
 820 0009 1B       		.uleb128 0x1b
 821 000a 0E       		.uleb128 0xe
 822 000b 11       		.uleb128 0x11
 823 000c 01       		.uleb128 0x1
 824 000d 52       		.uleb128 0x52
 825 000e 01       		.uleb128 0x1
 826 000f 55       		.uleb128 0x55
 827 0010 06       		.uleb128 0x6
 828 0011 10       		.uleb128 0x10
 829 0012 06       		.uleb128 0x6
 830 0013 00       		.byte	0x0
 831 0014 00       		.byte	0x0
 832 0015 02       		.uleb128 0x2
 833 0016 24       		.uleb128 0x24
 834 0017 00       		.byte	0x0
 835 0018 0B       		.uleb128 0xb
 836 0019 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 21


 837 001a 3E       		.uleb128 0x3e
 838 001b 0B       		.uleb128 0xb
 839 001c 03       		.uleb128 0x3
 840 001d 0E       		.uleb128 0xe
 841 001e 00       		.byte	0x0
 842 001f 00       		.byte	0x0
 843 0020 03       		.uleb128 0x3
 844 0021 24       		.uleb128 0x24
 845 0022 00       		.byte	0x0
 846 0023 0B       		.uleb128 0xb
 847 0024 0B       		.uleb128 0xb
 848 0025 3E       		.uleb128 0x3e
 849 0026 0B       		.uleb128 0xb
 850 0027 03       		.uleb128 0x3
 851 0028 08       		.uleb128 0x8
 852 0029 00       		.byte	0x0
 853 002a 00       		.byte	0x0
 854 002b 04       		.uleb128 0x4
 855 002c 16       		.uleb128 0x16
 856 002d 00       		.byte	0x0
 857 002e 03       		.uleb128 0x3
 858 002f 0E       		.uleb128 0xe
 859 0030 3A       		.uleb128 0x3a
 860 0031 0B       		.uleb128 0xb
 861 0032 3B       		.uleb128 0x3b
 862 0033 0B       		.uleb128 0xb
 863 0034 49       		.uleb128 0x49
 864 0035 13       		.uleb128 0x13
 865 0036 00       		.byte	0x0
 866 0037 00       		.byte	0x0
 867 0038 05       		.uleb128 0x5
 868 0039 35       		.uleb128 0x35
 869 003a 00       		.byte	0x0
 870 003b 49       		.uleb128 0x49
 871 003c 13       		.uleb128 0x13
 872 003d 00       		.byte	0x0
 873 003e 00       		.byte	0x0
 874 003f 06       		.uleb128 0x6
 875 0040 24       		.uleb128 0x24
 876 0041 00       		.byte	0x0
 877 0042 0B       		.uleb128 0xb
 878 0043 0B       		.uleb128 0xb
 879 0044 3E       		.uleb128 0x3e
 880 0045 0B       		.uleb128 0xb
 881 0046 00       		.byte	0x0
 882 0047 00       		.byte	0x0
 883 0048 07       		.uleb128 0x7
 884 0049 2E       		.uleb128 0x2e
 885 004a 00       		.byte	0x0
 886 004b 3F       		.uleb128 0x3f
 887 004c 0C       		.uleb128 0xc
 888 004d 03       		.uleb128 0x3
 889 004e 0E       		.uleb128 0xe
 890 004f 3A       		.uleb128 0x3a
 891 0050 0B       		.uleb128 0xb
 892 0051 3B       		.uleb128 0x3b
 893 0052 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 22


 894 0053 27       		.uleb128 0x27
 895 0054 0C       		.uleb128 0xc
 896 0055 11       		.uleb128 0x11
 897 0056 01       		.uleb128 0x1
 898 0057 12       		.uleb128 0x12
 899 0058 01       		.uleb128 0x1
 900 0059 40       		.uleb128 0x40
 901 005a 06       		.uleb128 0x6
 902 005b 00       		.byte	0x0
 903 005c 00       		.byte	0x0
 904 005d 08       		.uleb128 0x8
 905 005e 2E       		.uleb128 0x2e
 906 005f 01       		.byte	0x1
 907 0060 3F       		.uleb128 0x3f
 908 0061 0C       		.uleb128 0xc
 909 0062 03       		.uleb128 0x3
 910 0063 0E       		.uleb128 0xe
 911 0064 3A       		.uleb128 0x3a
 912 0065 0B       		.uleb128 0xb
 913 0066 3B       		.uleb128 0x3b
 914 0067 0B       		.uleb128 0xb
 915 0068 27       		.uleb128 0x27
 916 0069 0C       		.uleb128 0xc
 917 006a 49       		.uleb128 0x49
 918 006b 13       		.uleb128 0x13
 919 006c 11       		.uleb128 0x11
 920 006d 01       		.uleb128 0x1
 921 006e 12       		.uleb128 0x12
 922 006f 01       		.uleb128 0x1
 923 0070 40       		.uleb128 0x40
 924 0071 06       		.uleb128 0x6
 925 0072 01       		.uleb128 0x1
 926 0073 13       		.uleb128 0x13
 927 0074 00       		.byte	0x0
 928 0075 00       		.byte	0x0
 929 0076 09       		.uleb128 0x9
 930 0077 34       		.uleb128 0x34
 931 0078 00       		.byte	0x0
 932 0079 03       		.uleb128 0x3
 933 007a 0E       		.uleb128 0xe
 934 007b 3A       		.uleb128 0x3a
 935 007c 0B       		.uleb128 0xb
 936 007d 3B       		.uleb128 0x3b
 937 007e 0B       		.uleb128 0xb
 938 007f 49       		.uleb128 0x49
 939 0080 13       		.uleb128 0x13
 940 0081 02       		.uleb128 0x2
 941 0082 0A       		.uleb128 0xa
 942 0083 00       		.byte	0x0
 943 0084 00       		.byte	0x0
 944 0085 0A       		.uleb128 0xa
 945 0086 05       		.uleb128 0x5
 946 0087 00       		.byte	0x0
 947 0088 03       		.uleb128 0x3
 948 0089 0E       		.uleb128 0xe
 949 008a 3A       		.uleb128 0x3a
 950 008b 0B       		.uleb128 0xb
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 23


 951 008c 3B       		.uleb128 0x3b
 952 008d 0B       		.uleb128 0xb
 953 008e 49       		.uleb128 0x49
 954 008f 13       		.uleb128 0x13
 955 0090 02       		.uleb128 0x2
 956 0091 0A       		.uleb128 0xa
 957 0092 00       		.byte	0x0
 958 0093 00       		.byte	0x0
 959 0094 0B       		.uleb128 0xb
 960 0095 2E       		.uleb128 0x2e
 961 0096 00       		.byte	0x0
 962 0097 3F       		.uleb128 0x3f
 963 0098 0C       		.uleb128 0xc
 964 0099 03       		.uleb128 0x3
 965 009a 0E       		.uleb128 0xe
 966 009b 3A       		.uleb128 0x3a
 967 009c 0B       		.uleb128 0xb
 968 009d 3B       		.uleb128 0x3b
 969 009e 05       		.uleb128 0x5
 970 009f 27       		.uleb128 0x27
 971 00a0 0C       		.uleb128 0xc
 972 00a1 11       		.uleb128 0x11
 973 00a2 01       		.uleb128 0x1
 974 00a3 12       		.uleb128 0x12
 975 00a4 01       		.uleb128 0x1
 976 00a5 40       		.uleb128 0x40
 977 00a6 06       		.uleb128 0x6
 978 00a7 00       		.byte	0x0
 979 00a8 00       		.byte	0x0
 980 00a9 0C       		.uleb128 0xc
 981 00aa 34       		.uleb128 0x34
 982 00ab 00       		.byte	0x0
 983 00ac 03       		.uleb128 0x3
 984 00ad 0E       		.uleb128 0xe
 985 00ae 3A       		.uleb128 0x3a
 986 00af 0B       		.uleb128 0xb
 987 00b0 3B       		.uleb128 0x3b
 988 00b1 05       		.uleb128 0x5
 989 00b2 49       		.uleb128 0x49
 990 00b3 13       		.uleb128 0x13
 991 00b4 3F       		.uleb128 0x3f
 992 00b5 0C       		.uleb128 0xc
 993 00b6 3C       		.uleb128 0x3c
 994 00b7 0C       		.uleb128 0xc
 995 00b8 00       		.byte	0x0
 996 00b9 00       		.byte	0x0
 997 00ba 0D       		.uleb128 0xd
 998 00bb 34       		.uleb128 0x34
 999 00bc 00       		.byte	0x0
 1000 00bd 03       		.uleb128 0x3
 1001 00be 0E       		.uleb128 0xe
 1002 00bf 3A       		.uleb128 0x3a
 1003 00c0 0B       		.uleb128 0xb
 1004 00c1 3B       		.uleb128 0x3b
 1005 00c2 0B       		.uleb128 0xb
 1006 00c3 49       		.uleb128 0x49
 1007 00c4 13       		.uleb128 0x13
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 24


 1008 00c5 3F       		.uleb128 0x3f
 1009 00c6 0C       		.uleb128 0xc
 1010 00c7 02       		.uleb128 0x2
 1011 00c8 0A       		.uleb128 0xa
 1012 00c9 00       		.byte	0x0
 1013 00ca 00       		.byte	0x0
 1014 00cb 0E       		.uleb128 0xe
 1015 00cc 34       		.uleb128 0x34
 1016 00cd 00       		.byte	0x0
 1017 00ce 03       		.uleb128 0x3
 1018 00cf 0E       		.uleb128 0xe
 1019 00d0 3A       		.uleb128 0x3a
 1020 00d1 0B       		.uleb128 0xb
 1021 00d2 3B       		.uleb128 0x3b
 1022 00d3 0B       		.uleb128 0xb
 1023 00d4 49       		.uleb128 0x49
 1024 00d5 13       		.uleb128 0x13
 1025 00d6 3F       		.uleb128 0x3f
 1026 00d7 0C       		.uleb128 0xc
 1027 00d8 3C       		.uleb128 0x3c
 1028 00d9 0C       		.uleb128 0xc
 1029 00da 00       		.byte	0x0
 1030 00db 00       		.byte	0x0
 1031 00dc 00       		.byte	0x0
 1032              		.section	.debug_pubnames,"",%progbits
 1033 0000 DA000000 		.4byte	0xda
 1034 0004 0200     		.2byte	0x2
 1035 0006 00000000 		.4byte	.Ldebug_info0
 1036 000a 05020000 		.4byte	0x205
 1037 000e AD000000 		.4byte	0xad
 1038 0012 566F6C74 		.ascii	"VoltageMonitorInit\000"
 1038      6167654D 
 1038      6F6E6974 
 1038      6F72496E 
 1038      697400
 1039 0025 C2000000 		.4byte	0xc2
 1040 0029 47657452 		.ascii	"GetRange\000"
 1040      616E6765 
 1040      00
 1041 0032 D7000000 		.4byte	0xd7
 1042 0036 47657456 		.ascii	"GetVoltage\000"
 1042      6F6C7461 
 1042      676500
 1043 0041 11010000 		.4byte	0x111
 1044 0045 436F6E76 		.ascii	"Convert_To_milliVolts\000"
 1044      6572745F 
 1044      546F5F6D 
 1044      696C6C69 
 1044      566F6C74 
 1045 005b 59010000 		.4byte	0x159
 1046 005f 566F6C74 		.ascii	"VoltageMonitorStop\000"
 1046      6167654D 
 1046      6F6E6974 
 1046      6F725374 
 1046      6F7000
 1047 0072 6E010000 		.4byte	0x16e
 1048 0076 53656E64 		.ascii	"SendPSoCToSleep\000"
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 25


 1048      50536F43 
 1048      546F536C 
 1048      65657000 
 1049 0086 83010000 		.4byte	0x183
 1050 008a 52657375 		.ascii	"ResumeFromSleep\000"
 1050      6D654672 
 1050      6F6D536C 
 1050      65657000 
 1051 009a 98010000 		.4byte	0x198
 1052 009e 48616E64 		.ascii	"HandleUSBSuspend\000"
 1052      6C655553 
 1052      42537573 
 1052      70656E64 
 1052      00
 1053 00af C1010000 		.4byte	0x1c1
 1054 00b3 63686563 		.ascii	"checkActivityFlag\000"
 1054      6B416374 
 1054      69766974 
 1054      79466C61 
 1054      6700
 1055 00c5 E0010000 		.4byte	0x1e0
 1056 00c9 72616E67 		.ascii	"range\000"
 1056      6500
 1057 00cf F2010000 		.4byte	0x1f2
 1058 00d3 72657375 		.ascii	"result\000"
 1058      6C7400
 1059 00da 00000000 		.4byte	0x0
 1060              		.section	.debug_aranges,"",%progbits
 1061 0000 54000000 		.4byte	0x54
 1062 0004 0200     		.2byte	0x2
 1063 0006 00000000 		.4byte	.Ldebug_info0
 1064 000a 04       		.byte	0x4
 1065 000b 00       		.byte	0x0
 1066 000c 0000     		.2byte	0x0
 1067 000e 0000     		.2byte	0x0
 1068 0010 00000000 		.4byte	.LFB29
 1069 0014 0A000000 		.4byte	.LFE29-.LFB29
 1070 0018 00000000 		.4byte	.LFB30
 1071 001c 3A000000 		.4byte	.LFE30-.LFB30
 1072 0020 00000000 		.4byte	.LFB31
 1073 0024 3E000000 		.4byte	.LFE31-.LFB31
 1074 0028 00000000 		.4byte	.LFB32
 1075 002c 58000000 		.4byte	.LFE32-.LFB32
 1076 0030 00000000 		.4byte	.LFB33
 1077 0034 0A000000 		.4byte	.LFE33-.LFB33
 1078 0038 00000000 		.4byte	.LFB34
 1079 003c 36000000 		.4byte	.LFE34-.LFB34
 1080 0040 00000000 		.4byte	.LFB35
 1081 0044 34000000 		.4byte	.LFE35-.LFB35
 1082 0048 00000000 		.4byte	.LFB36
 1083 004c 3C000000 		.4byte	.LFE36-.LFB36
 1084 0050 00000000 		.4byte	0x0
 1085 0054 00000000 		.4byte	0x0
 1086              		.section	.debug_ranges,"",%progbits
 1087              	.Ldebug_ranges0:
 1088 0000 00000000 		.4byte	.Ltext0
 1089 0004 00000000 		.4byte	.Letext0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 26


 1090 0008 00000000 		.4byte	.LFB29
 1091 000c 0A000000 		.4byte	.LFE29
 1092 0010 00000000 		.4byte	.LFB30
 1093 0014 3A000000 		.4byte	.LFE30
 1094 0018 00000000 		.4byte	.LFB31
 1095 001c 3E000000 		.4byte	.LFE31
 1096 0020 00000000 		.4byte	.LFB32
 1097 0024 58000000 		.4byte	.LFE32
 1098 0028 00000000 		.4byte	.LFB33
 1099 002c 0A000000 		.4byte	.LFE33
 1100 0030 00000000 		.4byte	.LFB34
 1101 0034 36000000 		.4byte	.LFE34
 1102 0038 00000000 		.4byte	.LFB35
 1103 003c 34000000 		.4byte	.LFE35
 1104 0040 00000000 		.4byte	.LFB36
 1105 0044 3C000000 		.4byte	.LFE36
 1106 0048 00000000 		.4byte	0x0
 1107 004c 00000000 		.4byte	0x0
 1108              		.section	.debug_str,"MS",%progbits,1
 1109              	.LASF6:
 1110 0000 6C6F6E67 		.ascii	"long long int\000"
 1110      206C6F6E 
 1110      6720696E 
 1110      7400
 1111              	.LASF25:
 1112 000e 52657375 		.ascii	"ResumeFromSleep\000"
 1112      6D654672 
 1112      6F6D536C 
 1112      65657000 
 1113              	.LASF22:
 1114 001e 696E7465 		.ascii	"intermediate\000"
 1114      726D6564 
 1114      69617465 
 1114      00
 1115              	.LASF13:
 1116 002b 646F7562 		.ascii	"double\000"
 1116      6C6500
 1117              	.LASF29:
 1118 0032 62555342 		.ascii	"bUSBResetDetected\000"
 1118      52657365 
 1118      74446574 
 1118      65637465 
 1118      6400
 1119              	.LASF19:
 1120 0044 47657456 		.ascii	"GetVoltage\000"
 1120      6F6C7461 
 1120      676500
 1121              	.LASF12:
 1122 004f 666C6F61 		.ascii	"float\000"
 1122      7400
 1123              	.LASF33:
 1124 0055 2E5C706F 		.ascii	".\\power.c\000"
 1124      7765722E 
 1124      6300
 1125              	.LASF1:
 1126 005f 756E7369 		.ascii	"unsigned char\000"
 1126      676E6564 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 27


 1126      20636861 
 1126      7200
 1127              	.LASF5:
 1128 006d 6C6F6E67 		.ascii	"long unsigned int\000"
 1128      20756E73 
 1128      69676E65 
 1128      6420696E 
 1128      7400
 1129              	.LASF3:
 1130 007f 73686F72 		.ascii	"short unsigned int\000"
 1130      7420756E 
 1130      7369676E 
 1130      65642069 
 1130      6E7400
 1131              	.LASF21:
 1132 0092 766F6C74 		.ascii	"voltage\000"
 1132      61676500 
 1133              	.LASF27:
 1134 009a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1134      52784275 
 1134      66666572 
 1134      00
 1135              	.LASF30:
 1136 00a7 72616E67 		.ascii	"range\000"
 1136      6500
 1137              	.LASF17:
 1138 00ad 74617267 		.ascii	"targetVoltage\000"
 1138      6574566F 
 1138      6C746167 
 1138      6500
 1139              	.LASF20:
 1140 00bb 436F6E76 		.ascii	"Convert_To_milliVolts\000"
 1140      6572745F 
 1140      546F5F6D 
 1140      696C6C69 
 1140      566F6C74 
 1141              	.LASF16:
 1142 00d1 47657452 		.ascii	"GetRange\000"
 1142      616E6765 
 1142      00
 1143              	.LASF23:
 1144 00da 566F6C74 		.ascii	"VoltageMonitorStop\000"
 1144      6167654D 
 1144      6F6E6974 
 1144      6F725374 
 1144      6F7000
 1145              	.LASF10:
 1146 00ed 75696E74 		.ascii	"uint16\000"
 1146      313600
 1147              	.LASF11:
 1148 00f4 75696E74 		.ascii	"uint32\000"
 1148      333200
 1149              	.LASF8:
 1150 00fb 756E7369 		.ascii	"unsigned int\000"
 1150      676E6564 
 1150      20696E74 
 1150      00
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 28


 1151              	.LASF35:
 1152 0108 636F756E 		.ascii	"counts\000"
 1152      747300
 1153              	.LASF7:
 1154 010f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1154      206C6F6E 
 1154      6720756E 
 1154      7369676E 
 1154      65642069 
 1155              	.LASF31:
 1156 0126 72657375 		.ascii	"result\000"
 1156      6C7400
 1157              	.LASF26:
 1158 012d 48616E64 		.ascii	"HandleUSBSuspend\000"
 1158      6C655553 
 1158      42537573 
 1158      70656E64 
 1158      00
 1159              	.LASF28:
 1160 013e 63686563 		.ascii	"checkActivityFlag\000"
 1160      6B416374 
 1160      69766974 
 1160      79466C61 
 1160      6700
 1161              	.LASF34:
 1162 0150 5C5C7073 		.ascii	"\\\\psf\\Home\\Desktop\\USB-Audio-PSOC5LP\\Firmware"
 1162      665C486F 
 1162      6D655C44 
 1162      65736B74 
 1162      6F705C55 
 1163 017d 5C4B6974 		.ascii	"\\KitProg version 2_03\\KitProg\\KitProg.cydsn\000"
 1163      50726F67 
 1163      20766572 
 1163      73696F6E 
 1163      20325F30 
 1164              	.LASF32:
 1165 01a9 474E5520 		.ascii	"GNU C 4.4.1\000"
 1165      4320342E 
 1165      342E3100 
 1166              	.LASF14:
 1167 01b5 63686172 		.ascii	"char\000"
 1167      00
 1168              	.LASF2:
 1169 01ba 73686F72 		.ascii	"short int\000"
 1169      7420696E 
 1169      7400
 1170              	.LASF9:
 1171 01c4 75696E74 		.ascii	"uint8\000"
 1171      3800
 1172              	.LASF4:
 1173 01ca 6C6F6E67 		.ascii	"long int\000"
 1173      20696E74 
 1173      00
 1174              	.LASF0:
 1175 01d3 7369676E 		.ascii	"signed char\000"
 1175      65642063 
 1175      68617200 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccU9a7Cp.s 			page 29


 1176              	.LASF24:
 1177 01df 53656E64 		.ascii	"SendPSoCToSleep\000"
 1177      50536F43 
 1177      546F536C 
 1177      65657000 
 1178              	.LASF15:
 1179 01ef 566F6C74 		.ascii	"VoltageMonitorInit\000"
 1179      6167654D 
 1179      6F6E6974 
 1179      6F72496E 
 1179      697400
 1180              	.LASF18:
 1181 0202 74617267 		.ascii	"targetValue\000"
 1181      65745661 
 1181      6C756500 
 1182              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
