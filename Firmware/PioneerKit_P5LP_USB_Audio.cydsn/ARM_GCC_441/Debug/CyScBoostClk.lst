ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"CyScBoostClk.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 A1010000 		.text
  20      02006400 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.CyScBoostClk_Start,"ax",%progbits
  24              		.align	2
  25              		.global	CyScBoostClk_Start
  26              		.thumb
  27              		.thumb_func
  28              		.type	CyScBoostClk_Start, %function
  29              	CyScBoostClk_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC5\\CyScBoostClk.c"
   1:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CyScBoostClk.c **** * File Name: CyScBoostClk.c
   3:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Version 2.0
   4:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
   5:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Description:
   6:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
   8:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Note:
   9:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  10:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/CyScBoostClk.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/CyScBoostClk.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/CyScBoostClk.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
  17:.\Generated_Source\PSoC5/CyScBoostClk.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/CyScBoostClk.c **** #include "CyScBoostClk.h"
  19:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
  20:.\Generated_Source\PSoC5/CyScBoostClk.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/CyScBoostClk.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/CyScBoostClk.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 2


  23:.\Generated_Source\PSoC5/CyScBoostClk.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/CyScBoostClk.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/CyScBoostClk.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
  27:.\Generated_Source\PSoC5/CyScBoostClk.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
  29:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
  30:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_Start
  32:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  34:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
  35:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  38:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
  39:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  40:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  41:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
  42:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  43:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  44:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_Start(void) 
  46:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
  32              		.loc 1 46 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_offset 7, -4
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  47:.\Generated_Source\PSoC5/CyScBoostClk.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_CLKEN |= CyScBoostClk_CLKEN_MASK;
  44              		.loc 1 48 0
  45 0004 44F2A133 		movw	r3, #:lower16:1073759137
  46 0008 C4F20003 		movt	r3, #:upper16:1073759137
  47 000c 44F2A132 		movw	r2, #:lower16:1073759137
  48 0010 C4F20002 		movt	r2, #:upper16:1073759137
  49 0014 1278     		ldrb	r2, [r2, #0]
  50 0016 D2B2     		uxtb	r2, r2
  51 0018 42F00102 		orr	r2, r2, #1
  52 001c D2B2     		uxtb	r2, r2
  53 001e 1A70     		strb	r2, [r3, #0]
  49:.\Generated_Source\PSoC5/CyScBoostClk.c **** 	CyScBoostClk_CLKSTBY |= CyScBoostClk_CLKSTBY_MASK;
  54              		.loc 1 49 0
  55 0020 44F2B133 		movw	r3, #:lower16:1073759153
  56 0024 C4F20003 		movt	r3, #:upper16:1073759153
  57 0028 44F2B132 		movw	r2, #:lower16:1073759153
  58 002c C4F20002 		movt	r2, #:upper16:1073759153
  59 0030 1278     		ldrb	r2, [r2, #0]
  60 0032 D2B2     		uxtb	r2, r2
  61 0034 42F00102 		orr	r2, r2, #1
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 3


  62 0038 D2B2     		uxtb	r2, r2
  63 003a 1A70     		strb	r2, [r3, #0]
  50:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
  64              		.loc 1 50 0
  65 003c BD46     		mov	sp, r7
  66 003e 80BC     		pop	{r7}
  67 0040 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE0:
  70              		.size	CyScBoostClk_Start, .-CyScBoostClk_Start
  71 0042 00BF     		.section	.text.CyScBoostClk_Stop,"ax",%progbits
  72              		.align	2
  73              		.global	CyScBoostClk_Stop
  74              		.thumb
  75              		.thumb_func
  76              		.type	CyScBoostClk_Stop, %function
  77              	CyScBoostClk_Stop:
  78              	.LFB1:
  51:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
  52:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
  53:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_Stop
  55:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  57:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
  58:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  64:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
  65:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  66:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  67:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
  68:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  69:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  70:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_Stop(void) 
  72:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
  79              		.loc 1 72 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_offset 7, -4
  89              	.LCFI3:
  90              		.cfi_def_cfa_register 7
  73:.\Generated_Source\PSoC5/CyScBoostClk.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_CLKEN &= (uint8)(~CyScBoostClk_CLKEN_MASK);
  91              		.loc 1 74 0
  92 0004 44F2A133 		movw	r3, #:lower16:1073759137
  93 0008 C4F20003 		movt	r3, #:upper16:1073759137
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 4


  94 000c 44F2A132 		movw	r2, #:lower16:1073759137
  95 0010 C4F20002 		movt	r2, #:upper16:1073759137
  96 0014 1278     		ldrb	r2, [r2, #0]
  97 0016 D2B2     		uxtb	r2, r2
  98 0018 02F0FE02 		and	r2, r2, #254
  99 001c 1A70     		strb	r2, [r3, #0]
  75:.\Generated_Source\PSoC5/CyScBoostClk.c **** 	CyScBoostClk_CLKSTBY &= (uint8)(~CyScBoostClk_CLKSTBY_MASK);
 100              		.loc 1 75 0
 101 001e 44F2B133 		movw	r3, #:lower16:1073759153
 102 0022 C4F20003 		movt	r3, #:upper16:1073759153
 103 0026 44F2B132 		movw	r2, #:lower16:1073759153
 104 002a C4F20002 		movt	r2, #:upper16:1073759153
 105 002e 1278     		ldrb	r2, [r2, #0]
 106 0030 D2B2     		uxtb	r2, r2
 107 0032 02F0FE02 		and	r2, r2, #254
 108 0036 1A70     		strb	r2, [r3, #0]
  76:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
 109              		.loc 1 76 0
 110 0038 BD46     		mov	sp, r7
 111 003a 80BC     		pop	{r7}
 112 003c 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	CyScBoostClk_Stop, .-CyScBoostClk_Stop
 116 003e 00BF     		.section	.text.CyScBoostClk_StopBlock,"ax",%progbits
 117              		.align	2
 118              		.global	CyScBoostClk_StopBlock
 119              		.thumb
 120              		.thumb_func
 121              		.type	CyScBoostClk_StopBlock, %function
 122              	CyScBoostClk_StopBlock:
 123              	.LFB2:
  77:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
  78:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
  79:.\Generated_Source\PSoC5/CyScBoostClk.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
  81:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
  82:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_StopBlock
  84:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  86:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
  87:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  93:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
  94:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  95:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  96:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
  97:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  98:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
  99:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_StopBlock(void) 
 101:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 5


 124              		.loc 1 101 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 80B4     		push	{r7}
 130              	.LCFI4:
 131              		.cfi_def_cfa_offset 4
 132 0002 83B0     		sub	sp, sp, #12
 133              	.LCFI5:
 134              		.cfi_def_cfa_offset 16
 135 0004 00AF     		add	r7, sp, #0
 136              		.cfi_offset 7, -4
 137              	.LCFI6:
 138              		.cfi_def_cfa_register 7
 102:.\Generated_Source\PSoC5/CyScBoostClk.c ****     if ((CyScBoostClk_CLKEN & CyScBoostClk_CLKEN_MASK) != 0u)
 139              		.loc 1 102 0
 140 0006 44F2A133 		movw	r3, #:lower16:1073759137
 141 000a C4F20003 		movt	r3, #:upper16:1073759137
 142 000e 1B78     		ldrb	r3, [r3, #0]
 143 0010 DBB2     		uxtb	r3, r3
 144 0012 03F00103 		and	r3, r3, #1
 145 0016 DBB2     		uxtb	r3, r3
 146 0018 002B     		cmp	r3, #0
 147 001a 66D0     		beq	.L8
 148              	.LBB2:
 103:.\Generated_Source\PSoC5/CyScBoostClk.c ****     {
 104:.\Generated_Source\PSoC5/CyScBoostClk.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/CyScBoostClk.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 107:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_LD = 0u;
 149              		.loc 1 107 0
 150 001c 44F20103 		movw	r3, #:lower16:1073758209
 151 0020 C4F20003 		movt	r3, #:upper16:1073758209
 152 0024 4FF00002 		mov	r2, #0
 153 0028 1A70     		strb	r2, [r3, #0]
 108:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 109:.\Generated_Source\PSoC5/CyScBoostClk.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/CyScBoostClk.c **** #if defined(CyScBoostClk__CFG3)
 111:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_AMASK = CyScBoostClk_CLKEN_MASK;
 154              		.loc 1 111 0
 155 002a 44F21403 		movw	r3, #:lower16:1073758228
 156 002e C4F20003 		movt	r3, #:upper16:1073758228
 157 0032 4FF00102 		mov	r2, #1
 158 0036 1A70     		strb	r2, [r3, #0]
 112:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_DMASK = 0x00u;
 159              		.loc 1 112 0
 160 0038 44F21003 		movw	r3, #:lower16:1073758224
 161 003c C4F20003 		movt	r3, #:upper16:1073758224
 162 0040 4FF00002 		mov	r2, #0
 163 0044 1A70     		strb	r2, [r3, #0]
 113:.\Generated_Source\PSoC5/CyScBoostClk.c **** #else
 114:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_DMASK = CyScBoostClk_CLKEN_MASK;
 115:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_AMASK = 0x00u;
 116:.\Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* CyScBoostClk__CFG3 */
 117:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 118:.\Generated_Source\PSoC5/CyScBoostClk.c ****         /* Clear mask of bus clock. */
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 6


 119:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 164              		.loc 1 119 0
 165 0046 44F20803 		movw	r3, #:lower16:1073758216
 166 004a C4F20003 		movt	r3, #:upper16:1073758216
 167 004e 44F20802 		movw	r2, #:lower16:1073758216
 168 0052 C4F20002 		movt	r2, #:upper16:1073758216
 169 0056 1278     		ldrb	r2, [r2, #0]
 170 0058 D2B2     		uxtb	r2, r2
 171 005a 02F07F02 		and	r2, r2, #127
 172 005e 1A70     		strb	r2, [r3, #0]
 120:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 121:.\Generated_Source\PSoC5/CyScBoostClk.c ****         oldDivider = CY_GET_REG16(CyScBoostClk_DIV_PTR);
 173              		.loc 1 121 0
 174 0060 44F20013 		movw	r3, #:lower16:1073758464
 175 0064 C4F20003 		movt	r3, #:upper16:1073758464
 176 0068 1B88     		ldrh	r3, [r3, #0]	@ movhi
 177 006a FB80     		strh	r3, [r7, #6]	@ movhi
 122:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 178              		.loc 1 122 0
 179 006c 44F20203 		movw	r3, #:lower16:1073758210
 180 0070 C4F20003 		movt	r3, #:upper16:1073758210
 181 0074 FA88     		ldrh	r2, [r7, #6]	@ movhi
 182 0076 1A80     		strh	r2, [r3, #0]	@ movhi
 123:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 183              		.loc 1 123 0
 184 0078 44F20103 		movw	r3, #:lower16:1073758209
 185 007c C4F20003 		movt	r3, #:upper16:1073758209
 186 0080 4FF00702 		mov	r2, #7
 187 0084 1A70     		strb	r2, [r3, #0]
 188              	.L7:
 124:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 125:.\Generated_Source\PSoC5/CyScBoostClk.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/CyScBoostClk.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 189              		.loc 1 126 0
 190 0086 44F20103 		movw	r3, #:lower16:1073758209
 191 008a C4F20003 		movt	r3, #:upper16:1073758209
 192 008e 1B78     		ldrb	r3, [r3, #0]
 193 0090 DBB2     		uxtb	r3, r3
 194 0092 03F00103 		and	r3, r3, #1
 195 0096 DBB2     		uxtb	r3, r3
 196 0098 002B     		cmp	r3, #0
 197 009a F4D1     		bne	.L7
 127:.\Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 129:.\Generated_Source\PSoC5/CyScBoostClk.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_CLKEN &= (uint8)(~CyScBoostClk_CLKEN_MASK);
 198              		.loc 1 130 0
 199 009c 44F2A133 		movw	r3, #:lower16:1073759137
 200 00a0 C4F20003 		movt	r3, #:upper16:1073759137
 201 00a4 44F2A132 		movw	r2, #:lower16:1073759137
 202 00a8 C4F20002 		movt	r2, #:upper16:1073759137
 203 00ac 1278     		ldrb	r2, [r2, #0]
 204 00ae D2B2     		uxtb	r2, r2
 205 00b0 02F0FE02 		and	r2, r2, #254
 206 00b4 1A70     		strb	r2, [r3, #0]
 131:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_CLKSTBY &= (uint8)(~CyScBoostClk_CLKSTBY_MASK);
 207              		.loc 1 131 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 7


 208 00b6 44F2B133 		movw	r3, #:lower16:1073759153
 209 00ba C4F20003 		movt	r3, #:upper16:1073759153
 210 00be 44F2B132 		movw	r2, #:lower16:1073759153
 211 00c2 C4F20002 		movt	r2, #:upper16:1073759153
 212 00c6 1278     		ldrb	r2, [r2, #0]
 213 00c8 D2B2     		uxtb	r2, r2
 214 00ca 02F0FE02 		and	r2, r2, #254
 215 00ce 1A70     		strb	r2, [r3, #0]
 132:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 133:.\Generated_Source\PSoC5/CyScBoostClk.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/CyScBoostClk.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_LD = 0x00u;
 216              		.loc 1 135 0
 217 00d0 44F20103 		movw	r3, #:lower16:1073758209
 218 00d4 C4F20003 		movt	r3, #:upper16:1073758209
 219 00d8 4FF00002 		mov	r2, #0
 220 00dc 1A70     		strb	r2, [r3, #0]
 136:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CY_SET_REG16(CyScBoostClk_DIV_PTR, oldDivider);
 221              		.loc 1 136 0
 222 00de 44F20013 		movw	r3, #:lower16:1073758464
 223 00e2 C4F20003 		movt	r3, #:upper16:1073758464
 224 00e6 FA88     		ldrh	r2, [r7, #6]	@ movhi
 225 00e8 1A80     		strh	r2, [r3, #0]	@ movhi
 226              	.L8:
 227              	.LBE2:
 137:.\Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/CyScBoostClk.c ****     }
 139:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
 228              		.loc 1 139 0
 229 00ea 07F10C07 		add	r7, r7, #12
 230 00ee BD46     		mov	sp, r7
 231 00f0 80BC     		pop	{r7}
 232 00f2 7047     		bx	lr
 233              		.cfi_endproc
 234              	.LFE2:
 235              		.size	CyScBoostClk_StopBlock, .-CyScBoostClk_StopBlock
 236              		.section	.text.CyScBoostClk_StandbyPower,"ax",%progbits
 237              		.align	2
 238              		.global	CyScBoostClk_StandbyPower
 239              		.thumb
 240              		.thumb_func
 241              		.type	CyScBoostClk_StandbyPower, %function
 242              	CyScBoostClk_StandbyPower:
 243              	.LFB3:
 140:.\Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 142:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 143:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_StandbyPower
 145:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 147:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 148:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 150:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 151:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 8


 153:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 154:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 155:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 156:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
 244              		.loc 1 158 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249 0000 80B4     		push	{r7}
 250              	.LCFI7:
 251              		.cfi_def_cfa_offset 4
 252 0002 83B0     		sub	sp, sp, #12
 253              	.LCFI8:
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_offset 7, -4
 257              	.LCFI9:
 258              		.cfi_def_cfa_register 7
 259 0006 0346     		mov	r3, r0
 260 0008 FB71     		strb	r3, [r7, #7]
 159:.\Generated_Source\PSoC5/CyScBoostClk.c ****     if(state == 0u)
 261              		.loc 1 159 0
 262 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 263 000c 002B     		cmp	r3, #0
 264 000e 0DD1     		bne	.L10
 160:.\Generated_Source\PSoC5/CyScBoostClk.c ****     {
 161:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_CLKSTBY &= (uint8)(~CyScBoostClk_CLKSTBY_MASK);
 265              		.loc 1 161 0
 266 0010 44F2B133 		movw	r3, #:lower16:1073759153
 267 0014 C4F20003 		movt	r3, #:upper16:1073759153
 268 0018 44F2B132 		movw	r2, #:lower16:1073759153
 269 001c C4F20002 		movt	r2, #:upper16:1073759153
 270 0020 1278     		ldrb	r2, [r2, #0]
 271 0022 D2B2     		uxtb	r2, r2
 272 0024 02F0FE02 		and	r2, r2, #254
 273 0028 1A70     		strb	r2, [r3, #0]
 274 002a 0DE0     		b	.L12
 275              	.L10:
 162:.\Generated_Source\PSoC5/CyScBoostClk.c ****     }
 163:.\Generated_Source\PSoC5/CyScBoostClk.c ****     else
 164:.\Generated_Source\PSoC5/CyScBoostClk.c ****     {
 165:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_CLKSTBY |= CyScBoostClk_CLKSTBY_MASK;
 276              		.loc 1 165 0
 277 002c 44F2B133 		movw	r3, #:lower16:1073759153
 278 0030 C4F20003 		movt	r3, #:upper16:1073759153
 279 0034 44F2B132 		movw	r2, #:lower16:1073759153
 280 0038 C4F20002 		movt	r2, #:upper16:1073759153
 281 003c 1278     		ldrb	r2, [r2, #0]
 282 003e D2B2     		uxtb	r2, r2
 283 0040 42F00102 		orr	r2, r2, #1
 284 0044 D2B2     		uxtb	r2, r2
 285 0046 1A70     		strb	r2, [r3, #0]
 286              	.L12:
 166:.\Generated_Source\PSoC5/CyScBoostClk.c ****     }
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 9


 167:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
 287              		.loc 1 167 0
 288 0048 07F10C07 		add	r7, r7, #12
 289 004c BD46     		mov	sp, r7
 290 004e 80BC     		pop	{r7}
 291 0050 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE3:
 294              		.size	CyScBoostClk_StandbyPower, .-CyScBoostClk_StandbyPower
 295 0052 00BF     		.section	.text.CyScBoostClk_SetDividerRegister,"ax",%progbits
 296              		.align	2
 297              		.global	CyScBoostClk_SetDividerRegister
 298              		.thumb
 299              		.thumb_func
 300              		.type	CyScBoostClk_SetDividerRegister, %function
 301              	CyScBoostClk_SetDividerRegister:
 302              	.LFB4:
 168:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 169:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 170:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_SetDividerRegister
 172:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 174:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 175:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 180:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 181:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/CyScBoostClk.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/CyScBoostClk.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   cycle.
 188:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 189:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 190:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 191:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 192:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/CyScBoostClk.c ****                                 
 195:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
 303              		.loc 1 195 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 16
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307 0000 80B5     		push	{r7, lr}
 308              	.LCFI10:
 309              		.cfi_def_cfa_offset 8
 310 0002 84B0     		sub	sp, sp, #16
 311              	.LCFI11:
 312              		.cfi_def_cfa_offset 24
 313 0004 00AF     		add	r7, sp, #0
 314              		.cfi_offset 14, -4
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 10


 315              		.cfi_offset 7, -8
 316              	.LCFI12:
 317              		.cfi_def_cfa_register 7
 318 0006 0246     		mov	r2, r0
 319 0008 0B46     		mov	r3, r1
 320 000a FA80     		strh	r2, [r7, #6]	@ movhi
 321 000c 7B71     		strb	r3, [r7, #5]
 196:.\Generated_Source\PSoC5/CyScBoostClk.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 198:.\Generated_Source\PSoC5/CyScBoostClk.c ****     uint8 currSrc = CyScBoostClk_GetSourceRegister();
 322              		.loc 1 198 0
 323 000e FFF7FEFF 		bl	CyScBoostClk_GetSourceRegister
 324 0012 0346     		mov	r3, r0
 325 0014 7B73     		strb	r3, [r7, #13]
 199:.\Generated_Source\PSoC5/CyScBoostClk.c ****     uint16 oldDivider = CyScBoostClk_GetDividerRegister();
 326              		.loc 1 199 0
 327 0016 FFF7FEFF 		bl	CyScBoostClk_GetDividerRegister
 328 001a 0346     		mov	r3, r0
 329 001c FB81     		strh	r3, [r7, #14]	@ movhi
 200:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 201:.\Generated_Source\PSoC5/CyScBoostClk.c ****     if (clkDivider != oldDivider)
 330              		.loc 1 201 0
 331 001e FA88     		ldrh	r2, [r7, #6]
 332 0020 FB89     		ldrh	r3, [r7, #14]
 333 0022 9A42     		cmp	r2, r3
 334 0024 00F0DB80 		beq	.L26
 202:.\Generated_Source\PSoC5/CyScBoostClk.c ****     {
 203:.\Generated_Source\PSoC5/CyScBoostClk.c ****         enabled = CyScBoostClk_CLKEN & CyScBoostClk_CLKEN_MASK;
 335              		.loc 1 203 0
 336 0028 44F2A133 		movw	r3, #:lower16:1073759137
 337 002c C4F20003 		movt	r3, #:upper16:1073759137
 338 0030 1B78     		ldrb	r3, [r3, #0]
 339 0032 DBB2     		uxtb	r3, r3
 340 0034 03F00103 		and	r3, r3, #1
 341 0038 3B73     		strb	r3, [r7, #12]
 204:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 205:.\Generated_Source\PSoC5/CyScBoostClk.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 342              		.loc 1 205 0
 343 003a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 344 003c 002B     		cmp	r3, #0
 345 003e 31D1     		bne	.L15
 346 0040 FB89     		ldrh	r3, [r7, #14]
 347 0042 002B     		cmp	r3, #0
 348 0044 02D0     		beq	.L16
 349 0046 FB88     		ldrh	r3, [r7, #6]
 350 0048 002B     		cmp	r3, #0
 351 004a 2BD1     		bne	.L15
 352              	.L16:
 206:.\Generated_Source\PSoC5/CyScBoostClk.c ****         {
 207:.\Generated_Source\PSoC5/CyScBoostClk.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/CyScBoostClk.c ****             if (oldDivider == 0u)
 353              		.loc 1 208 0
 354 004c FB89     		ldrh	r3, [r7, #14]
 355 004e 002B     		cmp	r3, #0
 356 0050 13D1     		bne	.L17
 209:.\Generated_Source\PSoC5/CyScBoostClk.c ****             {
 210:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 11


 211:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CyScBoostClk_DIV_PTR, clkDivider);
 357              		.loc 1 213 0
 358 0052 44F20013 		movw	r3, #:lower16:1073758464
 359 0056 C4F20003 		movt	r3, #:upper16:1073758464
 360 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 361 005c 1A80     		strh	r2, [r3, #0]	@ movhi
 214:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CyScBoostClk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 362              		.loc 1 214 0
 363 005e 44F20213 		movw	r3, #:lower16:1073758466
 364 0062 C4F20003 		movt	r3, #:upper16:1073758466
 365 0066 44F20212 		movw	r2, #:lower16:1073758466
 366 006a C4F20002 		movt	r2, #:upper16:1073758466
 367 006e 1278     		ldrb	r2, [r2, #0]
 368 0070 D2B2     		uxtb	r2, r2
 369 0072 02F0BF02 		and	r2, r2, #191
 370 0076 1A70     		strb	r2, [r3, #0]
 371              		.loc 1 205 0
 372 0078 B1E0     		b	.L26
 373              	.L17:
 215:.\Generated_Source\PSoC5/CyScBoostClk.c ****             }
 216:.\Generated_Source\PSoC5/CyScBoostClk.c ****             else
 217:.\Generated_Source\PSoC5/CyScBoostClk.c ****             {
 218:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CyScBoostClk_MOD_SRC |= CYCLK_SSS;
 374              		.loc 1 220 0
 375 007a 44F20213 		movw	r3, #:lower16:1073758466
 376 007e C4F20003 		movt	r3, #:upper16:1073758466
 377 0082 44F20212 		movw	r2, #:lower16:1073758466
 378 0086 C4F20002 		movt	r2, #:upper16:1073758466
 379 008a 1278     		ldrb	r2, [r2, #0]
 380 008c D2B2     		uxtb	r2, r2
 381 008e 42F04002 		orr	r2, r2, #64
 382 0092 D2B2     		uxtb	r2, r2
 383 0094 1A70     		strb	r2, [r3, #0]
 221:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CyScBoostClk_DIV_PTR, clkDivider);
 384              		.loc 1 221 0
 385 0096 44F20013 		movw	r3, #:lower16:1073758464
 386 009a C4F20003 		movt	r3, #:upper16:1073758464
 387 009e FA88     		ldrh	r2, [r7, #6]	@ movhi
 388 00a0 1A80     		strh	r2, [r3, #0]	@ movhi
 389              		.loc 1 205 0
 390 00a2 9CE0     		b	.L26
 391              	.L15:
 222:.\Generated_Source\PSoC5/CyScBoostClk.c ****             }
 223:.\Generated_Source\PSoC5/CyScBoostClk.c ****         }
 224:.\Generated_Source\PSoC5/CyScBoostClk.c ****         else
 225:.\Generated_Source\PSoC5/CyScBoostClk.c ****         {
 226:.\Generated_Source\PSoC5/CyScBoostClk.c **** 			
 227:.\Generated_Source\PSoC5/CyScBoostClk.c ****             if (enabled != 0u)
 392              		.loc 1 227 0
 393 00a4 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 394 00a6 002B     		cmp	r3, #0
 395 00a8 5AD0     		beq	.L19
 228:.\Generated_Source\PSoC5/CyScBoostClk.c ****             {
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 12


 229:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_LD = 0x00u;
 396              		.loc 1 229 0
 397 00aa 44F20103 		movw	r3, #:lower16:1073758209
 398 00ae C4F20003 		movt	r3, #:upper16:1073758209
 399 00b2 4FF00002 		mov	r2, #0
 400 00b6 1A70     		strb	r2, [r3, #0]
 230:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 231:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/CyScBoostClk.c **** #if defined(CyScBoostClk__CFG3)
 233:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_AMASK = CyScBoostClk_CLKEN_MASK;
 401              		.loc 1 233 0
 402 00b8 44F21403 		movw	r3, #:lower16:1073758228
 403 00bc C4F20003 		movt	r3, #:upper16:1073758228
 404 00c0 4FF00102 		mov	r2, #1
 405 00c4 1A70     		strb	r2, [r3, #0]
 234:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_DMASK = 0x00u;
 406              		.loc 1 234 0
 407 00c6 44F21003 		movw	r3, #:lower16:1073758224
 408 00ca C4F20003 		movt	r3, #:upper16:1073758224
 409 00ce 4FF00002 		mov	r2, #0
 410 00d2 1A70     		strb	r2, [r3, #0]
 235:.\Generated_Source\PSoC5/CyScBoostClk.c **** #else
 236:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_DMASK = CyScBoostClk_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* CyScBoostClk__CFG3 */
 239:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 411              		.loc 1 240 0
 412 00d4 44F20803 		movw	r3, #:lower16:1073758216
 413 00d8 C4F20003 		movt	r3, #:upper16:1073758216
 414 00dc 44F20802 		movw	r2, #:lower16:1073758216
 415 00e0 C4F20002 		movt	r2, #:upper16:1073758216
 416 00e4 1278     		ldrb	r2, [r2, #0]
 417 00e6 D2B2     		uxtb	r2, r2
 418 00e8 02F07F02 		and	r2, r2, #127
 419 00ec 1A70     		strb	r2, [r3, #0]
 241:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 242:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 if (((CyScBoostClk_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 420              		.loc 1 243 0
 421 00ee 44F20213 		movw	r3, #:lower16:1073758466
 422 00f2 C4F20003 		movt	r3, #:upper16:1073758466
 423 00f6 1B78     		ldrb	r3, [r3, #0]
 424 00f8 DBB2     		uxtb	r3, r3
 425 00fa 03F00803 		and	r3, r3, #8
 426 00fe 002B     		cmp	r3, #0
 427 0100 02D0     		beq	.L20
 428 0102 FB88     		ldrh	r3, [r7, #6]
 429 0104 002B     		cmp	r3, #0
 430 0106 2BD1     		bne	.L19
 431              	.L20:
 244:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 {
 245:.\Generated_Source\PSoC5/CyScBoostClk.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/CyScBoostClk.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 432              		.loc 1 246 0
 433 0108 44F20203 		movw	r3, #:lower16:1073758210
 434 010c C4F20003 		movt	r3, #:upper16:1073758210
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 13


 435 0110 FA89     		ldrh	r2, [r7, #14]	@ movhi
 436 0112 1A80     		strh	r2, [r3, #0]	@ movhi
 247:.\Generated_Source\PSoC5/CyScBoostClk.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 437              		.loc 1 247 0
 438 0114 44F20103 		movw	r3, #:lower16:1073758209
 439 0118 C4F20003 		movt	r3, #:upper16:1073758209
 440 011c 4FF00702 		mov	r2, #7
 441 0120 1A70     		strb	r2, [r3, #0]
 442              	.L21:
 248:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 249:.\Generated_Source\PSoC5/CyScBoostClk.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/CyScBoostClk.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 443              		.loc 1 250 0
 444 0122 44F20103 		movw	r3, #:lower16:1073758209
 445 0126 C4F20003 		movt	r3, #:upper16:1073758209
 446 012a 1B78     		ldrb	r3, [r3, #0]
 447 012c DBB2     		uxtb	r3, r3
 448 012e 03F00103 		and	r3, r3, #1
 449 0132 DBB2     		uxtb	r3, r3
 450 0134 002B     		cmp	r3, #0
 451 0136 F4D1     		bne	.L21
 251:.\Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 253:.\Generated_Source\PSoC5/CyScBoostClk.c ****                     CyScBoostClk_CLKEN &= (uint8)(~CyScBoostClk_CLKEN_MASK);
 452              		.loc 1 253 0
 453 0138 44F2A133 		movw	r3, #:lower16:1073759137
 454 013c C4F20003 		movt	r3, #:upper16:1073759137
 455 0140 44F2A132 		movw	r2, #:lower16:1073759137
 456 0144 C4F20002 		movt	r2, #:upper16:1073759137
 457 0148 1278     		ldrb	r2, [r2, #0]
 458 014a D2B2     		uxtb	r2, r2
 459 014c 02F0FE02 		and	r2, r2, #254
 460 0150 1A70     		strb	r2, [r3, #0]
 254:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 255:.\Generated_Source\PSoC5/CyScBoostClk.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/CyScBoostClk.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/CyScBoostClk.c ****                     CLK_DIST_LD = 0x00u;
 461              		.loc 1 257 0
 462 0152 44F20103 		movw	r3, #:lower16:1073758209
 463 0156 C4F20003 		movt	r3, #:upper16:1073758209
 464 015a 4FF00002 		mov	r2, #0
 465 015e 1A70     		strb	r2, [r3, #0]
 466              	.L19:
 258:.\Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 }
 260:.\Generated_Source\PSoC5/CyScBoostClk.c ****             }
 261:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 262:.\Generated_Source\PSoC5/CyScBoostClk.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/CyScBoostClk.c ****             if ((CyScBoostClk_CLKEN & CyScBoostClk_CLKEN_MASK) != 0u)
 467              		.loc 1 263 0
 468 0160 44F2A133 		movw	r3, #:lower16:1073759137
 469 0164 C4F20003 		movt	r3, #:upper16:1073759137
 470 0168 1B78     		ldrb	r3, [r3, #0]
 471 016a DBB2     		uxtb	r3, r3
 472 016c 03F00103 		and	r3, r3, #1
 473 0170 DBB2     		uxtb	r3, r3
 474 0172 002B     		cmp	r3, #0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 14


 475 0174 1ED0     		beq	.L22
 264:.\Generated_Source\PSoC5/CyScBoostClk.c ****             {
 265:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 476              		.loc 1 266 0
 477 0176 44F20203 		movw	r3, #:lower16:1073758210
 478 017a C4F20003 		movt	r3, #:upper16:1073758210
 479 017e FA88     		ldrh	r2, [r7, #6]	@ movhi
 480 0180 1A80     		strh	r2, [r3, #0]	@ movhi
 267:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 268:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 481              		.loc 1 268 0
 482 0182 44F20103 		movw	r3, #:lower16:1073758209
 483 0186 C4F20003 		movt	r3, #:upper16:1073758209
 484 018a 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 485 018c 002A     		cmp	r2, #0
 486 018e 02D0     		beq	.L23
 487 0190 4FF00302 		mov	r2, #3
 488 0194 01E0     		b	.L24
 489              	.L23:
 490 0196 4FF00102 		mov	r2, #1
 491              	.L24:
 492 019a 1A70     		strb	r2, [r3, #0]
 493              	.L25:
 269:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 494              		.loc 1 269 0
 495 019c 44F20103 		movw	r3, #:lower16:1073758209
 496 01a0 C4F20003 		movt	r3, #:upper16:1073758209
 497 01a4 1B78     		ldrb	r3, [r3, #0]
 498 01a6 DBB2     		uxtb	r3, r3
 499 01a8 03F00103 		and	r3, r3, #1
 500 01ac DBB2     		uxtb	r3, r3
 501 01ae 002B     		cmp	r3, #0
 502 01b0 F4D1     		bne	.L25
 503 01b2 14E0     		b	.L26
 504              	.L22:
 270:.\Generated_Source\PSoC5/CyScBoostClk.c ****             }
 271:.\Generated_Source\PSoC5/CyScBoostClk.c ****             else
 272:.\Generated_Source\PSoC5/CyScBoostClk.c ****             {
 273:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CyScBoostClk_DIV_PTR, clkDivider);
 505              		.loc 1 274 0
 506 01b4 44F20013 		movw	r3, #:lower16:1073758464
 507 01b8 C4F20003 		movt	r3, #:upper16:1073758464
 508 01bc FA88     		ldrh	r2, [r7, #6]	@ movhi
 509 01be 1A80     		strh	r2, [r3, #0]	@ movhi
 275:.\Generated_Source\PSoC5/CyScBoostClk.c **** 				CyScBoostClk_CLKEN |= enabled;
 510              		.loc 1 275 0
 511 01c0 44F2A133 		movw	r3, #:lower16:1073759137
 512 01c4 C4F20003 		movt	r3, #:upper16:1073759137
 513 01c8 44F2A132 		movw	r2, #:lower16:1073759137
 514 01cc C4F20002 		movt	r2, #:upper16:1073759137
 515 01d0 1278     		ldrb	r2, [r2, #0]
 516 01d2 D1B2     		uxtb	r1, r2
 517 01d4 3A7B     		ldrb	r2, [r7, #12]
 518 01d6 41EA0202 		orr	r2, r1, r2
 519 01da D2B2     		uxtb	r2, r2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 15


 520 01dc 1A70     		strb	r2, [r3, #0]
 521              	.L26:
 276:.\Generated_Source\PSoC5/CyScBoostClk.c ****             }
 277:.\Generated_Source\PSoC5/CyScBoostClk.c ****         }
 278:.\Generated_Source\PSoC5/CyScBoostClk.c ****     }
 279:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
 522              		.loc 1 279 0
 523 01de 07F11007 		add	r7, r7, #16
 524 01e2 BD46     		mov	sp, r7
 525 01e4 80BD     		pop	{r7, pc}
 526              		.cfi_endproc
 527              	.LFE4:
 528              		.size	CyScBoostClk_SetDividerRegister, .-CyScBoostClk_SetDividerRegister
 529 01e6 00BF     		.section	.text.CyScBoostClk_GetDividerRegister,"ax",%progbits
 530              		.align	2
 531              		.global	CyScBoostClk_GetDividerRegister
 532              		.thumb
 533              		.thumb_func
 534              		.type	CyScBoostClk_GetDividerRegister, %function
 535              	CyScBoostClk_GetDividerRegister:
 536              	.LFB5:
 280:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 281:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 282:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_GetDividerRegister
 284:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 286:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 287:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 289:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 290:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 291:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 292:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 293:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 296:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/CyScBoostClk.c **** uint16 CyScBoostClk_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
 537              		.loc 1 298 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 1, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 542 0000 80B4     		push	{r7}
 543              	.LCFI13:
 544              		.cfi_def_cfa_offset 4
 545 0002 00AF     		add	r7, sp, #0
 546              		.cfi_offset 7, -4
 547              	.LCFI14:
 548              		.cfi_def_cfa_register 7
 299:.\Generated_Source\PSoC5/CyScBoostClk.c ****     return CY_GET_REG16(CyScBoostClk_DIV_PTR);
 549              		.loc 1 299 0
 550 0004 44F20013 		movw	r3, #:lower16:1073758464
 551 0008 C4F20003 		movt	r3, #:upper16:1073758464
 552 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 16


 553 000e 9BB2     		uxth	r3, r3
 300:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
 554              		.loc 1 300 0
 555 0010 1846     		mov	r0, r3
 556 0012 BD46     		mov	sp, r7
 557 0014 80BC     		pop	{r7}
 558 0016 7047     		bx	lr
 559              		.cfi_endproc
 560              	.LFE5:
 561              		.size	CyScBoostClk_GetDividerRegister, .-CyScBoostClk_GetDividerRegister
 562              		.section	.text.CyScBoostClk_SetModeRegister,"ax",%progbits
 563              		.align	2
 564              		.global	CyScBoostClk_SetModeRegister
 565              		.thumb
 566              		.thumb_func
 567              		.type	CyScBoostClk_SetModeRegister, %function
 568              	CyScBoostClk_SetModeRegister:
 569              	.LFB6:
 301:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 302:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 303:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_SetModeRegister
 305:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 307:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 308:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 313:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 314:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/CyScBoostClk.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/CyScBoostClk.c **** *                 value.
 319:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/CyScBoostClk.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/CyScBoostClk.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/CyScBoostClk.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/CyScBoostClk.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 328:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 329:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 330:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 331:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
 570              		.loc 1 333 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 8
 573              		@ frame_needed = 1, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 575 0000 80B4     		push	{r7}
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 17


 576              	.LCFI15:
 577              		.cfi_def_cfa_offset 4
 578 0002 83B0     		sub	sp, sp, #12
 579              	.LCFI16:
 580              		.cfi_def_cfa_offset 16
 581 0004 00AF     		add	r7, sp, #0
 582              		.cfi_offset 7, -4
 583              	.LCFI17:
 584              		.cfi_def_cfa_register 7
 585 0006 0346     		mov	r3, r0
 586 0008 FB71     		strb	r3, [r7, #7]
 334:.\Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_MOD_SRC |= modeBitMask & (uint8)CyScBoostClk_MODE_MASK;
 587              		.loc 1 334 0
 588 000a 44F20213 		movw	r3, #:lower16:1073758466
 589 000e C4F20003 		movt	r3, #:upper16:1073758466
 590 0012 44F20212 		movw	r2, #:lower16:1073758466
 591 0016 C4F20002 		movt	r2, #:upper16:1073758466
 592 001a 1278     		ldrb	r2, [r2, #0]
 593 001c D2B2     		uxtb	r2, r2
 594 001e 1146     		mov	r1, r2
 595 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 596 0022 D2B2     		uxtb	r2, r2
 597 0024 02F0F802 		and	r2, r2, #248
 598 0028 41EA0202 		orr	r2, r1, r2
 599 002c D2B2     		uxtb	r2, r2
 600 002e D2B2     		uxtb	r2, r2
 601 0030 1A70     		strb	r2, [r3, #0]
 335:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
 602              		.loc 1 335 0
 603 0032 07F10C07 		add	r7, r7, #12
 604 0036 BD46     		mov	sp, r7
 605 0038 80BC     		pop	{r7}
 606 003a 7047     		bx	lr
 607              		.cfi_endproc
 608              	.LFE6:
 609              		.size	CyScBoostClk_SetModeRegister, .-CyScBoostClk_SetModeRegister
 610              		.section	.text.CyScBoostClk_ClearModeRegister,"ax",%progbits
 611              		.align	2
 612              		.global	CyScBoostClk_ClearModeRegister
 613              		.thumb
 614              		.thumb_func
 615              		.type	CyScBoostClk_ClearModeRegister, %function
 616              	CyScBoostClk_ClearModeRegister:
 617              	.LFB7:
 336:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 337:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 338:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_ClearModeRegister
 340:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 342:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 343:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 348:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 18


 349:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/CyScBoostClk.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/CyScBoostClk.c **** *                 value.
 354:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/CyScBoostClk.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/CyScBoostClk.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/CyScBoostClk.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/CyScBoostClk.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 363:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 364:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 365:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 366:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
 618              		.loc 1 368 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 8
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623 0000 80B4     		push	{r7}
 624              	.LCFI18:
 625              		.cfi_def_cfa_offset 4
 626 0002 83B0     		sub	sp, sp, #12
 627              	.LCFI19:
 628              		.cfi_def_cfa_offset 16
 629 0004 00AF     		add	r7, sp, #0
 630              		.cfi_offset 7, -4
 631              	.LCFI20:
 632              		.cfi_def_cfa_register 7
 633 0006 0346     		mov	r3, r0
 634 0008 FB71     		strb	r3, [r7, #7]
 369:.\Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(CyScBoostClk_MODE_MASK));
 635              		.loc 1 369 0
 636 000a 44F20213 		movw	r3, #:lower16:1073758466
 637 000e C4F20003 		movt	r3, #:upper16:1073758466
 638 0012 44F20212 		movw	r2, #:lower16:1073758466
 639 0016 C4F20002 		movt	r2, #:upper16:1073758466
 640 001a 1278     		ldrb	r2, [r2, #0]
 641 001c D1B2     		uxtb	r1, r2
 642 001e FA79     		ldrb	r2, [r7, #7]
 643 0020 6FEA0202 		mvn	r2, r2
 644 0024 D2B2     		uxtb	r2, r2
 645 0026 42F00702 		orr	r2, r2, #7
 646 002a D2B2     		uxtb	r2, r2
 647 002c 01EA0202 		and	r2, r1, r2
 648 0030 D2B2     		uxtb	r2, r2
 649 0032 1A70     		strb	r2, [r3, #0]
 370:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
 650              		.loc 1 370 0
 651 0034 07F10C07 		add	r7, r7, #12
 652 0038 BD46     		mov	sp, r7
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 19


 653 003a 80BC     		pop	{r7}
 654 003c 7047     		bx	lr
 655              		.cfi_endproc
 656              	.LFE7:
 657              		.size	CyScBoostClk_ClearModeRegister, .-CyScBoostClk_ClearModeRegister
 658 003e 00BF     		.section	.text.CyScBoostClk_GetModeRegister,"ax",%progbits
 659              		.align	2
 660              		.global	CyScBoostClk_GetModeRegister
 661              		.thumb
 662              		.thumb_func
 663              		.type	CyScBoostClk_GetModeRegister, %function
 664              	CyScBoostClk_GetModeRegister:
 665              	.LFB8:
 371:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 372:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 373:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_GetModeRegister
 375:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 377:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 378:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 380:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 381:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 382:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 383:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 384:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 387:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/CyScBoostClk.c **** uint8 CyScBoostClk_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
 666              		.loc 1 389 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671 0000 80B4     		push	{r7}
 672              	.LCFI21:
 673              		.cfi_def_cfa_offset 4
 674 0002 00AF     		add	r7, sp, #0
 675              		.cfi_offset 7, -4
 676              	.LCFI22:
 677              		.cfi_def_cfa_register 7
 390:.\Generated_Source\PSoC5/CyScBoostClk.c ****     return CyScBoostClk_MOD_SRC & (uint8)(CyScBoostClk_MODE_MASK);
 678              		.loc 1 390 0
 679 0004 44F20213 		movw	r3, #:lower16:1073758466
 680 0008 C4F20003 		movt	r3, #:upper16:1073758466
 681 000c 1B78     		ldrb	r3, [r3, #0]
 682 000e DBB2     		uxtb	r3, r3
 683 0010 03F0F803 		and	r3, r3, #248
 391:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
 684              		.loc 1 391 0
 685 0014 1846     		mov	r0, r3
 686 0016 BD46     		mov	sp, r7
 687 0018 80BC     		pop	{r7}
 688 001a 7047     		bx	lr
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 20


 689              		.cfi_endproc
 690              	.LFE8:
 691              		.size	CyScBoostClk_GetModeRegister, .-CyScBoostClk_GetModeRegister
 692              		.section	.text.CyScBoostClk_SetSourceRegister,"ax",%progbits
 693              		.align	2
 694              		.global	CyScBoostClk_SetSourceRegister
 695              		.thumb
 696              		.thumb_func
 697              		.type	CyScBoostClk_SetSourceRegister, %function
 698              	CyScBoostClk_SetSourceRegister:
 699              	.LFB9:
 392:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 393:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 394:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_SetSourceRegister
 396:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 398:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 399:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 402:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 403:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 415:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 416:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 417:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 418:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
 700              		.loc 1 420 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 16
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704 0000 80B5     		push	{r7, lr}
 705              	.LCFI23:
 706              		.cfi_def_cfa_offset 8
 707 0002 84B0     		sub	sp, sp, #16
 708              	.LCFI24:
 709              		.cfi_def_cfa_offset 24
 710 0004 00AF     		add	r7, sp, #0
 711              		.cfi_offset 14, -4
 712              		.cfi_offset 7, -8
 713              	.LCFI25:
 714              		.cfi_def_cfa_register 7
 715 0006 0346     		mov	r3, r0
 716 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 21


 421:.\Generated_Source\PSoC5/CyScBoostClk.c ****     uint16 currDiv = CyScBoostClk_GetDividerRegister();
 717              		.loc 1 421 0
 718 000a FFF7FEFF 		bl	CyScBoostClk_GetDividerRegister
 719 000e 0346     		mov	r3, r0
 720 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 422:.\Generated_Source\PSoC5/CyScBoostClk.c ****     uint8 oldSrc = CyScBoostClk_GetSourceRegister();
 721              		.loc 1 422 0
 722 0012 FFF7FEFF 		bl	CyScBoostClk_GetSourceRegister
 723 0016 0346     		mov	r3, r0
 724 0018 FB73     		strb	r3, [r7, #15]
 423:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 424:.\Generated_Source\PSoC5/CyScBoostClk.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 725              		.loc 1 424 0
 726 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 727 001c 002B     		cmp	r3, #0
 728 001e 29D0     		beq	.L36
 729 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 730 0022 002B     		cmp	r3, #0
 731 0024 26D1     		bne	.L36
 732 0026 BB89     		ldrh	r3, [r7, #12]
 733 0028 002B     		cmp	r3, #0
 734 002a 23D1     		bne	.L36
 425:.\Generated_Source\PSoC5/CyScBoostClk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/CyScBoostClk.c ****     {
 427:.\Generated_Source\PSoC5/CyScBoostClk.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/CyScBoostClk.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC |= CYCLK_SSS;
 735              		.loc 1 429 0
 736 002c 44F20213 		movw	r3, #:lower16:1073758466
 737 0030 C4F20003 		movt	r3, #:upper16:1073758466
 738 0034 44F20212 		movw	r2, #:lower16:1073758466
 739 0038 C4F20002 		movt	r2, #:upper16:1073758466
 740 003c 1278     		ldrb	r2, [r2, #0]
 741 003e D2B2     		uxtb	r2, r2
 742 0040 42F04002 		orr	r2, r2, #64
 743 0044 D2B2     		uxtb	r2, r2
 744 0046 1A70     		strb	r2, [r3, #0]
 430:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC =
 745              		.loc 1 430 0
 746 0048 44F20213 		movw	r3, #:lower16:1073758466
 747 004c C4F20003 		movt	r3, #:upper16:1073758466
 431:.\Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 748              		.loc 1 431 0
 749 0050 44F20212 		movw	r2, #:lower16:1073758466
 750 0054 C4F20002 		movt	r2, #:upper16:1073758466
 751 0058 1278     		ldrb	r2, [r2, #0]
 752 005a D2B2     		uxtb	r2, r2
 753              		.loc 1 430 0
 754 005c D2B2     		uxtb	r2, r2
 755 005e 02F0F802 		and	r2, r2, #248
 756 0062 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 757 0064 1146     		mov	r1, r2
 758 0066 0246     		mov	r2, r0
 759 0068 41EA0202 		orr	r2, r1, r2
 760 006c D2B2     		uxtb	r2, r2
 761 006e D2B2     		uxtb	r2, r2
 762 0070 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 22


 763              		.loc 1 424 0
 764 0072 40E0     		b	.L39
 765              	.L36:
 432:.\Generated_Source\PSoC5/CyScBoostClk.c ****     }
 433:.\Generated_Source\PSoC5/CyScBoostClk.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 766              		.loc 1 433 0
 767 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 768 0076 002B     		cmp	r3, #0
 769 0078 28D1     		bne	.L38
 770 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 771 007c 002B     		cmp	r3, #0
 772 007e 25D0     		beq	.L38
 773 0080 BB89     		ldrh	r3, [r7, #12]
 774 0082 002B     		cmp	r3, #0
 775 0084 22D1     		bne	.L38
 434:.\Generated_Source\PSoC5/CyScBoostClk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/CyScBoostClk.c ****     {
 436:.\Generated_Source\PSoC5/CyScBoostClk.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/CyScBoostClk.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC =
 776              		.loc 1 438 0
 777 0086 44F20213 		movw	r3, #:lower16:1073758466
 778 008a C4F20003 		movt	r3, #:upper16:1073758466
 439:.\Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 779              		.loc 1 439 0
 780 008e 44F20212 		movw	r2, #:lower16:1073758466
 781 0092 C4F20002 		movt	r2, #:upper16:1073758466
 782 0096 1278     		ldrb	r2, [r2, #0]
 783 0098 D2B2     		uxtb	r2, r2
 784              		.loc 1 438 0
 785 009a D2B2     		uxtb	r2, r2
 786 009c 02F0F802 		and	r2, r2, #248
 787 00a0 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 788 00a2 1146     		mov	r1, r2
 789 00a4 0246     		mov	r2, r0
 790 00a6 41EA0202 		orr	r2, r1, r2
 791 00aa D2B2     		uxtb	r2, r2
 792 00ac D2B2     		uxtb	r2, r2
 793 00ae 1A70     		strb	r2, [r3, #0]
 440:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 794              		.loc 1 440 0
 795 00b0 44F20213 		movw	r3, #:lower16:1073758466
 796 00b4 C4F20003 		movt	r3, #:upper16:1073758466
 797 00b8 44F20212 		movw	r2, #:lower16:1073758466
 798 00bc C4F20002 		movt	r2, #:upper16:1073758466
 799 00c0 1278     		ldrb	r2, [r2, #0]
 800 00c2 D2B2     		uxtb	r2, r2
 801 00c4 02F0BF02 		and	r2, r2, #191
 802 00c8 1A70     		strb	r2, [r3, #0]
 803              		.loc 1 433 0
 804 00ca 14E0     		b	.L39
 805              	.L38:
 441:.\Generated_Source\PSoC5/CyScBoostClk.c ****     }
 442:.\Generated_Source\PSoC5/CyScBoostClk.c ****     else
 443:.\Generated_Source\PSoC5/CyScBoostClk.c ****     {
 444:.\Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC =
 806              		.loc 1 444 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 23


 807 00cc 44F20213 		movw	r3, #:lower16:1073758466
 808 00d0 C4F20003 		movt	r3, #:upper16:1073758466
 445:.\Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 809              		.loc 1 445 0
 810 00d4 44F20212 		movw	r2, #:lower16:1073758466
 811 00d8 C4F20002 		movt	r2, #:upper16:1073758466
 812 00dc 1278     		ldrb	r2, [r2, #0]
 813 00de D2B2     		uxtb	r2, r2
 814              		.loc 1 444 0
 815 00e0 D2B2     		uxtb	r2, r2
 816 00e2 02F0F802 		and	r2, r2, #248
 817 00e6 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 818 00e8 1146     		mov	r1, r2
 819 00ea 0246     		mov	r2, r0
 820 00ec 41EA0202 		orr	r2, r1, r2
 821 00f0 D2B2     		uxtb	r2, r2
 822 00f2 D2B2     		uxtb	r2, r2
 823 00f4 1A70     		strb	r2, [r3, #0]
 824              	.L39:
 446:.\Generated_Source\PSoC5/CyScBoostClk.c ****     }
 447:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
 825              		.loc 1 447 0
 826 00f6 07F11007 		add	r7, r7, #16
 827 00fa BD46     		mov	sp, r7
 828 00fc 80BD     		pop	{r7, pc}
 829              		.cfi_endproc
 830              	.LFE9:
 831              		.size	CyScBoostClk_SetSourceRegister, .-CyScBoostClk_SetSourceRegister
 832 00fe 00BF     		.section	.text.CyScBoostClk_GetSourceRegister,"ax",%progbits
 833              		.align	2
 834              		.global	CyScBoostClk_GetSourceRegister
 835              		.thumb
 836              		.thumb_func
 837              		.type	CyScBoostClk_GetSourceRegister, %function
 838              	CyScBoostClk_GetSourceRegister:
 839              	.LFB10:
 448:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 449:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 450:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_GetSourceRegister
 452:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 454:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 455:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 457:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 458:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 459:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 460:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 461:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 463:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/CyScBoostClk.c **** uint8 CyScBoostClk_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
 840              		.loc 1 465 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 24


 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 845 0000 80B4     		push	{r7}
 846              	.LCFI26:
 847              		.cfi_def_cfa_offset 4
 848 0002 00AF     		add	r7, sp, #0
 849              		.cfi_offset 7, -4
 850              	.LCFI27:
 851              		.cfi_def_cfa_register 7
 466:.\Generated_Source\PSoC5/CyScBoostClk.c ****     return CyScBoostClk_MOD_SRC & CyScBoostClk_SRC_SEL_MSK;
 852              		.loc 1 466 0
 853 0004 44F20213 		movw	r3, #:lower16:1073758466
 854 0008 C4F20003 		movt	r3, #:upper16:1073758466
 855 000c 1B78     		ldrb	r3, [r3, #0]
 856 000e DBB2     		uxtb	r3, r3
 857 0010 03F00703 		and	r3, r3, #7
 467:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
 858              		.loc 1 467 0
 859 0014 1846     		mov	r0, r3
 860 0016 BD46     		mov	sp, r7
 861 0018 80BC     		pop	{r7}
 862 001a 7047     		bx	lr
 863              		.cfi_endproc
 864              	.LFE10:
 865              		.size	CyScBoostClk_GetSourceRegister, .-CyScBoostClk_GetSourceRegister
 866              		.section	.text.CyScBoostClk_SetPhaseRegister,"ax",%progbits
 867              		.align	2
 868              		.global	CyScBoostClk_SetPhaseRegister
 869              		.thumb
 870              		.thumb_func
 871              		.type	CyScBoostClk_SetPhaseRegister, %function
 872              	CyScBoostClk_SetPhaseRegister:
 873              	.LFB11:
 468:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 469:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 470:.\Generated_Source\PSoC5/CyScBoostClk.c **** #if defined(CyScBoostClk__CFG3)
 471:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 472:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 473:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_SetPhaseRegister
 475:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 476:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 477:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 478:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Sets the phase delay of the analog clock. This function is only available
 479:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  for analog clocks. The clock must be disabled before changing the phase
 480:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  delay to avoid glitches.
 481:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 482:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 483:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  clkPhase: Amount to delay the phase of the clock, in 1.0ns increments.
 484:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   clkPhase must be from 1 to 11 inclusive. Other values, including 0,
 485:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   disable the clock. clkPhase = 1 produces a 0ns delay and clkPhase = 11 
 486:.\Generated_Source\PSoC5/CyScBoostClk.c **** *   produces a 10ns delay.
 487:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 488:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 489:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 490:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 491:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 25


 492:.\Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_SetPhaseRegister(uint8 clkPhase) 
 493:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
 874              		.loc 1 493 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 8
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878              		@ link register save eliminated.
 879 0000 80B4     		push	{r7}
 880              	.LCFI28:
 881              		.cfi_def_cfa_offset 4
 882 0002 83B0     		sub	sp, sp, #12
 883              	.LCFI29:
 884              		.cfi_def_cfa_offset 16
 885 0004 00AF     		add	r7, sp, #0
 886              		.cfi_offset 7, -4
 887              	.LCFI30:
 888              		.cfi_def_cfa_register 7
 889 0006 0346     		mov	r3, r0
 890 0008 FB71     		strb	r3, [r7, #7]
 494:.\Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_PHASE = clkPhase & CyScBoostClk_PHASE_MASK;
 891              		.loc 1 494 0
 892 000a 44F20313 		movw	r3, #:lower16:1073758467
 893 000e C4F20003 		movt	r3, #:upper16:1073758467
 894 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 895 0014 02F00F02 		and	r2, r2, #15
 896 0018 1A70     		strb	r2, [r3, #0]
 495:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
 897              		.loc 1 495 0
 898 001a 07F10C07 		add	r7, r7, #12
 899 001e BD46     		mov	sp, r7
 900 0020 80BC     		pop	{r7}
 901 0022 7047     		bx	lr
 902              		.cfi_endproc
 903              	.LFE11:
 904              		.size	CyScBoostClk_SetPhaseRegister, .-CyScBoostClk_SetPhaseRegister
 905              		.section	.text.CyScBoostClk_GetPhaseRegister,"ax",%progbits
 906              		.align	2
 907              		.global	CyScBoostClk_GetPhaseRegister
 908              		.thumb
 909              		.thumb_func
 910              		.type	CyScBoostClk_GetPhaseRegister, %function
 911              	CyScBoostClk_GetPhaseRegister:
 912              	.LFB12:
 496:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 497:.\Generated_Source\PSoC5/CyScBoostClk.c **** 
 498:.\Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 499:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_GetPhase
 500:.\Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 501:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 502:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 503:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Gets the phase delay of the analog clock. This function is only available
 504:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  for analog clocks.
 505:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 506:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 507:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 508:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 509:.\Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 26


 510:.\Generated_Source\PSoC5/CyScBoostClk.c **** *  Phase of the analog clock. See SetPhaseRegister for details.
 511:.\Generated_Source\PSoC5/CyScBoostClk.c **** *
 512:.\Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC5/CyScBoostClk.c **** uint8 CyScBoostClk_GetPhaseRegister(void) 
 514:.\Generated_Source\PSoC5/CyScBoostClk.c **** {
 913              		.loc 1 514 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917              		@ link register save eliminated.
 918 0000 80B4     		push	{r7}
 919              	.LCFI31:
 920              		.cfi_def_cfa_offset 4
 921 0002 00AF     		add	r7, sp, #0
 922              		.cfi_offset 7, -4
 923              	.LCFI32:
 924              		.cfi_def_cfa_register 7
 515:.\Generated_Source\PSoC5/CyScBoostClk.c ****     return CyScBoostClk_PHASE & CyScBoostClk_PHASE_MASK;
 925              		.loc 1 515 0
 926 0004 44F20313 		movw	r3, #:lower16:1073758467
 927 0008 C4F20003 		movt	r3, #:upper16:1073758467
 928 000c 1B78     		ldrb	r3, [r3, #0]
 929 000e DBB2     		uxtb	r3, r3
 930 0010 03F00F03 		and	r3, r3, #15
 516:.\Generated_Source\PSoC5/CyScBoostClk.c **** }
 931              		.loc 1 516 0
 932 0014 1846     		mov	r0, r3
 933 0016 BD46     		mov	sp, r7
 934 0018 80BC     		pop	{r7}
 935 001a 7047     		bx	lr
 936              		.cfi_endproc
 937              	.LFE12:
 938              		.size	CyScBoostClk_GetPhaseRegister, .-CyScBoostClk_GetPhaseRegister
 939              		.text
 940              	.Letext0:
 941              		.section	.debug_loc,"",%progbits
 942              	.Ldebug_loc0:
 943              	.LLST0:
 944 0000 00000000 		.4byte	.LFB0
 945 0004 02000000 		.4byte	.LCFI0
 946 0008 0100     		.2byte	0x1
 947 000a 5D       		.byte	0x5d
 948 000b 02000000 		.4byte	.LCFI0
 949 000f 04000000 		.4byte	.LCFI1
 950 0013 0200     		.2byte	0x2
 951 0015 7D       		.byte	0x7d
 952 0016 04       		.sleb128 4
 953 0017 04000000 		.4byte	.LCFI1
 954 001b 42000000 		.4byte	.LFE0
 955 001f 0200     		.2byte	0x2
 956 0021 77       		.byte	0x77
 957 0022 04       		.sleb128 4
 958 0023 00000000 		.4byte	0x0
 959 0027 00000000 		.4byte	0x0
 960              	.LLST1:
 961 002b 00000000 		.4byte	.LFB1
 962 002f 02000000 		.4byte	.LCFI2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 27


 963 0033 0100     		.2byte	0x1
 964 0035 5D       		.byte	0x5d
 965 0036 02000000 		.4byte	.LCFI2
 966 003a 04000000 		.4byte	.LCFI3
 967 003e 0200     		.2byte	0x2
 968 0040 7D       		.byte	0x7d
 969 0041 04       		.sleb128 4
 970 0042 04000000 		.4byte	.LCFI3
 971 0046 3E000000 		.4byte	.LFE1
 972 004a 0200     		.2byte	0x2
 973 004c 77       		.byte	0x77
 974 004d 04       		.sleb128 4
 975 004e 00000000 		.4byte	0x0
 976 0052 00000000 		.4byte	0x0
 977              	.LLST2:
 978 0056 00000000 		.4byte	.LFB2
 979 005a 02000000 		.4byte	.LCFI4
 980 005e 0100     		.2byte	0x1
 981 0060 5D       		.byte	0x5d
 982 0061 02000000 		.4byte	.LCFI4
 983 0065 04000000 		.4byte	.LCFI5
 984 0069 0200     		.2byte	0x2
 985 006b 7D       		.byte	0x7d
 986 006c 04       		.sleb128 4
 987 006d 04000000 		.4byte	.LCFI5
 988 0071 06000000 		.4byte	.LCFI6
 989 0075 0200     		.2byte	0x2
 990 0077 7D       		.byte	0x7d
 991 0078 10       		.sleb128 16
 992 0079 06000000 		.4byte	.LCFI6
 993 007d F4000000 		.4byte	.LFE2
 994 0081 0200     		.2byte	0x2
 995 0083 77       		.byte	0x77
 996 0084 10       		.sleb128 16
 997 0085 00000000 		.4byte	0x0
 998 0089 00000000 		.4byte	0x0
 999              	.LLST3:
 1000 008d 00000000 		.4byte	.LFB3
 1001 0091 02000000 		.4byte	.LCFI7
 1002 0095 0100     		.2byte	0x1
 1003 0097 5D       		.byte	0x5d
 1004 0098 02000000 		.4byte	.LCFI7
 1005 009c 04000000 		.4byte	.LCFI8
 1006 00a0 0200     		.2byte	0x2
 1007 00a2 7D       		.byte	0x7d
 1008 00a3 04       		.sleb128 4
 1009 00a4 04000000 		.4byte	.LCFI8
 1010 00a8 06000000 		.4byte	.LCFI9
 1011 00ac 0200     		.2byte	0x2
 1012 00ae 7D       		.byte	0x7d
 1013 00af 10       		.sleb128 16
 1014 00b0 06000000 		.4byte	.LCFI9
 1015 00b4 52000000 		.4byte	.LFE3
 1016 00b8 0200     		.2byte	0x2
 1017 00ba 77       		.byte	0x77
 1018 00bb 10       		.sleb128 16
 1019 00bc 00000000 		.4byte	0x0
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 28


 1020 00c0 00000000 		.4byte	0x0
 1021              	.LLST4:
 1022 00c4 00000000 		.4byte	.LFB4
 1023 00c8 02000000 		.4byte	.LCFI10
 1024 00cc 0100     		.2byte	0x1
 1025 00ce 5D       		.byte	0x5d
 1026 00cf 02000000 		.4byte	.LCFI10
 1027 00d3 04000000 		.4byte	.LCFI11
 1028 00d7 0200     		.2byte	0x2
 1029 00d9 7D       		.byte	0x7d
 1030 00da 08       		.sleb128 8
 1031 00db 04000000 		.4byte	.LCFI11
 1032 00df 06000000 		.4byte	.LCFI12
 1033 00e3 0200     		.2byte	0x2
 1034 00e5 7D       		.byte	0x7d
 1035 00e6 18       		.sleb128 24
 1036 00e7 06000000 		.4byte	.LCFI12
 1037 00eb E6010000 		.4byte	.LFE4
 1038 00ef 0200     		.2byte	0x2
 1039 00f1 77       		.byte	0x77
 1040 00f2 18       		.sleb128 24
 1041 00f3 00000000 		.4byte	0x0
 1042 00f7 00000000 		.4byte	0x0
 1043              	.LLST5:
 1044 00fb 00000000 		.4byte	.LFB5
 1045 00ff 02000000 		.4byte	.LCFI13
 1046 0103 0100     		.2byte	0x1
 1047 0105 5D       		.byte	0x5d
 1048 0106 02000000 		.4byte	.LCFI13
 1049 010a 04000000 		.4byte	.LCFI14
 1050 010e 0200     		.2byte	0x2
 1051 0110 7D       		.byte	0x7d
 1052 0111 04       		.sleb128 4
 1053 0112 04000000 		.4byte	.LCFI14
 1054 0116 18000000 		.4byte	.LFE5
 1055 011a 0200     		.2byte	0x2
 1056 011c 77       		.byte	0x77
 1057 011d 04       		.sleb128 4
 1058 011e 00000000 		.4byte	0x0
 1059 0122 00000000 		.4byte	0x0
 1060              	.LLST6:
 1061 0126 00000000 		.4byte	.LFB6
 1062 012a 02000000 		.4byte	.LCFI15
 1063 012e 0100     		.2byte	0x1
 1064 0130 5D       		.byte	0x5d
 1065 0131 02000000 		.4byte	.LCFI15
 1066 0135 04000000 		.4byte	.LCFI16
 1067 0139 0200     		.2byte	0x2
 1068 013b 7D       		.byte	0x7d
 1069 013c 04       		.sleb128 4
 1070 013d 04000000 		.4byte	.LCFI16
 1071 0141 06000000 		.4byte	.LCFI17
 1072 0145 0200     		.2byte	0x2
 1073 0147 7D       		.byte	0x7d
 1074 0148 10       		.sleb128 16
 1075 0149 06000000 		.4byte	.LCFI17
 1076 014d 3C000000 		.4byte	.LFE6
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 29


 1077 0151 0200     		.2byte	0x2
 1078 0153 77       		.byte	0x77
 1079 0154 10       		.sleb128 16
 1080 0155 00000000 		.4byte	0x0
 1081 0159 00000000 		.4byte	0x0
 1082              	.LLST7:
 1083 015d 00000000 		.4byte	.LFB7
 1084 0161 02000000 		.4byte	.LCFI18
 1085 0165 0100     		.2byte	0x1
 1086 0167 5D       		.byte	0x5d
 1087 0168 02000000 		.4byte	.LCFI18
 1088 016c 04000000 		.4byte	.LCFI19
 1089 0170 0200     		.2byte	0x2
 1090 0172 7D       		.byte	0x7d
 1091 0173 04       		.sleb128 4
 1092 0174 04000000 		.4byte	.LCFI19
 1093 0178 06000000 		.4byte	.LCFI20
 1094 017c 0200     		.2byte	0x2
 1095 017e 7D       		.byte	0x7d
 1096 017f 10       		.sleb128 16
 1097 0180 06000000 		.4byte	.LCFI20
 1098 0184 3E000000 		.4byte	.LFE7
 1099 0188 0200     		.2byte	0x2
 1100 018a 77       		.byte	0x77
 1101 018b 10       		.sleb128 16
 1102 018c 00000000 		.4byte	0x0
 1103 0190 00000000 		.4byte	0x0
 1104              	.LLST8:
 1105 0194 00000000 		.4byte	.LFB8
 1106 0198 02000000 		.4byte	.LCFI21
 1107 019c 0100     		.2byte	0x1
 1108 019e 5D       		.byte	0x5d
 1109 019f 02000000 		.4byte	.LCFI21
 1110 01a3 04000000 		.4byte	.LCFI22
 1111 01a7 0200     		.2byte	0x2
 1112 01a9 7D       		.byte	0x7d
 1113 01aa 04       		.sleb128 4
 1114 01ab 04000000 		.4byte	.LCFI22
 1115 01af 1C000000 		.4byte	.LFE8
 1116 01b3 0200     		.2byte	0x2
 1117 01b5 77       		.byte	0x77
 1118 01b6 04       		.sleb128 4
 1119 01b7 00000000 		.4byte	0x0
 1120 01bb 00000000 		.4byte	0x0
 1121              	.LLST9:
 1122 01bf 00000000 		.4byte	.LFB9
 1123 01c3 02000000 		.4byte	.LCFI23
 1124 01c7 0100     		.2byte	0x1
 1125 01c9 5D       		.byte	0x5d
 1126 01ca 02000000 		.4byte	.LCFI23
 1127 01ce 04000000 		.4byte	.LCFI24
 1128 01d2 0200     		.2byte	0x2
 1129 01d4 7D       		.byte	0x7d
 1130 01d5 08       		.sleb128 8
 1131 01d6 04000000 		.4byte	.LCFI24
 1132 01da 06000000 		.4byte	.LCFI25
 1133 01de 0200     		.2byte	0x2
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 30


 1134 01e0 7D       		.byte	0x7d
 1135 01e1 18       		.sleb128 24
 1136 01e2 06000000 		.4byte	.LCFI25
 1137 01e6 FE000000 		.4byte	.LFE9
 1138 01ea 0200     		.2byte	0x2
 1139 01ec 77       		.byte	0x77
 1140 01ed 18       		.sleb128 24
 1141 01ee 00000000 		.4byte	0x0
 1142 01f2 00000000 		.4byte	0x0
 1143              	.LLST10:
 1144 01f6 00000000 		.4byte	.LFB10
 1145 01fa 02000000 		.4byte	.LCFI26
 1146 01fe 0100     		.2byte	0x1
 1147 0200 5D       		.byte	0x5d
 1148 0201 02000000 		.4byte	.LCFI26
 1149 0205 04000000 		.4byte	.LCFI27
 1150 0209 0200     		.2byte	0x2
 1151 020b 7D       		.byte	0x7d
 1152 020c 04       		.sleb128 4
 1153 020d 04000000 		.4byte	.LCFI27
 1154 0211 1C000000 		.4byte	.LFE10
 1155 0215 0200     		.2byte	0x2
 1156 0217 77       		.byte	0x77
 1157 0218 04       		.sleb128 4
 1158 0219 00000000 		.4byte	0x0
 1159 021d 00000000 		.4byte	0x0
 1160              	.LLST11:
 1161 0221 00000000 		.4byte	.LFB11
 1162 0225 02000000 		.4byte	.LCFI28
 1163 0229 0100     		.2byte	0x1
 1164 022b 5D       		.byte	0x5d
 1165 022c 02000000 		.4byte	.LCFI28
 1166 0230 04000000 		.4byte	.LCFI29
 1167 0234 0200     		.2byte	0x2
 1168 0236 7D       		.byte	0x7d
 1169 0237 04       		.sleb128 4
 1170 0238 04000000 		.4byte	.LCFI29
 1171 023c 06000000 		.4byte	.LCFI30
 1172 0240 0200     		.2byte	0x2
 1173 0242 7D       		.byte	0x7d
 1174 0243 10       		.sleb128 16
 1175 0244 06000000 		.4byte	.LCFI30
 1176 0248 24000000 		.4byte	.LFE11
 1177 024c 0200     		.2byte	0x2
 1178 024e 77       		.byte	0x77
 1179 024f 10       		.sleb128 16
 1180 0250 00000000 		.4byte	0x0
 1181 0254 00000000 		.4byte	0x0
 1182              	.LLST12:
 1183 0258 00000000 		.4byte	.LFB12
 1184 025c 02000000 		.4byte	.LCFI31
 1185 0260 0100     		.2byte	0x1
 1186 0262 5D       		.byte	0x5d
 1187 0263 02000000 		.4byte	.LCFI31
 1188 0267 04000000 		.4byte	.LCFI32
 1189 026b 0200     		.2byte	0x2
 1190 026d 7D       		.byte	0x7d
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 31


 1191 026e 04       		.sleb128 4
 1192 026f 04000000 		.4byte	.LCFI32
 1193 0273 1C000000 		.4byte	.LFE12
 1194 0277 0200     		.2byte	0x2
 1195 0279 77       		.byte	0x77
 1196 027a 04       		.sleb128 4
 1197 027b 00000000 		.4byte	0x0
 1198 027f 00000000 		.4byte	0x0
 1199              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 1200              		.section	.debug_info
 1201 0000 A9020000 		.4byte	0x2a9
 1202 0004 0200     		.2byte	0x2
 1203 0006 00000000 		.4byte	.Ldebug_abbrev0
 1204 000a 04       		.byte	0x4
 1205 000b 01       		.uleb128 0x1
 1206 000c EC010000 		.4byte	.LASF38
 1207 0010 01       		.byte	0x1
 1208 0011 15020000 		.4byte	.LASF39
 1209 0015 54020000 		.4byte	.LASF40
 1210 0019 00000000 		.4byte	0x0
 1211 001d 00000000 		.4byte	0x0
 1212 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 1213 0025 00000000 		.4byte	.Ldebug_line0
 1214 0029 02       		.uleb128 0x2
 1215 002a 01       		.byte	0x1
 1216 002b 06       		.byte	0x6
 1217 002c E5020000 		.4byte	.LASF0
 1218 0030 02       		.uleb128 0x2
 1219 0031 01       		.byte	0x1
 1220 0032 08       		.byte	0x8
 1221 0033 CA000000 		.4byte	.LASF1
 1222 0037 02       		.uleb128 0x2
 1223 0038 02       		.byte	0x2
 1224 0039 05       		.byte	0x5
 1225 003a 05020000 		.4byte	.LASF2
 1226 003e 02       		.uleb128 0x2
 1227 003f 02       		.byte	0x2
 1228 0040 07       		.byte	0x7
 1229 0041 12010000 		.4byte	.LASF3
 1230 0045 02       		.uleb128 0x2
 1231 0046 04       		.byte	0x4
 1232 0047 05       		.byte	0x5
 1233 0048 C9020000 		.4byte	.LASF4
 1234 004c 02       		.uleb128 0x2
 1235 004d 04       		.byte	0x4
 1236 004e 07       		.byte	0x7
 1237 004f 00010000 		.4byte	.LASF5
 1238 0053 02       		.uleb128 0x2
 1239 0054 08       		.byte	0x8
 1240 0055 05       		.byte	0x5
 1241 0056 00000000 		.4byte	.LASF6
 1242 005a 02       		.uleb128 0x2
 1243 005b 08       		.byte	0x8
 1244 005c 07       		.byte	0x7
 1245 005d 8C010000 		.4byte	.LASF7
 1246 0061 03       		.uleb128 0x3
 1247 0062 04       		.byte	0x4
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 32


 1248 0063 05       		.byte	0x5
 1249 0064 696E7400 		.ascii	"int\000"
 1250 0068 02       		.uleb128 0x2
 1251 0069 04       		.byte	0x4
 1252 006a 07       		.byte	0x7
 1253 006b 77010000 		.4byte	.LASF8
 1254 006f 04       		.uleb128 0x4
 1255 0070 0F020000 		.4byte	.LASF9
 1256 0074 02       		.byte	0x2
 1257 0075 4C       		.byte	0x4c
 1258 0076 30000000 		.4byte	0x30
 1259 007a 04       		.uleb128 0x4
 1260 007b 5D010000 		.4byte	.LASF10
 1261 007f 02       		.byte	0x2
 1262 0080 4D       		.byte	0x4d
 1263 0081 3E000000 		.4byte	0x3e
 1264 0085 02       		.uleb128 0x2
 1265 0086 04       		.byte	0x4
 1266 0087 04       		.byte	0x4
 1267 0088 A7000000 		.4byte	.LASF11
 1268 008c 02       		.uleb128 0x2
 1269 008d 08       		.byte	0x8
 1270 008e 04       		.byte	0x4
 1271 008f 4E010000 		.4byte	.LASF12
 1272 0093 02       		.uleb128 0x2
 1273 0094 01       		.byte	0x1
 1274 0095 08       		.byte	0x8
 1275 0096 F8010000 		.4byte	.LASF13
 1276 009a 05       		.uleb128 0x5
 1277 009b 01       		.byte	0x1
 1278 009c 64010000 		.4byte	.LASF14
 1279 00a0 01       		.byte	0x1
 1280 00a1 2D       		.byte	0x2d
 1281 00a2 01       		.byte	0x1
 1282 00a3 00000000 		.4byte	.LFB0
 1283 00a7 42000000 		.4byte	.LFE0
 1284 00ab 00000000 		.4byte	.LLST0
 1285 00af 05       		.uleb128 0x5
 1286 00b0 01       		.byte	0x1
 1287 00b1 31000000 		.4byte	.LASF15
 1288 00b5 01       		.byte	0x1
 1289 00b6 47       		.byte	0x47
 1290 00b7 01       		.byte	0x1
 1291 00b8 00000000 		.4byte	.LFB1
 1292 00bc 3E000000 		.4byte	.LFE1
 1293 00c0 2B000000 		.4byte	.LLST1
 1294 00c4 06       		.uleb128 0x6
 1295 00c5 01       		.byte	0x1
 1296 00c6 3D020000 		.4byte	.LASF16
 1297 00ca 01       		.byte	0x1
 1298 00cb 64       		.byte	0x64
 1299 00cc 01       		.byte	0x1
 1300 00cd 00000000 		.4byte	.LFB2
 1301 00d1 F4000000 		.4byte	.LFE2
 1302 00d5 56000000 		.4byte	.LLST2
 1303 00d9 F6000000 		.4byte	0xf6
 1304 00dd 07       		.uleb128 0x7
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 33


 1305 00de 1C000000 		.4byte	.LBB2
 1306 00e2 EA000000 		.4byte	.LBE2
 1307 00e6 08       		.uleb128 0x8
 1308 00e7 7C000000 		.4byte	.LASF22
 1309 00eb 01       		.byte	0x1
 1310 00ec 69       		.byte	0x69
 1311 00ed 7A000000 		.4byte	0x7a
 1312 00f1 02       		.byte	0x2
 1313 00f2 91       		.byte	0x91
 1314 00f3 76       		.sleb128 -10
 1315 00f4 00       		.byte	0x0
 1316 00f5 00       		.byte	0x0
 1317 00f6 06       		.uleb128 0x6
 1318 00f7 01       		.byte	0x1
 1319 00f8 62000000 		.4byte	.LASF17
 1320 00fc 01       		.byte	0x1
 1321 00fd 9D       		.byte	0x9d
 1322 00fe 01       		.byte	0x1
 1323 00ff 00000000 		.4byte	.LFB3
 1324 0103 52000000 		.4byte	.LFE3
 1325 0107 8D000000 		.4byte	.LLST3
 1326 010b 1E010000 		.4byte	0x11e
 1327 010f 09       		.uleb128 0x9
 1328 0110 2B000000 		.4byte	.LASF19
 1329 0114 01       		.byte	0x1
 1330 0115 9D       		.byte	0x9d
 1331 0116 6F000000 		.4byte	0x6f
 1332 011a 02       		.byte	0x2
 1333 011b 91       		.byte	0x91
 1334 011c 77       		.sleb128 -9
 1335 011d 00       		.byte	0x0
 1336 011e 06       		.uleb128 0x6
 1337 011f 01       		.byte	0x1
 1338 0120 87000000 		.4byte	.LASF18
 1339 0124 01       		.byte	0x1
 1340 0125 C1       		.byte	0xc1
 1341 0126 01       		.byte	0x1
 1342 0127 00000000 		.4byte	.LFB4
 1343 012b E6010000 		.4byte	.LFE4
 1344 012f C4000000 		.4byte	.LLST4
 1345 0133 7E010000 		.4byte	0x17e
 1346 0137 09       		.uleb128 0x9
 1347 0138 43010000 		.4byte	.LASF20
 1348 013c 01       		.byte	0x1
 1349 013d C1       		.byte	0xc1
 1350 013e 7A000000 		.4byte	0x7a
 1351 0142 02       		.byte	0x2
 1352 0143 91       		.byte	0x91
 1353 0144 6E       		.sleb128 -18
 1354 0145 09       		.uleb128 0x9
 1355 0146 55010000 		.4byte	.LASF21
 1356 014a 01       		.byte	0x1
 1357 014b C1       		.byte	0xc1
 1358 014c 6F000000 		.4byte	0x6f
 1359 0150 02       		.byte	0x2
 1360 0151 91       		.byte	0x91
 1361 0152 6D       		.sleb128 -19
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 34


 1362 0153 08       		.uleb128 0x8
 1363 0154 D8000000 		.4byte	.LASF23
 1364 0158 01       		.byte	0x1
 1365 0159 C4       		.byte	0xc4
 1366 015a 6F000000 		.4byte	0x6f
 1367 015e 02       		.byte	0x2
 1368 015f 91       		.byte	0x91
 1369 0160 74       		.sleb128 -12
 1370 0161 08       		.uleb128 0x8
 1371 0162 84010000 		.4byte	.LASF24
 1372 0166 01       		.byte	0x1
 1373 0167 C6       		.byte	0xc6
 1374 0168 6F000000 		.4byte	0x6f
 1375 016c 02       		.byte	0x2
 1376 016d 91       		.byte	0x91
 1377 016e 75       		.sleb128 -11
 1378 016f 08       		.uleb128 0x8
 1379 0170 7C000000 		.4byte	.LASF22
 1380 0174 01       		.byte	0x1
 1381 0175 C7       		.byte	0xc7
 1382 0176 7A000000 		.4byte	0x7a
 1383 017a 02       		.byte	0x2
 1384 017b 91       		.byte	0x91
 1385 017c 76       		.sleb128 -10
 1386 017d 00       		.byte	0x0
 1387 017e 0A       		.uleb128 0xa
 1388 017f 01       		.byte	0x1
 1389 0180 E0000000 		.4byte	.LASF28
 1390 0184 01       		.byte	0x1
 1391 0185 2901     		.2byte	0x129
 1392 0187 01       		.byte	0x1
 1393 0188 7A000000 		.4byte	0x7a
 1394 018c 00000000 		.4byte	.LFB5
 1395 0190 18000000 		.4byte	.LFE5
 1396 0194 FB000000 		.4byte	.LLST5
 1397 0198 0B       		.uleb128 0xb
 1398 0199 01       		.byte	0x1
 1399 019a AD000000 		.4byte	.LASF25
 1400 019e 01       		.byte	0x1
 1401 019f 4C01     		.2byte	0x14c
 1402 01a1 01       		.byte	0x1
 1403 01a2 00000000 		.4byte	.LFB6
 1404 01a6 3C000000 		.4byte	.LFE6
 1405 01aa 26010000 		.4byte	.LLST6
 1406 01ae C2010000 		.4byte	0x1c2
 1407 01b2 0C       		.uleb128 0xc
 1408 01b3 E0010000 		.4byte	.LASF26
 1409 01b7 01       		.byte	0x1
 1410 01b8 4C01     		.2byte	0x14c
 1411 01ba 6F000000 		.4byte	0x6f
 1412 01be 02       		.byte	0x2
 1413 01bf 91       		.byte	0x91
 1414 01c0 77       		.sleb128 -9
 1415 01c1 00       		.byte	0x0
 1416 01c2 0B       		.uleb128 0xb
 1417 01c3 01       		.byte	0x1
 1418 01c4 C1010000 		.4byte	.LASF27
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 35


 1419 01c8 01       		.byte	0x1
 1420 01c9 6F01     		.2byte	0x16f
 1421 01cb 01       		.byte	0x1
 1422 01cc 00000000 		.4byte	.LFB7
 1423 01d0 3E000000 		.4byte	.LFE7
 1424 01d4 5D010000 		.4byte	.LLST7
 1425 01d8 EC010000 		.4byte	0x1ec
 1426 01dc 0C       		.uleb128 0xc
 1427 01dd E0010000 		.4byte	.LASF26
 1428 01e1 01       		.byte	0x1
 1429 01e2 6F01     		.2byte	0x16f
 1430 01e4 6F000000 		.4byte	0x6f
 1431 01e8 02       		.byte	0x2
 1432 01e9 91       		.byte	0x91
 1433 01ea 77       		.sleb128 -9
 1434 01eb 00       		.byte	0x0
 1435 01ec 0A       		.uleb128 0xa
 1436 01ed 01       		.byte	0x1
 1437 01ee 0E000000 		.4byte	.LASF29
 1438 01f2 01       		.byte	0x1
 1439 01f3 8401     		.2byte	0x184
 1440 01f5 01       		.byte	0x1
 1441 01f6 6F000000 		.4byte	0x6f
 1442 01fa 00000000 		.4byte	.LFB8
 1443 01fe 1C000000 		.4byte	.LFE8
 1444 0202 94010000 		.4byte	.LLST8
 1445 0206 0B       		.uleb128 0xb
 1446 0207 01       		.byte	0x1
 1447 0208 F8020000 		.4byte	.LASF30
 1448 020c 01       		.byte	0x1
 1449 020d A301     		.2byte	0x1a3
 1450 020f 01       		.byte	0x1
 1451 0210 00000000 		.4byte	.LFB9
 1452 0214 FE000000 		.4byte	.LFE9
 1453 0218 BF010000 		.4byte	.LLST9
 1454 021c 4E020000 		.4byte	0x24e
 1455 0220 0C       		.uleb128 0xc
 1456 0221 D2020000 		.4byte	.LASF31
 1457 0225 01       		.byte	0x1
 1458 0226 A301     		.2byte	0x1a3
 1459 0228 6F000000 		.4byte	0x6f
 1460 022c 02       		.byte	0x2
 1461 022d 91       		.byte	0x91
 1462 022e 6F       		.sleb128 -17
 1463 022f 0D       		.uleb128 0xd
 1464 0230 FD010000 		.4byte	.LASF32
 1465 0234 01       		.byte	0x1
 1466 0235 A501     		.2byte	0x1a5
 1467 0237 7A000000 		.4byte	0x7a
 1468 023b 02       		.byte	0x2
 1469 023c 91       		.byte	0x91
 1470 023d 74       		.sleb128 -12
 1471 023e 0D       		.uleb128 0xd
 1472 023f F1020000 		.4byte	.LASF33
 1473 0243 01       		.byte	0x1
 1474 0244 A601     		.2byte	0x1a6
 1475 0246 6F000000 		.4byte	0x6f
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 36


 1476 024a 02       		.byte	0x2
 1477 024b 91       		.byte	0x91
 1478 024c 77       		.sleb128 -9
 1479 024d 00       		.byte	0x0
 1480 024e 0A       		.uleb128 0xa
 1481 024f 01       		.byte	0x1
 1482 0250 43000000 		.4byte	.LASF34
 1483 0254 01       		.byte	0x1
 1484 0255 D001     		.2byte	0x1d0
 1485 0257 01       		.byte	0x1
 1486 0258 6F000000 		.4byte	0x6f
 1487 025c 00000000 		.4byte	.LFB10
 1488 0260 1C000000 		.4byte	.LFE10
 1489 0264 F6010000 		.4byte	.LLST10
 1490 0268 0B       		.uleb128 0xb
 1491 0269 01       		.byte	0x1
 1492 026a 25010000 		.4byte	.LASF35
 1493 026e 01       		.byte	0x1
 1494 026f EC01     		.2byte	0x1ec
 1495 0271 01       		.byte	0x1
 1496 0272 00000000 		.4byte	.LFB11
 1497 0276 24000000 		.4byte	.LFE11
 1498 027a 21020000 		.4byte	.LLST11
 1499 027e 92020000 		.4byte	0x292
 1500 0282 0C       		.uleb128 0xc
 1501 0283 DC020000 		.4byte	.LASF36
 1502 0287 01       		.byte	0x1
 1503 0288 EC01     		.2byte	0x1ec
 1504 028a 6F000000 		.4byte	0x6f
 1505 028e 02       		.byte	0x2
 1506 028f 91       		.byte	0x91
 1507 0290 77       		.sleb128 -9
 1508 0291 00       		.byte	0x0
 1509 0292 0A       		.uleb128 0xa
 1510 0293 01       		.byte	0x1
 1511 0294 A3010000 		.4byte	.LASF37
 1512 0298 01       		.byte	0x1
 1513 0299 0102     		.2byte	0x201
 1514 029b 01       		.byte	0x1
 1515 029c 6F000000 		.4byte	0x6f
 1516 02a0 00000000 		.4byte	.LFB12
 1517 02a4 1C000000 		.4byte	.LFE12
 1518 02a8 58020000 		.4byte	.LLST12
 1519 02ac 00       		.byte	0x0
 1520              		.section	.debug_abbrev
 1521 0000 01       		.uleb128 0x1
 1522 0001 11       		.uleb128 0x11
 1523 0002 01       		.byte	0x1
 1524 0003 25       		.uleb128 0x25
 1525 0004 0E       		.uleb128 0xe
 1526 0005 13       		.uleb128 0x13
 1527 0006 0B       		.uleb128 0xb
 1528 0007 03       		.uleb128 0x3
 1529 0008 0E       		.uleb128 0xe
 1530 0009 1B       		.uleb128 0x1b
 1531 000a 0E       		.uleb128 0xe
 1532 000b 11       		.uleb128 0x11
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 37


 1533 000c 01       		.uleb128 0x1
 1534 000d 52       		.uleb128 0x52
 1535 000e 01       		.uleb128 0x1
 1536 000f 55       		.uleb128 0x55
 1537 0010 06       		.uleb128 0x6
 1538 0011 10       		.uleb128 0x10
 1539 0012 06       		.uleb128 0x6
 1540 0013 00       		.byte	0x0
 1541 0014 00       		.byte	0x0
 1542 0015 02       		.uleb128 0x2
 1543 0016 24       		.uleb128 0x24
 1544 0017 00       		.byte	0x0
 1545 0018 0B       		.uleb128 0xb
 1546 0019 0B       		.uleb128 0xb
 1547 001a 3E       		.uleb128 0x3e
 1548 001b 0B       		.uleb128 0xb
 1549 001c 03       		.uleb128 0x3
 1550 001d 0E       		.uleb128 0xe
 1551 001e 00       		.byte	0x0
 1552 001f 00       		.byte	0x0
 1553 0020 03       		.uleb128 0x3
 1554 0021 24       		.uleb128 0x24
 1555 0022 00       		.byte	0x0
 1556 0023 0B       		.uleb128 0xb
 1557 0024 0B       		.uleb128 0xb
 1558 0025 3E       		.uleb128 0x3e
 1559 0026 0B       		.uleb128 0xb
 1560 0027 03       		.uleb128 0x3
 1561 0028 08       		.uleb128 0x8
 1562 0029 00       		.byte	0x0
 1563 002a 00       		.byte	0x0
 1564 002b 04       		.uleb128 0x4
 1565 002c 16       		.uleb128 0x16
 1566 002d 00       		.byte	0x0
 1567 002e 03       		.uleb128 0x3
 1568 002f 0E       		.uleb128 0xe
 1569 0030 3A       		.uleb128 0x3a
 1570 0031 0B       		.uleb128 0xb
 1571 0032 3B       		.uleb128 0x3b
 1572 0033 0B       		.uleb128 0xb
 1573 0034 49       		.uleb128 0x49
 1574 0035 13       		.uleb128 0x13
 1575 0036 00       		.byte	0x0
 1576 0037 00       		.byte	0x0
 1577 0038 05       		.uleb128 0x5
 1578 0039 2E       		.uleb128 0x2e
 1579 003a 00       		.byte	0x0
 1580 003b 3F       		.uleb128 0x3f
 1581 003c 0C       		.uleb128 0xc
 1582 003d 03       		.uleb128 0x3
 1583 003e 0E       		.uleb128 0xe
 1584 003f 3A       		.uleb128 0x3a
 1585 0040 0B       		.uleb128 0xb
 1586 0041 3B       		.uleb128 0x3b
 1587 0042 0B       		.uleb128 0xb
 1588 0043 27       		.uleb128 0x27
 1589 0044 0C       		.uleb128 0xc
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 38


 1590 0045 11       		.uleb128 0x11
 1591 0046 01       		.uleb128 0x1
 1592 0047 12       		.uleb128 0x12
 1593 0048 01       		.uleb128 0x1
 1594 0049 40       		.uleb128 0x40
 1595 004a 06       		.uleb128 0x6
 1596 004b 00       		.byte	0x0
 1597 004c 00       		.byte	0x0
 1598 004d 06       		.uleb128 0x6
 1599 004e 2E       		.uleb128 0x2e
 1600 004f 01       		.byte	0x1
 1601 0050 3F       		.uleb128 0x3f
 1602 0051 0C       		.uleb128 0xc
 1603 0052 03       		.uleb128 0x3
 1604 0053 0E       		.uleb128 0xe
 1605 0054 3A       		.uleb128 0x3a
 1606 0055 0B       		.uleb128 0xb
 1607 0056 3B       		.uleb128 0x3b
 1608 0057 0B       		.uleb128 0xb
 1609 0058 27       		.uleb128 0x27
 1610 0059 0C       		.uleb128 0xc
 1611 005a 11       		.uleb128 0x11
 1612 005b 01       		.uleb128 0x1
 1613 005c 12       		.uleb128 0x12
 1614 005d 01       		.uleb128 0x1
 1615 005e 40       		.uleb128 0x40
 1616 005f 06       		.uleb128 0x6
 1617 0060 01       		.uleb128 0x1
 1618 0061 13       		.uleb128 0x13
 1619 0062 00       		.byte	0x0
 1620 0063 00       		.byte	0x0
 1621 0064 07       		.uleb128 0x7
 1622 0065 0B       		.uleb128 0xb
 1623 0066 01       		.byte	0x1
 1624 0067 11       		.uleb128 0x11
 1625 0068 01       		.uleb128 0x1
 1626 0069 12       		.uleb128 0x12
 1627 006a 01       		.uleb128 0x1
 1628 006b 00       		.byte	0x0
 1629 006c 00       		.byte	0x0
 1630 006d 08       		.uleb128 0x8
 1631 006e 34       		.uleb128 0x34
 1632 006f 00       		.byte	0x0
 1633 0070 03       		.uleb128 0x3
 1634 0071 0E       		.uleb128 0xe
 1635 0072 3A       		.uleb128 0x3a
 1636 0073 0B       		.uleb128 0xb
 1637 0074 3B       		.uleb128 0x3b
 1638 0075 0B       		.uleb128 0xb
 1639 0076 49       		.uleb128 0x49
 1640 0077 13       		.uleb128 0x13
 1641 0078 02       		.uleb128 0x2
 1642 0079 0A       		.uleb128 0xa
 1643 007a 00       		.byte	0x0
 1644 007b 00       		.byte	0x0
 1645 007c 09       		.uleb128 0x9
 1646 007d 05       		.uleb128 0x5
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 39


 1647 007e 00       		.byte	0x0
 1648 007f 03       		.uleb128 0x3
 1649 0080 0E       		.uleb128 0xe
 1650 0081 3A       		.uleb128 0x3a
 1651 0082 0B       		.uleb128 0xb
 1652 0083 3B       		.uleb128 0x3b
 1653 0084 0B       		.uleb128 0xb
 1654 0085 49       		.uleb128 0x49
 1655 0086 13       		.uleb128 0x13
 1656 0087 02       		.uleb128 0x2
 1657 0088 0A       		.uleb128 0xa
 1658 0089 00       		.byte	0x0
 1659 008a 00       		.byte	0x0
 1660 008b 0A       		.uleb128 0xa
 1661 008c 2E       		.uleb128 0x2e
 1662 008d 00       		.byte	0x0
 1663 008e 3F       		.uleb128 0x3f
 1664 008f 0C       		.uleb128 0xc
 1665 0090 03       		.uleb128 0x3
 1666 0091 0E       		.uleb128 0xe
 1667 0092 3A       		.uleb128 0x3a
 1668 0093 0B       		.uleb128 0xb
 1669 0094 3B       		.uleb128 0x3b
 1670 0095 05       		.uleb128 0x5
 1671 0096 27       		.uleb128 0x27
 1672 0097 0C       		.uleb128 0xc
 1673 0098 49       		.uleb128 0x49
 1674 0099 13       		.uleb128 0x13
 1675 009a 11       		.uleb128 0x11
 1676 009b 01       		.uleb128 0x1
 1677 009c 12       		.uleb128 0x12
 1678 009d 01       		.uleb128 0x1
 1679 009e 40       		.uleb128 0x40
 1680 009f 06       		.uleb128 0x6
 1681 00a0 00       		.byte	0x0
 1682 00a1 00       		.byte	0x0
 1683 00a2 0B       		.uleb128 0xb
 1684 00a3 2E       		.uleb128 0x2e
 1685 00a4 01       		.byte	0x1
 1686 00a5 3F       		.uleb128 0x3f
 1687 00a6 0C       		.uleb128 0xc
 1688 00a7 03       		.uleb128 0x3
 1689 00a8 0E       		.uleb128 0xe
 1690 00a9 3A       		.uleb128 0x3a
 1691 00aa 0B       		.uleb128 0xb
 1692 00ab 3B       		.uleb128 0x3b
 1693 00ac 05       		.uleb128 0x5
 1694 00ad 27       		.uleb128 0x27
 1695 00ae 0C       		.uleb128 0xc
 1696 00af 11       		.uleb128 0x11
 1697 00b0 01       		.uleb128 0x1
 1698 00b1 12       		.uleb128 0x12
 1699 00b2 01       		.uleb128 0x1
 1700 00b3 40       		.uleb128 0x40
 1701 00b4 06       		.uleb128 0x6
 1702 00b5 01       		.uleb128 0x1
 1703 00b6 13       		.uleb128 0x13
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 40


 1704 00b7 00       		.byte	0x0
 1705 00b8 00       		.byte	0x0
 1706 00b9 0C       		.uleb128 0xc
 1707 00ba 05       		.uleb128 0x5
 1708 00bb 00       		.byte	0x0
 1709 00bc 03       		.uleb128 0x3
 1710 00bd 0E       		.uleb128 0xe
 1711 00be 3A       		.uleb128 0x3a
 1712 00bf 0B       		.uleb128 0xb
 1713 00c0 3B       		.uleb128 0x3b
 1714 00c1 05       		.uleb128 0x5
 1715 00c2 49       		.uleb128 0x49
 1716 00c3 13       		.uleb128 0x13
 1717 00c4 02       		.uleb128 0x2
 1718 00c5 0A       		.uleb128 0xa
 1719 00c6 00       		.byte	0x0
 1720 00c7 00       		.byte	0x0
 1721 00c8 0D       		.uleb128 0xd
 1722 00c9 34       		.uleb128 0x34
 1723 00ca 00       		.byte	0x0
 1724 00cb 03       		.uleb128 0x3
 1725 00cc 0E       		.uleb128 0xe
 1726 00cd 3A       		.uleb128 0x3a
 1727 00ce 0B       		.uleb128 0xb
 1728 00cf 3B       		.uleb128 0x3b
 1729 00d0 05       		.uleb128 0x5
 1730 00d1 49       		.uleb128 0x49
 1731 00d2 13       		.uleb128 0x13
 1732 00d3 02       		.uleb128 0x2
 1733 00d4 0A       		.uleb128 0xa
 1734 00d5 00       		.byte	0x0
 1735 00d6 00       		.byte	0x0
 1736 00d7 00       		.byte	0x0
 1737              		.section	.debug_pubnames,"",%progbits
 1738 0000 AB010000 		.4byte	0x1ab
 1739 0004 0200     		.2byte	0x2
 1740 0006 00000000 		.4byte	.Ldebug_info0
 1741 000a AD020000 		.4byte	0x2ad
 1742 000e 9A000000 		.4byte	0x9a
 1743 0012 43795363 		.ascii	"CyScBoostClk_Start\000"
 1743      426F6F73 
 1743      74436C6B 
 1743      5F537461 
 1743      727400
 1744 0025 AF000000 		.4byte	0xaf
 1745 0029 43795363 		.ascii	"CyScBoostClk_Stop\000"
 1745      426F6F73 
 1745      74436C6B 
 1745      5F53746F 
 1745      7000
 1746 003b C4000000 		.4byte	0xc4
 1747 003f 43795363 		.ascii	"CyScBoostClk_StopBlock\000"
 1747      426F6F73 
 1747      74436C6B 
 1747      5F53746F 
 1747      70426C6F 
 1748 0056 F6000000 		.4byte	0xf6
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 41


 1749 005a 43795363 		.ascii	"CyScBoostClk_StandbyPower\000"
 1749      426F6F73 
 1749      74436C6B 
 1749      5F537461 
 1749      6E646279 
 1750 0074 1E010000 		.4byte	0x11e
 1751 0078 43795363 		.ascii	"CyScBoostClk_SetDividerRegister\000"
 1751      426F6F73 
 1751      74436C6B 
 1751      5F536574 
 1751      44697669 
 1752 0098 7E010000 		.4byte	0x17e
 1753 009c 43795363 		.ascii	"CyScBoostClk_GetDividerRegister\000"
 1753      426F6F73 
 1753      74436C6B 
 1753      5F476574 
 1753      44697669 
 1754 00bc 98010000 		.4byte	0x198
 1755 00c0 43795363 		.ascii	"CyScBoostClk_SetModeRegister\000"
 1755      426F6F73 
 1755      74436C6B 
 1755      5F536574 
 1755      4D6F6465 
 1756 00dd C2010000 		.4byte	0x1c2
 1757 00e1 43795363 		.ascii	"CyScBoostClk_ClearModeRegister\000"
 1757      426F6F73 
 1757      74436C6B 
 1757      5F436C65 
 1757      61724D6F 
 1758 0100 EC010000 		.4byte	0x1ec
 1759 0104 43795363 		.ascii	"CyScBoostClk_GetModeRegister\000"
 1759      426F6F73 
 1759      74436C6B 
 1759      5F476574 
 1759      4D6F6465 
 1760 0121 06020000 		.4byte	0x206
 1761 0125 43795363 		.ascii	"CyScBoostClk_SetSourceRegister\000"
 1761      426F6F73 
 1761      74436C6B 
 1761      5F536574 
 1761      536F7572 
 1762 0144 4E020000 		.4byte	0x24e
 1763 0148 43795363 		.ascii	"CyScBoostClk_GetSourceRegister\000"
 1763      426F6F73 
 1763      74436C6B 
 1763      5F476574 
 1763      536F7572 
 1764 0167 68020000 		.4byte	0x268
 1765 016b 43795363 		.ascii	"CyScBoostClk_SetPhaseRegister\000"
 1765      426F6F73 
 1765      74436C6B 
 1765      5F536574 
 1765      50686173 
 1766 0189 92020000 		.4byte	0x292
 1767 018d 43795363 		.ascii	"CyScBoostClk_GetPhaseRegister\000"
 1767      426F6F73 
 1767      74436C6B 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 42


 1767      5F476574 
 1767      50686173 
 1768 01ab 00000000 		.4byte	0x0
 1769              		.section	.debug_aranges,"",%progbits
 1770 0000 7C000000 		.4byte	0x7c
 1771 0004 0200     		.2byte	0x2
 1772 0006 00000000 		.4byte	.Ldebug_info0
 1773 000a 04       		.byte	0x4
 1774 000b 00       		.byte	0x0
 1775 000c 0000     		.2byte	0x0
 1776 000e 0000     		.2byte	0x0
 1777 0010 00000000 		.4byte	.LFB0
 1778 0014 42000000 		.4byte	.LFE0-.LFB0
 1779 0018 00000000 		.4byte	.LFB1
 1780 001c 3E000000 		.4byte	.LFE1-.LFB1
 1781 0020 00000000 		.4byte	.LFB2
 1782 0024 F4000000 		.4byte	.LFE2-.LFB2
 1783 0028 00000000 		.4byte	.LFB3
 1784 002c 52000000 		.4byte	.LFE3-.LFB3
 1785 0030 00000000 		.4byte	.LFB4
 1786 0034 E6010000 		.4byte	.LFE4-.LFB4
 1787 0038 00000000 		.4byte	.LFB5
 1788 003c 18000000 		.4byte	.LFE5-.LFB5
 1789 0040 00000000 		.4byte	.LFB6
 1790 0044 3C000000 		.4byte	.LFE6-.LFB6
 1791 0048 00000000 		.4byte	.LFB7
 1792 004c 3E000000 		.4byte	.LFE7-.LFB7
 1793 0050 00000000 		.4byte	.LFB8
 1794 0054 1C000000 		.4byte	.LFE8-.LFB8
 1795 0058 00000000 		.4byte	.LFB9
 1796 005c FE000000 		.4byte	.LFE9-.LFB9
 1797 0060 00000000 		.4byte	.LFB10
 1798 0064 1C000000 		.4byte	.LFE10-.LFB10
 1799 0068 00000000 		.4byte	.LFB11
 1800 006c 24000000 		.4byte	.LFE11-.LFB11
 1801 0070 00000000 		.4byte	.LFB12
 1802 0074 1C000000 		.4byte	.LFE12-.LFB12
 1803 0078 00000000 		.4byte	0x0
 1804 007c 00000000 		.4byte	0x0
 1805              		.section	.debug_ranges,"",%progbits
 1806              	.Ldebug_ranges0:
 1807 0000 00000000 		.4byte	.Ltext0
 1808 0004 00000000 		.4byte	.Letext0
 1809 0008 00000000 		.4byte	.LFB0
 1810 000c 42000000 		.4byte	.LFE0
 1811 0010 00000000 		.4byte	.LFB1
 1812 0014 3E000000 		.4byte	.LFE1
 1813 0018 00000000 		.4byte	.LFB2
 1814 001c F4000000 		.4byte	.LFE2
 1815 0020 00000000 		.4byte	.LFB3
 1816 0024 52000000 		.4byte	.LFE3
 1817 0028 00000000 		.4byte	.LFB4
 1818 002c E6010000 		.4byte	.LFE4
 1819 0030 00000000 		.4byte	.LFB5
 1820 0034 18000000 		.4byte	.LFE5
 1821 0038 00000000 		.4byte	.LFB6
 1822 003c 3C000000 		.4byte	.LFE6
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 43


 1823 0040 00000000 		.4byte	.LFB7
 1824 0044 3E000000 		.4byte	.LFE7
 1825 0048 00000000 		.4byte	.LFB8
 1826 004c 1C000000 		.4byte	.LFE8
 1827 0050 00000000 		.4byte	.LFB9
 1828 0054 FE000000 		.4byte	.LFE9
 1829 0058 00000000 		.4byte	.LFB10
 1830 005c 1C000000 		.4byte	.LFE10
 1831 0060 00000000 		.4byte	.LFB11
 1832 0064 24000000 		.4byte	.LFE11
 1833 0068 00000000 		.4byte	.LFB12
 1834 006c 1C000000 		.4byte	.LFE12
 1835 0070 00000000 		.4byte	0x0
 1836 0074 00000000 		.4byte	0x0
 1837              		.section	.debug_str,"MS",%progbits,1
 1838              	.LASF6:
 1839 0000 6C6F6E67 		.ascii	"long long int\000"
 1839      206C6F6E 
 1839      6720696E 
 1839      7400
 1840              	.LASF29:
 1841 000e 43795363 		.ascii	"CyScBoostClk_GetModeRegister\000"
 1841      426F6F73 
 1841      74436C6B 
 1841      5F476574 
 1841      4D6F6465 
 1842              	.LASF19:
 1843 002b 73746174 		.ascii	"state\000"
 1843      6500
 1844              	.LASF15:
 1845 0031 43795363 		.ascii	"CyScBoostClk_Stop\000"
 1845      426F6F73 
 1845      74436C6B 
 1845      5F53746F 
 1845      7000
 1846              	.LASF34:
 1847 0043 43795363 		.ascii	"CyScBoostClk_GetSourceRegister\000"
 1847      426F6F73 
 1847      74436C6B 
 1847      5F476574 
 1847      536F7572 
 1848              	.LASF17:
 1849 0062 43795363 		.ascii	"CyScBoostClk_StandbyPower\000"
 1849      426F6F73 
 1849      74436C6B 
 1849      5F537461 
 1849      6E646279 
 1850              	.LASF22:
 1851 007c 6F6C6444 		.ascii	"oldDivider\000"
 1851      69766964 
 1851      657200
 1852              	.LASF18:
 1853 0087 43795363 		.ascii	"CyScBoostClk_SetDividerRegister\000"
 1853      426F6F73 
 1853      74436C6B 
 1853      5F536574 
 1853      44697669 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 44


 1854              	.LASF11:
 1855 00a7 666C6F61 		.ascii	"float\000"
 1855      7400
 1856              	.LASF25:
 1857 00ad 43795363 		.ascii	"CyScBoostClk_SetModeRegister\000"
 1857      426F6F73 
 1857      74436C6B 
 1857      5F536574 
 1857      4D6F6465 
 1858              	.LASF1:
 1859 00ca 756E7369 		.ascii	"unsigned char\000"
 1859      676E6564 
 1859      20636861 
 1859      7200
 1860              	.LASF23:
 1861 00d8 656E6162 		.ascii	"enabled\000"
 1861      6C656400 
 1862              	.LASF28:
 1863 00e0 43795363 		.ascii	"CyScBoostClk_GetDividerRegister\000"
 1863      426F6F73 
 1863      74436C6B 
 1863      5F476574 
 1863      44697669 
 1864              	.LASF5:
 1865 0100 6C6F6E67 		.ascii	"long unsigned int\000"
 1865      20756E73 
 1865      69676E65 
 1865      6420696E 
 1865      7400
 1866              	.LASF3:
 1867 0112 73686F72 		.ascii	"short unsigned int\000"
 1867      7420756E 
 1867      7369676E 
 1867      65642069 
 1867      6E7400
 1868              	.LASF35:
 1869 0125 43795363 		.ascii	"CyScBoostClk_SetPhaseRegister\000"
 1869      426F6F73 
 1869      74436C6B 
 1869      5F536574 
 1869      50686173 
 1870              	.LASF20:
 1871 0143 636C6B44 		.ascii	"clkDivider\000"
 1871      69766964 
 1871      657200
 1872              	.LASF12:
 1873 014e 646F7562 		.ascii	"double\000"
 1873      6C6500
 1874              	.LASF21:
 1875 0155 72657374 		.ascii	"restart\000"
 1875      61727400 
 1876              	.LASF10:
 1877 015d 75696E74 		.ascii	"uint16\000"
 1877      313600
 1878              	.LASF14:
 1879 0164 43795363 		.ascii	"CyScBoostClk_Start\000"
 1879      426F6F73 
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 45


 1879      74436C6B 
 1879      5F537461 
 1879      727400
 1880              	.LASF8:
 1881 0177 756E7369 		.ascii	"unsigned int\000"
 1881      676E6564 
 1881      20696E74 
 1881      00
 1882              	.LASF24:
 1883 0184 63757272 		.ascii	"currSrc\000"
 1883      53726300 
 1884              	.LASF7:
 1885 018c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1885      206C6F6E 
 1885      6720756E 
 1885      7369676E 
 1885      65642069 
 1886              	.LASF37:
 1887 01a3 43795363 		.ascii	"CyScBoostClk_GetPhaseRegister\000"
 1887      426F6F73 
 1887      74436C6B 
 1887      5F476574 
 1887      50686173 
 1888              	.LASF27:
 1889 01c1 43795363 		.ascii	"CyScBoostClk_ClearModeRegister\000"
 1889      426F6F73 
 1889      74436C6B 
 1889      5F436C65 
 1889      61724D6F 
 1890              	.LASF26:
 1891 01e0 6D6F6465 		.ascii	"modeBitMask\000"
 1891      4269744D 
 1891      61736B00 
 1892              	.LASF38:
 1893 01ec 474E5520 		.ascii	"GNU C 4.4.1\000"
 1893      4320342E 
 1893      342E3100 
 1894              	.LASF13:
 1895 01f8 63686172 		.ascii	"char\000"
 1895      00
 1896              	.LASF32:
 1897 01fd 63757272 		.ascii	"currDiv\000"
 1897      44697600 
 1898              	.LASF2:
 1899 0205 73686F72 		.ascii	"short int\000"
 1899      7420696E 
 1899      7400
 1900              	.LASF9:
 1901 020f 75696E74 		.ascii	"uint8\000"
 1901      3800
 1902              	.LASF39:
 1903 0215 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CyScBoostClk.c\000"
 1903      6E657261 
 1903      7465645F 
 1903      536F7572 
 1903      63655C50 
 1904              	.LASF16:
ARM GAS  C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc1UROvL.s 			page 46


 1905 023d 43795363 		.ascii	"CyScBoostClk_StopBlock\000"
 1905      426F6F73 
 1905      74436C6B 
 1905      5F53746F 
 1905      70426C6F 
 1906              	.LASF40:
 1907 0254 5C5C7073 		.ascii	"\\\\psf\\Home\\Desktop\\PSOC5LP dev\\non-boot-bit-s"
 1907      665C486F 
 1907      6D655C44 
 1907      65736B74 
 1907      6F705C50 
 1908 0281 68696674 		.ascii	"hift-CY8C5667\\PioneerKit_P5LP_USB_Audio\\PioneerKi"
 1908      2D435938 
 1908      43353636 
 1908      375C5069 
 1908      6F6E6565 
 1909 02b2 745F5035 		.ascii	"t_P5LP_USB_Audio.cydsn\000"
 1909      4C505F55 
 1909      53425F41 
 1909      7564696F 
 1909      2E637964 
 1910              	.LASF4:
 1911 02c9 6C6F6E67 		.ascii	"long int\000"
 1911      20696E74 
 1911      00
 1912              	.LASF31:
 1913 02d2 636C6B53 		.ascii	"clkSource\000"
 1913      6F757263 
 1913      6500
 1914              	.LASF36:
 1915 02dc 636C6B50 		.ascii	"clkPhase\000"
 1915      68617365 
 1915      00
 1916              	.LASF0:
 1917 02e5 7369676E 		.ascii	"signed char\000"
 1917      65642063 
 1917      68617200 
 1918              	.LASF33:
 1919 02f1 6F6C6453 		.ascii	"oldSrc\000"
 1919      726300
 1920              	.LASF30:
 1921 02f8 43795363 		.ascii	"CyScBoostClk_SetSourceRegister\000"
 1921      426F6F73 
 1921      74436C6B 
 1921      5F536574 
 1921      536F7572 
 1922              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
